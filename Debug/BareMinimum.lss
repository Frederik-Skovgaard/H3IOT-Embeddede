
BareMinimum.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b4  00800200  00009dcc  00009e60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009dcc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000282  008002b4  008002b4  00009f14  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00009f14  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00009f44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000012a0  00000000  00000000  00009f84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00021f38  00000000  00000000  0000b224  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004d98  00000000  00000000  0002d15c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000cccd  00000000  00000000  00031ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00004f4c  00000000  00000000  0003ebc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007870  00000000  00000000  00043b10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000f667  00000000  00000000  0004b380  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000012f8  00000000  00000000  0005a9e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	68 c7       	rjmp	.+3792   	; 0xed2 <__dtors_end>
       2:	00 00       	nop
       4:	97 c7       	rjmp	.+3886   	; 0xf34 <__bad_interrupt>
       6:	00 00       	nop
       8:	95 c7       	rjmp	.+3882   	; 0xf34 <__bad_interrupt>
       a:	00 00       	nop
       c:	93 c7       	rjmp	.+3878   	; 0xf34 <__bad_interrupt>
       e:	00 00       	nop
      10:	91 c7       	rjmp	.+3874   	; 0xf34 <__bad_interrupt>
      12:	00 00       	nop
      14:	8f c7       	rjmp	.+3870   	; 0xf34 <__bad_interrupt>
      16:	00 00       	nop
      18:	8d c7       	rjmp	.+3866   	; 0xf34 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8b c7       	rjmp	.+3862   	; 0xf34 <__bad_interrupt>
      1e:	00 00       	nop
      20:	89 c7       	rjmp	.+3858   	; 0xf34 <__bad_interrupt>
      22:	00 00       	nop
      24:	87 c7       	rjmp	.+3854   	; 0xf34 <__bad_interrupt>
      26:	00 00       	nop
      28:	85 c7       	rjmp	.+3850   	; 0xf34 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	83 c7       	rjmp	.+3846   	; 0xf34 <__bad_interrupt>
      2e:	00 00       	nop
      30:	81 c7       	rjmp	.+3842   	; 0xf34 <__bad_interrupt>
      32:	00 00       	nop
      34:	7f c7       	rjmp	.+3838   	; 0xf34 <__bad_interrupt>
      36:	00 00       	nop
      38:	7d c7       	rjmp	.+3834   	; 0xf34 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7b c7       	rjmp	.+3830   	; 0xf34 <__bad_interrupt>
      3e:	00 00       	nop
      40:	79 c7       	rjmp	.+3826   	; 0xf34 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 67 41 	jmp	0x82ce	; 0x82ce <__vector_17>
      48:	75 c7       	rjmp	.+3818   	; 0xf34 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	73 c7       	rjmp	.+3814   	; 0xf34 <__bad_interrupt>
      4e:	00 00       	nop
      50:	71 c7       	rjmp	.+3810   	; 0xf34 <__bad_interrupt>
      52:	00 00       	nop
      54:	6f c7       	rjmp	.+3806   	; 0xf34 <__bad_interrupt>
      56:	00 00       	nop
      58:	6d c7       	rjmp	.+3802   	; 0xf34 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0c 94 3e 49 	jmp	0x927c	; 0x927c <__vector_23>
      60:	69 c7       	rjmp	.+3794   	; 0xf34 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 7d 47 	jmp	0x8efa	; 0x8efa <__vector_25>
      68:	0c 94 b3 47 	jmp	0x8f66	; 0x8f66 <__vector_26>
      6c:	63 c7       	rjmp	.+3782   	; 0xf34 <__bad_interrupt>
      6e:	00 00       	nop
      70:	61 c7       	rjmp	.+3778   	; 0xf34 <__bad_interrupt>
      72:	00 00       	nop
      74:	5f c7       	rjmp	.+3774   	; 0xf34 <__bad_interrupt>
      76:	00 00       	nop
      78:	5d c7       	rjmp	.+3770   	; 0xf34 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5b c7       	rjmp	.+3766   	; 0xf34 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 9e 41 	jmp	0x833c	; 0x833c <__vector_32>
      84:	57 c7       	rjmp	.+3758   	; 0xf34 <__bad_interrupt>
      86:	00 00       	nop
      88:	55 c7       	rjmp	.+3754   	; 0xf34 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	53 c7       	rjmp	.+3750   	; 0xf34 <__bad_interrupt>
      8e:	00 00       	nop
      90:	51 c7       	rjmp	.+3746   	; 0xf34 <__bad_interrupt>
      92:	00 00       	nop
      94:	4f c7       	rjmp	.+3742   	; 0xf34 <__bad_interrupt>
      96:	00 00       	nop
      98:	4d c7       	rjmp	.+3738   	; 0xf34 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	0c 94 e5 3a 	jmp	0x75ca	; 0x75ca <__vector_39>
      a0:	49 c7       	rjmp	.+3730   	; 0xf34 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	47 c7       	rjmp	.+3726   	; 0xf34 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 d5 41 	jmp	0x83aa	; 0x83aa <__vector_42>
      ac:	43 c7       	rjmp	.+3718   	; 0xf34 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	41 c7       	rjmp	.+3714   	; 0xf34 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3f c7       	rjmp	.+3710   	; 0xf34 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3d c7       	rjmp	.+3706   	; 0xf34 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 0c 42 	jmp	0x8418	; 0x8418 <__vector_47>
      c0:	39 c7       	rjmp	.+3698   	; 0xf34 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	37 c7       	rjmp	.+3694   	; 0xf34 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	35 c7       	rjmp	.+3690   	; 0xf34 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	33 c7       	rjmp	.+3686   	; 0xf34 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	31 c7       	rjmp	.+3682   	; 0xf34 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2f c7       	rjmp	.+3678   	; 0xf34 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2d c7       	rjmp	.+3674   	; 0xf34 <__bad_interrupt>
      da:	00 00       	nop
      dc:	2b c7       	rjmp	.+3670   	; 0xf34 <__bad_interrupt>
      de:	00 00       	nop
      e0:	29 c7       	rjmp	.+3666   	; 0xf34 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	15 3c       	cpi	r17, 0xC5	; 197
      e6:	1a 3c       	cpi	r17, 0xCA	; 202
      e8:	1a 3c       	cpi	r17, 0xCA	; 202
      ea:	1a 3c       	cpi	r17, 0xCA	; 202
      ec:	1a 3c       	cpi	r17, 0xCA	; 202
      ee:	1a 3c       	cpi	r17, 0xCA	; 202
      f0:	1a 3c       	cpi	r17, 0xCA	; 202
      f2:	1a 3c       	cpi	r17, 0xCA	; 202
      f4:	1b 3b       	cpi	r17, 0xBB	; 187
      f6:	1a 3c       	cpi	r17, 0xCA	; 202
      f8:	1a 3c       	cpi	r17, 0xCA	; 202
      fa:	1a 3c       	cpi	r17, 0xCA	; 202
      fc:	1a 3c       	cpi	r17, 0xCA	; 202
      fe:	1a 3c       	cpi	r17, 0xCA	; 202
     100:	1a 3c       	cpi	r17, 0xCA	; 202
     102:	1a 3c       	cpi	r17, 0xCA	; 202
     104:	1b 3b       	cpi	r17, 0xBB	; 187
     106:	1a 3c       	cpi	r17, 0xCA	; 202
     108:	1a 3c       	cpi	r17, 0xCA	; 202
     10a:	1a 3c       	cpi	r17, 0xCA	; 202
     10c:	1a 3c       	cpi	r17, 0xCA	; 202
     10e:	1a 3c       	cpi	r17, 0xCA	; 202
     110:	1a 3c       	cpi	r17, 0xCA	; 202
     112:	1a 3c       	cpi	r17, 0xCA	; 202
     114:	24 3b       	cpi	r18, 0xB4	; 180
     116:	1a 3c       	cpi	r17, 0xCA	; 202
     118:	1a 3c       	cpi	r17, 0xCA	; 202
     11a:	1a 3c       	cpi	r17, 0xCA	; 202
     11c:	1a 3c       	cpi	r17, 0xCA	; 202
     11e:	1a 3c       	cpi	r17, 0xCA	; 202
     120:	1a 3c       	cpi	r17, 0xCA	; 202
     122:	1a 3c       	cpi	r17, 0xCA	; 202
     124:	4e 3b       	cpi	r20, 0xBE	; 190
     126:	1a 3c       	cpi	r17, 0xCA	; 202
     128:	1a 3c       	cpi	r17, 0xCA	; 202
     12a:	1a 3c       	cpi	r17, 0xCA	; 202
     12c:	1a 3c       	cpi	r17, 0xCA	; 202
     12e:	1a 3c       	cpi	r17, 0xCA	; 202
     130:	1a 3c       	cpi	r17, 0xCA	; 202
     132:	1a 3c       	cpi	r17, 0xCA	; 202
     134:	24 3b       	cpi	r18, 0xB4	; 180
     136:	1a 3c       	cpi	r17, 0xCA	; 202
     138:	1a 3c       	cpi	r17, 0xCA	; 202
     13a:	1a 3c       	cpi	r17, 0xCA	; 202
     13c:	1a 3c       	cpi	r17, 0xCA	; 202
     13e:	1a 3c       	cpi	r17, 0xCA	; 202
     140:	1a 3c       	cpi	r17, 0xCA	; 202
     142:	1a 3c       	cpi	r17, 0xCA	; 202
     144:	53 3b       	cpi	r21, 0xB3	; 179
     146:	1a 3c       	cpi	r17, 0xCA	; 202
     148:	1a 3c       	cpi	r17, 0xCA	; 202
     14a:	1a 3c       	cpi	r17, 0xCA	; 202
     14c:	1a 3c       	cpi	r17, 0xCA	; 202
     14e:	1a 3c       	cpi	r17, 0xCA	; 202
     150:	1a 3c       	cpi	r17, 0xCA	; 202
     152:	1a 3c       	cpi	r17, 0xCA	; 202
     154:	58 3b       	cpi	r21, 0xB8	; 184
     156:	1a 3c       	cpi	r17, 0xCA	; 202
     158:	1a 3c       	cpi	r17, 0xCA	; 202
     15a:	1a 3c       	cpi	r17, 0xCA	; 202
     15c:	1a 3c       	cpi	r17, 0xCA	; 202
     15e:	1a 3c       	cpi	r17, 0xCA	; 202
     160:	1a 3c       	cpi	r17, 0xCA	; 202
     162:	1a 3c       	cpi	r17, 0xCA	; 202
     164:	6d 3b       	cpi	r22, 0xBD	; 189
     166:	1a 3c       	cpi	r17, 0xCA	; 202
     168:	1a 3c       	cpi	r17, 0xCA	; 202
     16a:	1a 3c       	cpi	r17, 0xCA	; 202
     16c:	1a 3c       	cpi	r17, 0xCA	; 202
     16e:	1a 3c       	cpi	r17, 0xCA	; 202
     170:	1a 3c       	cpi	r17, 0xCA	; 202
     172:	1a 3c       	cpi	r17, 0xCA	; 202
     174:	9a 3b       	cpi	r25, 0xBA	; 186
     176:	1a 3c       	cpi	r17, 0xCA	; 202
     178:	1a 3c       	cpi	r17, 0xCA	; 202
     17a:	1a 3c       	cpi	r17, 0xCA	; 202
     17c:	1a 3c       	cpi	r17, 0xCA	; 202
     17e:	1a 3c       	cpi	r17, 0xCA	; 202
     180:	1a 3c       	cpi	r17, 0xCA	; 202
     182:	1a 3c       	cpi	r17, 0xCA	; 202
     184:	5d 3b       	cpi	r21, 0xBD	; 189
     186:	1a 3c       	cpi	r17, 0xCA	; 202
     188:	1a 3c       	cpi	r17, 0xCA	; 202
     18a:	1a 3c       	cpi	r17, 0xCA	; 202
     18c:	1a 3c       	cpi	r17, 0xCA	; 202
     18e:	1a 3c       	cpi	r17, 0xCA	; 202
     190:	1a 3c       	cpi	r17, 0xCA	; 202
     192:	1a 3c       	cpi	r17, 0xCA	; 202
     194:	79 3b       	cpi	r23, 0xB9	; 185
     196:	1a 3c       	cpi	r17, 0xCA	; 202
     198:	1a 3c       	cpi	r17, 0xCA	; 202
     19a:	1a 3c       	cpi	r17, 0xCA	; 202
     19c:	1a 3c       	cpi	r17, 0xCA	; 202
     19e:	1a 3c       	cpi	r17, 0xCA	; 202
     1a0:	1a 3c       	cpi	r17, 0xCA	; 202
     1a2:	1a 3c       	cpi	r17, 0xCA	; 202
     1a4:	9c 3b       	cpi	r25, 0xBC	; 188
     1a6:	1a 3c       	cpi	r17, 0xCA	; 202
     1a8:	1a 3c       	cpi	r17, 0xCA	; 202
     1aa:	1a 3c       	cpi	r17, 0xCA	; 202
     1ac:	1a 3c       	cpi	r17, 0xCA	; 202
     1ae:	1a 3c       	cpi	r17, 0xCA	; 202
     1b0:	1a 3c       	cpi	r17, 0xCA	; 202
     1b2:	1a 3c       	cpi	r17, 0xCA	; 202
     1b4:	9c 3b       	cpi	r25, 0xBC	; 188
     1b6:	1a 3c       	cpi	r17, 0xCA	; 202
     1b8:	1a 3c       	cpi	r17, 0xCA	; 202
     1ba:	1a 3c       	cpi	r17, 0xCA	; 202
     1bc:	1a 3c       	cpi	r17, 0xCA	; 202
     1be:	1a 3c       	cpi	r17, 0xCA	; 202
     1c0:	1a 3c       	cpi	r17, 0xCA	; 202
     1c2:	1a 3c       	cpi	r17, 0xCA	; 202
     1c4:	9c 3b       	cpi	r25, 0xBC	; 188
     1c6:	1a 3c       	cpi	r17, 0xCA	; 202
     1c8:	1a 3c       	cpi	r17, 0xCA	; 202
     1ca:	1a 3c       	cpi	r17, 0xCA	; 202
     1cc:	1a 3c       	cpi	r17, 0xCA	; 202
     1ce:	1a 3c       	cpi	r17, 0xCA	; 202
     1d0:	1a 3c       	cpi	r17, 0xCA	; 202
     1d2:	1a 3c       	cpi	r17, 0xCA	; 202
     1d4:	9c 3b       	cpi	r25, 0xBC	; 188
     1d6:	1a 3c       	cpi	r17, 0xCA	; 202
     1d8:	1a 3c       	cpi	r17, 0xCA	; 202
     1da:	1a 3c       	cpi	r17, 0xCA	; 202
     1dc:	1a 3c       	cpi	r17, 0xCA	; 202
     1de:	1a 3c       	cpi	r17, 0xCA	; 202
     1e0:	1a 3c       	cpi	r17, 0xCA	; 202
     1e2:	1a 3c       	cpi	r17, 0xCA	; 202
     1e4:	a4 3b       	cpi	r26, 0xB4	; 180
     1e6:	1a 3c       	cpi	r17, 0xCA	; 202
     1e8:	1a 3c       	cpi	r17, 0xCA	; 202
     1ea:	1a 3c       	cpi	r17, 0xCA	; 202
     1ec:	1a 3c       	cpi	r17, 0xCA	; 202
     1ee:	1a 3c       	cpi	r17, 0xCA	; 202
     1f0:	1a 3c       	cpi	r17, 0xCA	; 202
     1f2:	1a 3c       	cpi	r17, 0xCA	; 202
     1f4:	db 3b       	cpi	r29, 0xBB	; 187
     1f6:	1a 3c       	cpi	r17, 0xCA	; 202
     1f8:	1a 3c       	cpi	r17, 0xCA	; 202
     1fa:	1a 3c       	cpi	r17, 0xCA	; 202
     1fc:	1a 3c       	cpi	r17, 0xCA	; 202
     1fe:	1a 3c       	cpi	r17, 0xCA	; 202
     200:	1a 3c       	cpi	r17, 0xCA	; 202
     202:	1a 3c       	cpi	r17, 0xCA	; 202
     204:	a4 3b       	cpi	r26, 0xB4	; 180
     206:	1a 3c       	cpi	r17, 0xCA	; 202
     208:	1a 3c       	cpi	r17, 0xCA	; 202
     20a:	1a 3c       	cpi	r17, 0xCA	; 202
     20c:	1a 3c       	cpi	r17, 0xCA	; 202
     20e:	1a 3c       	cpi	r17, 0xCA	; 202
     210:	1a 3c       	cpi	r17, 0xCA	; 202
     212:	1a 3c       	cpi	r17, 0xCA	; 202
     214:	db 3b       	cpi	r29, 0xBB	; 187
     216:	1a 3c       	cpi	r17, 0xCA	; 202
     218:	1a 3c       	cpi	r17, 0xCA	; 202
     21a:	1a 3c       	cpi	r17, 0xCA	; 202
     21c:	1a 3c       	cpi	r17, 0xCA	; 202
     21e:	1a 3c       	cpi	r17, 0xCA	; 202
     220:	1a 3c       	cpi	r17, 0xCA	; 202
     222:	1a 3c       	cpi	r17, 0xCA	; 202
     224:	be 3b       	cpi	r27, 0xBE	; 190
     226:	1a 3c       	cpi	r17, 0xCA	; 202
     228:	1a 3c       	cpi	r17, 0xCA	; 202
     22a:	1a 3c       	cpi	r17, 0xCA	; 202
     22c:	1a 3c       	cpi	r17, 0xCA	; 202
     22e:	1a 3c       	cpi	r17, 0xCA	; 202
     230:	1a 3c       	cpi	r17, 0xCA	; 202
     232:	1a 3c       	cpi	r17, 0xCA	; 202
     234:	de 3b       	cpi	r29, 0xBE	; 190
     236:	1a 3c       	cpi	r17, 0xCA	; 202
     238:	1a 3c       	cpi	r17, 0xCA	; 202
     23a:	1a 3c       	cpi	r17, 0xCA	; 202
     23c:	1a 3c       	cpi	r17, 0xCA	; 202
     23e:	1a 3c       	cpi	r17, 0xCA	; 202
     240:	1a 3c       	cpi	r17, 0xCA	; 202
     242:	1a 3c       	cpi	r17, 0xCA	; 202
     244:	de 3b       	cpi	r29, 0xBE	; 190
     246:	1a 3c       	cpi	r17, 0xCA	; 202
     248:	1a 3c       	cpi	r17, 0xCA	; 202
     24a:	1a 3c       	cpi	r17, 0xCA	; 202
     24c:	1a 3c       	cpi	r17, 0xCA	; 202
     24e:	1a 3c       	cpi	r17, 0xCA	; 202
     250:	1a 3c       	cpi	r17, 0xCA	; 202
     252:	1a 3c       	cpi	r17, 0xCA	; 202
     254:	f4 3b       	cpi	r31, 0xB4	; 180
     256:	1a 3c       	cpi	r17, 0xCA	; 202
     258:	1a 3c       	cpi	r17, 0xCA	; 202
     25a:	1a 3c       	cpi	r17, 0xCA	; 202
     25c:	1a 3c       	cpi	r17, 0xCA	; 202
     25e:	1a 3c       	cpi	r17, 0xCA	; 202
     260:	1a 3c       	cpi	r17, 0xCA	; 202
     262:	1a 3c       	cpi	r17, 0xCA	; 202
     264:	10 3c       	cpi	r17, 0xC0	; 192
     266:	1a 3c       	cpi	r17, 0xCA	; 202
     268:	1a 3c       	cpi	r17, 0xCA	; 202
     26a:	1a 3c       	cpi	r17, 0xCA	; 202
     26c:	1a 3c       	cpi	r17, 0xCA	; 202
     26e:	1a 3c       	cpi	r17, 0xCA	; 202
     270:	1a 3c       	cpi	r17, 0xCA	; 202
     272:	1a 3c       	cpi	r17, 0xCA	; 202
     274:	10 3c       	cpi	r17, 0xC0	; 192
     276:	1a 3c       	cpi	r17, 0xCA	; 202
     278:	1a 3c       	cpi	r17, 0xCA	; 202
     27a:	1a 3c       	cpi	r17, 0xCA	; 202
     27c:	1a 3c       	cpi	r17, 0xCA	; 202
     27e:	1a 3c       	cpi	r17, 0xCA	; 202
     280:	1a 3c       	cpi	r17, 0xCA	; 202
     282:	1a 3c       	cpi	r17, 0xCA	; 202
     284:	1a 3c       	cpi	r17, 0xCA	; 202
     286:	1a 3c       	cpi	r17, 0xCA	; 202
     288:	1a 3c       	cpi	r17, 0xCA	; 202
     28a:	1a 3c       	cpi	r17, 0xCA	; 202
     28c:	1a 3c       	cpi	r17, 0xCA	; 202
     28e:	1a 3c       	cpi	r17, 0xCA	; 202
     290:	1a 3c       	cpi	r17, 0xCA	; 202
     292:	1a 3c       	cpi	r17, 0xCA	; 202
     294:	1a 3c       	cpi	r17, 0xCA	; 202
     296:	1a 3c       	cpi	r17, 0xCA	; 202
     298:	1a 3c       	cpi	r17, 0xCA	; 202
     29a:	1a 3c       	cpi	r17, 0xCA	; 202
     29c:	1a 3c       	cpi	r17, 0xCA	; 202
     29e:	1a 3c       	cpi	r17, 0xCA	; 202
     2a0:	1a 3c       	cpi	r17, 0xCA	; 202
     2a2:	1a 3c       	cpi	r17, 0xCA	; 202
     2a4:	1a 3c       	cpi	r17, 0xCA	; 202
     2a6:	1a 3c       	cpi	r17, 0xCA	; 202
     2a8:	1a 3c       	cpi	r17, 0xCA	; 202
     2aa:	1a 3c       	cpi	r17, 0xCA	; 202
     2ac:	1a 3c       	cpi	r17, 0xCA	; 202
     2ae:	1a 3c       	cpi	r17, 0xCA	; 202
     2b0:	1a 3c       	cpi	r17, 0xCA	; 202
     2b2:	1a 3c       	cpi	r17, 0xCA	; 202
     2b4:	1a 3c       	cpi	r17, 0xCA	; 202
     2b6:	1a 3c       	cpi	r17, 0xCA	; 202
     2b8:	1a 3c       	cpi	r17, 0xCA	; 202
     2ba:	1a 3c       	cpi	r17, 0xCA	; 202
     2bc:	1a 3c       	cpi	r17, 0xCA	; 202
     2be:	1a 3c       	cpi	r17, 0xCA	; 202
     2c0:	1a 3c       	cpi	r17, 0xCA	; 202
     2c2:	1a 3c       	cpi	r17, 0xCA	; 202
     2c4:	1a 3c       	cpi	r17, 0xCA	; 202
     2c6:	1a 3c       	cpi	r17, 0xCA	; 202
     2c8:	1a 3c       	cpi	r17, 0xCA	; 202
     2ca:	1a 3c       	cpi	r17, 0xCA	; 202
     2cc:	1a 3c       	cpi	r17, 0xCA	; 202
     2ce:	1a 3c       	cpi	r17, 0xCA	; 202
     2d0:	1a 3c       	cpi	r17, 0xCA	; 202
     2d2:	1a 3c       	cpi	r17, 0xCA	; 202
     2d4:	19 3c       	cpi	r17, 0xC9	; 201
     2d6:	07 63       	ori	r16, 0x37	; 55
     2d8:	42 36       	cpi	r20, 0x62	; 98
     2da:	b7 9b       	sbis	0x16, 7	; 22
     2dc:	d8 a7       	std	Y+40, r29	; 0x28
     2de:	1a 39       	cpi	r17, 0x9A	; 154
     2e0:	68 56       	subi	r22, 0x68	; 104
     2e2:	18 ae       	std	Y+56, r1	; 0x38
     2e4:	ba ab       	std	Y+50, r27	; 0x32
     2e6:	55 8c       	ldd	r5, Z+29	; 0x1d
     2e8:	1d 3c       	cpi	r17, 0xCD	; 205
     2ea:	b7 cc       	rjmp	.-1682   	; 0xfffffc5a <__eeprom_end+0xff7efc5a>
     2ec:	57 63       	ori	r21, 0x37	; 55
     2ee:	bd 6d       	ori	r27, 0xDD	; 221
     2f0:	ed fd       	.word	0xfded	; ????
     2f2:	75 3e       	cpi	r23, 0xE5	; 229
     2f4:	f6 17       	cp	r31, r22
     2f6:	72 31       	cpi	r23, 0x12	; 18
     2f8:	bf 00       	.word	0x00bf	; ????
     2fa:	00 00       	nop
     2fc:	80 3f       	cpi	r24, 0xF0	; 240
     2fe:	08 00       	.word	0x0008	; ????
     300:	00 00       	nop
     302:	be 92       	st	-X, r11
     304:	24 49       	sbci	r18, 0x94	; 148
     306:	12 3e       	cpi	r17, 0xE2	; 226
     308:	ab aa       	std	Y+51, r10	; 0x33
     30a:	aa 2a       	or	r10, r26
     30c:	be cd       	rjmp	.-1156   	; 0xfffffe8a <__eeprom_end+0xff7efe8a>
     30e:	cc cc       	rjmp	.-1640   	; 0xfffffca8 <__eeprom_end+0xff7efca8>
     310:	4c 3e       	cpi	r20, 0xEC	; 236
     312:	00 00       	nop
     314:	00 80       	ld	r0, Z
     316:	be ab       	std	Y+54, r27	; 0x36
     318:	aa aa       	std	Y+50, r10	; 0x32
     31a:	aa 3e       	cpi	r26, 0xEA	; 234
     31c:	00 00       	nop
     31e:	00 00       	nop
     320:	bf 00       	.word	0x00bf	; ????
     322:	00 00       	nop
     324:	80 3f       	cpi	r24, 0xF0	; 240
     326:	00 00       	nop
     328:	00 00       	nop
     32a:	00 08       	sbc	r0, r0
     32c:	41 78       	andi	r20, 0x81	; 129
     32e:	d3 bb       	out	0x13, r29	; 19
     330:	43 87       	std	Z+11, r20	; 0x0b
     332:	d1 13       	cpse	r29, r17
     334:	3d 19       	sub	r19, r13
     336:	0e 3c       	cpi	r16, 0xCE	; 206
     338:	c3 bd       	out	0x23, r28	; 35
     33a:	42 82       	std	Z+2, r4	; 0x02
     33c:	ad 2b       	or	r26, r29
     33e:	3e 68       	ori	r19, 0x8E	; 142
     340:	ec 82       	std	Y+4, r14	; 0x04
     342:	76 be       	out	0x36, r7	; 54
     344:	d9 8f       	std	Y+25, r29	; 0x19
     346:	e1 a9       	ldd	r30, Z+49	; 0x31
     348:	3e 4c       	sbci	r19, 0xCE	; 206
     34a:	80 ef       	ldi	r24, 0xF0	; 240
     34c:	ff be       	out	0x3f, r15	; 63
     34e:	01 c4       	rjmp	.+2050   	; 0xb52 <_ZL12splash1_data+0x272>
     350:	ff 7f       	andi	r31, 0xFF	; 255
     352:	3f 00       	.word	0x003f	; ????
     354:	00 00       	nop
     356:	00 00       	nop
     358:	79 4a       	sbci	r23, 0xA9	; 169
     35a:	7c 4a       	sbci	r23, 0xAC	; 172
     35c:	6b 4a       	sbci	r22, 0xAB	; 171
     35e:	6f 4a       	sbci	r22, 0xAF	; 175
     360:	75 4a       	sbci	r23, 0xA5	; 165
     362:	b3 4a       	sbci	r27, 0xA3	; 163
     364:	80 4a       	sbci	r24, 0xA0	; 160
     366:	84 4a       	sbci	r24, 0xA4	; 164
     368:	8a 4a       	sbci	r24, 0xAA	; 170
     36a:	8e 4a       	sbci	r24, 0xAE	; 174
     36c:	92 4a       	sbci	r25, 0xA2	; 162
     36e:	98 4a       	sbci	r25, 0xA8	; 168
     370:	9c 4a       	sbci	r25, 0xAC	; 172
     372:	a0 4a       	sbci	r26, 0xA0	; 160
     374:	b3 4a       	sbci	r27, 0xA3	; 163
     376:	a6 4a       	sbci	r26, 0xA6	; 166
     378:	aa 4a       	sbci	r26, 0xAA	; 170
     37a:	ae 4a       	sbci	r26, 0xAE	; 174

0000037c <__trampolines_end>:
     37c:	53 53       	subi	r21, 0x33	; 51
     37e:	44 31       	cpi	r20, 0x14	; 20
     380:	33 30       	cpi	r19, 0x03	; 3
     382:	36 20       	and	r3, r6
     384:	61 6c       	ori	r22, 0xC1	; 193
     386:	6c 6f       	ori	r22, 0xFC	; 252
     388:	63 61       	ori	r22, 0x13	; 19
     38a:	74 69       	ori	r23, 0x94	; 148
     38c:	6f 6e       	ori	r22, 0xEF	; 239
     38e:	20 66       	ori	r18, 0x60	; 96
     390:	61 69       	ori	r22, 0x91	; 145
     392:	6c 65       	ori	r22, 0x5C	; 92
     394:	64 00       	.word	0x0064	; ????

00000396 <_ZZ4loopE3__c>:
     396:	46 61 69 6c 65 64 20 74 6f 20 72 65 61 64 20 66     Failed to read f
     3a6:	72 6f 6d 20 44 48 54 20 73 65 6e 73 6f 72 21 00     rom DHT sensor!.

000003b6 <_ZZ11DisplayTempiiE3__c>:
     3b6:	48 75 6d 3a 20 00                                   Hum: .

000003bc <_ZZ11DisplayTempiiE3__c_0>:
     3bc:	25 00                                               %.

000003be <_ZZ11DisplayTempiiE3__c_1>:
     3be:	54 65 6d 70 3a 20 00                                Temp: .

000003c5 <_ZZ11DisplayTempiiE3__c_2>:
     3c5:	43 20 00                                            C .

000003c8 <_ZL9daysArray>:
     3c8:	1f 1c 1f 1e 1f 1e 1f 1f 1e 1f 1e 1f                 ............

000003d4 <_ZL8dowArray>:
     3d4:	00 03 02 05 00 03 05 01 04 06 02 04                 ............

000003e0 <_ZL4font>:
     3e0:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
     3f0:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
     400:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
     410:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
     420:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
     430:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
     440:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
     450:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
     460:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
     470:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
     480:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     490:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     4a0:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
     4b0:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
     4c0:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
     4d0:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
     4e0:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
     4f0:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
     500:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
     510:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
     520:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
     530:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
     540:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
     550:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     560:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     570:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     580:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     590:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
     5a0:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
     5b0:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
     5c0:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
     5d0:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
     5e0:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
     5f0:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
     600:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
     610:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
     620:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
     630:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
     640:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
     650:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
     660:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
     670:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
     680:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
     690:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
     6a0:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
     6b0:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
     6c0:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
     6d0:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
     6e0:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
     6f0:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
     700:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
     710:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
     720:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
     730:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
     740:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
     750:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
     760:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
     770:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
     780:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
     790:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
     7a0:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
     7b0:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
     7c0:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
     7d0:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
     7e0:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
     7f0:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
     800:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
     810:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
     820:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
     830:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
     840:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
     850:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
     860:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
     870:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
     880:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
     890:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
     8a0:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
     8b0:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
     8c0:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
     8d0:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....

000008e0 <_ZL12splash1_data>:
     8e0:	00 00 00 00 00 01 80 00 00 00 00 00 00 00 00 00     ................
     8f0:	03 80 00 00 00 00 00 00 00 00 00 07 c0 00 00 00     ................
     900:	00 00 00 00 00 00 07 c0 00 00 00 00 00 00 00 00     ................
     910:	00 0f c0 00 00 00 00 00 00 00 00 00 1f e0 00 00     ................
     920:	00 00 00 00 00 00 00 1f e0 00 00 00 00 00 00 00     ................
     930:	00 00 3f e0 00 00 00 00 00 00 00 00 00 3f f0 00     ..?..........?..
	...
     948:	7f f0 00 00 00 00 00 00 00 1f f8 7f f0 00 00 00     ................
     958:	00 00 00 00 3f fe 7f f0 00 00 00 00 00 00 00 3f     ....?..........?
     968:	ff 7f f0 00 00 00 00 00 00 00 1f ff fb e0 00 00     ................
     978:	00 00 00 00 00 0f ff f9 ff c0 00 00 00 00 00 00     ................
     988:	0f ff f9 ff f8 00 00 00 00 00 00 07 ff f1 ff ff     ................
     998:	00 00 00 00 00 00 03 fc 73 ff ff 80 00 00 00 00     ........s.......
     9a8:	00 01 fe 3f ff ff 80 00 00 00 00 00 00 ff 1e 0f     ...?............
     9b8:	ff 00 00 00 00 00 00 00 7f fe 1f fc 00 00 00 00     ................
     9c8:	00 00 00 3f ff ff f8 00 00 00 00 00 00 00 0f df     ...?............
     9d8:	ff e0 00 00 00 00 00 00 00 1f 19 ff c0 00 00 00     ................
     9e8:	00 00 00 00 3f 3c ff 00 00 00 00 00 00 00 00 7e     ....?<.........~
     9f8:	7c f8 00 00 00 00 00 00 00 00 7f fe 7c 00 00 00     |...........|...
     a08:	00 00 00 00 00 ff ff fc 00 00 00 00 00 00 00 00     ................
     a18:	ff ff fe 00 00 00 00 00 00 00 00 ff ff fe 00 00     ................
     a28:	00 00 00 00 00 01 ff ef fe 00 00 00 00 00 00 00     ................
     a38:	01 ff cf fe 00 00 00 00 00 00 00 03 ff 07 fe 00     ................
     a48:	00 00 00 00 00 00 03 fc 07 fe 00 00 00 00 00 00     ................
     a58:	00 03 f0 03 fe 00 00 00 00 00 00 00 01 80 00 fe     ................
	...
     a70:	00 00 7e 00 00 00 00 00 00 00 00 00 00 3e 00 00     ..~..........>..
	...
     a88:	0c 00 00 00 00 00 00 07 80 00 fc 00 00 03 c0 00     ................
     a98:	00 00 07 80 01 fc 00 00 03 c0 00 00 00 07 80 01     ................
     aa8:	fc 00 00 03 c0 00 00 00 07 80 01 e0 00 00 00 1e     ................
     ab8:	00 00 00 07 80 01 e0 00 00 00 1e 00 7f e3 f7 9f     ................
     ac8:	f9 fd e7 78 7b df c0 ff f7 ff bf fd fd ff 78 7b     ...x{.........x{
     ad8:	df c0 ff f7 ff bf fd fd ff 78 7b df c0 f0 f7 87     .........x{.....
     ae8:	bc 3d e1 ff 78 7b de 00 f0 f7 87 bc 3d e1 f0 78     .=..x{......=..x
     af8:	7b de 00 00 f7 87 80 3d e1 e0 78 7b de 00 7f f7     {......=..x{....
     b08:	87 9f fd e1 e0 78 7b de 00 ff f7 87 bf fd e1 e0     .....x{.........
     b18:	78 7b de 00 f0 f7 87 bc 3d e1 e0 78 7b de 00 f0     x{......=..x{...
     b28:	f7 87 bc 3d e1 e0 78 7b de 00 f0 f7 87 bc 3d e1     ...=..x{......=.
     b38:	e0 78 7b de 00 ff f7 ff bf fd e1 e0 7f fb df c0     .x{.............
     b48:	ff f7 ff bf fd e1 e0 7f fb df c0 7c f3 f3 9f 3d     ...........|...=
     b58:	e1 e0 3e 7b cf c0 00 00 00 00 00 00 00 00 00 00     ..>{............
     b68:	00 ff ff ff ff ff ff ff ff ff ff c0 ff ff ff ff     ................
     b78:	fd 68 db 11 1a 31 c0 ff ff ff ff fd 2b 5a fb 6a     .h...1......+Z.j
     b88:	ef c0 ff ff ff ff fd 4b 5b 3b 1a 33 c0 ff ff ff     .......K[;.3....
     b98:	ff fd 6b 5b db 6a fd c0                             ..k[.j..

00000ba0 <_ZL12splash2_data>:
     ba0:	00 00 60 00 00 00 00 00 00 00 00 00 00 00 00 00     ..`.............
     bb0:	00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
     bc0:	e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 f0     ................
	...
     bdc:	00 03 f0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     bec:	07 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 07     ................
     bfc:	f8 00 00 00 00 00 00 00 00 00 00 00 00 00 0f f8     ................
     c0c:	00 00 00 03 c0 00 7e 00 00 01 e0 00 7f 0f f8 00     ......~.........
     c1c:	00 00 03 c0 00 fe 00 00 01 e0 00 ff ef f8 00 00     ................
     c2c:	00 03 c0 00 fe 00 00 01 e0 00 ff ff f8 00 00 00     ................
     c3c:	03 c0 00 f0 00 00 00 0f 00 7f fe 7f c0 00 00 03     ................
     c4c:	c0 00 f0 00 00 00 0f 00 3f fe 7f f8 3f f1 fb cf     ........?...?...
     c5c:	fc fe f3 bc 3d ef e0 1f fe 7f ff 7f fb ff df fe     ....=...........
     c6c:	fe ff bc 3d ef e0 1f c6 ff ff 7f fb ff df fe fe     ...=............
     c7c:	ff bc 3d ef e0 0f e3 c7 fe 78 7b c3 de 1e f0 ff     ..=......x{.....
     c8c:	bc 3d ef 00 07 ff 87 fc 78 7b c3 de 1e f0 f8 3c     .=......x{.....<
     c9c:	3d ef 00 01 ff ff f0 00 7b c3 c0 1e f0 f0 3c 3d     =.......{.....<=
     cac:	ef 00 01 f3 7f e0 3f fb c3 cf fe f0 f0 3c 3d ef     ......?......<=.
     cbc:	00 03 e3 3f 80 7f fb c3 df fe f0 f0 3c 3d ef 00     ...?........<=..
     ccc:	07 e7 3c 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07     ..<.x{.....<=...
     cdc:	ff be 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07 ff     ...x{.....<=....
     cec:	fe 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 0f ff fe     ..x{.....<=.....
     cfc:	00 7f fb ff df fe f0 f0 3f fd ef e0 0f ff ff 00     ........?.......
     d0c:	7f fb ff df fe f0 f0 3f fd ef e0 0f f9 ff 00 3e     .......?.......>
     d1c:	79 f9 cf 9e f0 f0 1f 3d e7 e0 1f f1 ff 00 00 00     y......=........
	...
     d34:	00 1f 80 ff 00 7f ff ff ff ff ff ff ff ff ff e0     ................
     d44:	1c 00 7f 00 7f ff ff ff fe b4 6d 88 8d 18 e0 00     ..........m.....
     d54:	00 1f 00 7f ff ff ff fe 95 ad 7d b5 77 e0 00 00     ..........}.w...
     d64:	0f 00 7f ff ff ff fe a5 ad 9d 8d 19 e0 00 00 06     ................
     d74:	00 7f ff ff ff fe b5 ad ed b5 7e e0                 ..........~.

00000d80 <_ZZN16Adafruit_SSD13065beginEhhbbE5init1>:
     d80:	ae d5 80 a8                                         ....

00000d84 <_ZZN16Adafruit_SSD13065beginEhhbbE5init2>:
     d84:	d3 00 40 8d                                         ..@.

00000d88 <_ZZN16Adafruit_SSD13065beginEhhbbE5init3>:
     d88:	20 00 a1 c8                                          ...

00000d8c <_ZZN16Adafruit_SSD13065beginEhhbbE5init5>:
     d8c:	db 40 a4 a6 2e af                                   .@....

00000d92 <_ZZN16Adafruit_SSD130621drawFastVLineInternalEiiijE7premask>:
     d92:	00 80 c0 e0 f0 f8 fc fe                             ........

00000d9a <_ZZN16Adafruit_SSD130621drawFastVLineInternalEiiijE8postmask>:
     d9a:	00 01 03 07 0f 1f 3f 7f                             ......?.

00000da2 <_ZZN16Adafruit_SSD13067displayEvE6dlist1>:
     da2:	22 00 ff 21 00                                      "..!.

00000da7 <digital_pin_to_timer_PGM>:
     da7:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
     dd3:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00000ded <digital_pin_to_bit_mask_PGM>:
     ded:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
     dfd:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
     e0d:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
     e1d:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
     e2d:	04 08 10 20 40 80                                   ... @.

00000e33 <digital_pin_to_port_PGM>:
     e33:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
     e43:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
     e53:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
     e63:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
     e73:	0b 0b 0b 0b 0b 0b                                   ......

00000e79 <port_to_input_PGM>:
     e79:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
     e89:	00 01 00 00 03 01 06 01 09 01                       ..........

00000e93 <port_to_output_PGM>:
     e93:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
     ea3:	02 01 00 00 05 01 08 01 0b 01                       ..........

00000ead <port_to_mode_PGM>:
     ead:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
     ebd:	01 01 00 00 04 01 07 01 0a 01 00                    ...........

00000ec8 <__ctors_start>:
     ec8:	3c 0b       	sbc	r19, r28
     eca:	f1 14       	cp	r15, r1
     ecc:	59 3f       	cpi	r21, 0xF9	; 249
     ece:	e5 47       	sbci	r30, 0x75	; 117

00000ed0 <__ctors_end>:
     ed0:	48 0b       	sbc	r20, r24

00000ed2 <__dtors_end>:
     ed2:	11 24       	eor	r1, r1
     ed4:	1f be       	out	0x3f, r1	; 63
     ed6:	cf ef       	ldi	r28, 0xFF	; 255
     ed8:	d1 e2       	ldi	r29, 0x21	; 33
     eda:	de bf       	out	0x3e, r29	; 62
     edc:	cd bf       	out	0x3d, r28	; 61
     ede:	00 e0       	ldi	r16, 0x00	; 0
     ee0:	0c bf       	out	0x3c, r16	; 60

00000ee2 <__do_copy_data>:
     ee2:	12 e0       	ldi	r17, 0x02	; 2
     ee4:	a0 e0       	ldi	r26, 0x00	; 0
     ee6:	b2 e0       	ldi	r27, 0x02	; 2
     ee8:	ec ec       	ldi	r30, 0xCC	; 204
     eea:	fd e9       	ldi	r31, 0x9D	; 157
     eec:	00 e0       	ldi	r16, 0x00	; 0
     eee:	0b bf       	out	0x3b, r16	; 59
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <__do_copy_data+0x14>
     ef2:	07 90       	elpm	r0, Z+
     ef4:	0d 92       	st	X+, r0
     ef6:	a4 3b       	cpi	r26, 0xB4	; 180
     ef8:	b1 07       	cpc	r27, r17
     efa:	d9 f7       	brne	.-10     	; 0xef2 <__do_copy_data+0x10>

00000efc <__do_clear_bss>:
     efc:	25 e0       	ldi	r18, 0x05	; 5
     efe:	a4 eb       	ldi	r26, 0xB4	; 180
     f00:	b2 e0       	ldi	r27, 0x02	; 2
     f02:	01 c0       	rjmp	.+2      	; 0xf06 <.do_clear_bss_start>

00000f04 <.do_clear_bss_loop>:
     f04:	1d 92       	st	X+, r1

00000f06 <.do_clear_bss_start>:
     f06:	a6 33       	cpi	r26, 0x36	; 54
     f08:	b2 07       	cpc	r27, r18
     f0a:	e1 f7       	brne	.-8      	; 0xf04 <.do_clear_bss_loop>

00000f0c <__do_global_ctors>:
     f0c:	17 e0       	ldi	r17, 0x07	; 7
     f0e:	c8 e6       	ldi	r28, 0x68	; 104
     f10:	d7 e0       	ldi	r29, 0x07	; 7
     f12:	00 e0       	ldi	r16, 0x00	; 0
     f14:	06 c0       	rjmp	.+12     	; 0xf22 <__do_global_ctors+0x16>
     f16:	21 97       	sbiw	r28, 0x01	; 1
     f18:	01 09       	sbc	r16, r1
     f1a:	80 2f       	mov	r24, r16
     f1c:	fe 01       	movw	r30, r28
     f1e:	0e 94 5b 4c 	call	0x98b6	; 0x98b6 <__tablejump2__>
     f22:	c4 36       	cpi	r28, 0x64	; 100
     f24:	d1 07       	cpc	r29, r17
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	08 07       	cpc	r16, r24
     f2a:	a9 f7       	brne	.-22     	; 0xf16 <__do_global_ctors+0xa>
     f2c:	0e 94 14 48 	call	0x9028	; 0x9028 <main>
     f30:	0c 94 d5 4e 	jmp	0x9daa	; 0x9daa <__do_global_dtors>

00000f34 <__bad_interrupt>:
     f34:	65 c8       	rjmp	.-3894   	; 0x0 <__vectors>

00000f36 <_ZN15StringSumHelperC1Ec>:
class StringSumHelper : public String
{
public:
	StringSumHelper(const String &s) : String(s) {}
	StringSumHelper(const char *p) : String(p) {}
	StringSumHelper(char c) : String(c) {}
     f36:	cf 93       	push	r28
     f38:	df 93       	push	r29
     f3a:	00 d0       	rcall	.+0      	; 0xf3c <_ZN15StringSumHelperC1Ec+0x6>
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62
     f40:	9a 83       	std	Y+2, r25	; 0x02
     f42:	89 83       	std	Y+1, r24	; 0x01
     f44:	6b 83       	std	Y+3, r22	; 0x03
     f46:	89 81       	ldd	r24, Y+1	; 0x01
     f48:	9a 81       	ldd	r25, Y+2	; 0x02
     f4a:	6b 81       	ldd	r22, Y+3	; 0x03
     f4c:	0e 94 ba 4b 	call	0x9774	; 0x9774 <_ZN6StringC1Ec>
     f50:	00 00       	nop
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	08 95       	ret

00000f5e <_ZN14HardwareSerial5beginEm>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	00 d0       	rcall	.+0      	; 0xf64 <_ZN14HardwareSerial5beginEm+0x6>
     f64:	00 d0       	rcall	.+0      	; 0xf66 <_ZN14HardwareSerial5beginEm+0x8>
     f66:	cd b7       	in	r28, 0x3d	; 61
     f68:	de b7       	in	r29, 0x3e	; 62
     f6a:	9a 83       	std	Y+2, r25	; 0x02
     f6c:	89 83       	std	Y+1, r24	; 0x01
     f6e:	4b 83       	std	Y+3, r20	; 0x03
     f70:	5c 83       	std	Y+4, r21	; 0x04
     f72:	6d 83       	std	Y+5, r22	; 0x05
     f74:	7e 83       	std	Y+6, r23	; 0x06
     f76:	8b 81       	ldd	r24, Y+3	; 0x03
     f78:	9c 81       	ldd	r25, Y+4	; 0x04
     f7a:	ad 81       	ldd	r26, Y+5	; 0x05
     f7c:	be 81       	ldd	r27, Y+6	; 0x06
     f7e:	e9 81       	ldd	r30, Y+1	; 0x01
     f80:	fa 81       	ldd	r31, Y+2	; 0x02
     f82:	26 e0       	ldi	r18, 0x06	; 6
     f84:	ac 01       	movw	r20, r24
     f86:	bd 01       	movw	r22, r26
     f88:	cf 01       	movw	r24, r30
     f8a:	0e 94 1a 47 	call	0x8e34	; 0x8e34 <_ZN14HardwareSerial5beginEmh>
     f8e:	00 00       	nop
     f90:	26 96       	adiw	r28, 0x06	; 6
     f92:	0f b6       	in	r0, 0x3f	; 63
     f94:	f8 94       	cli
     f96:	de bf       	out	0x3e, r29	; 62
     f98:	0f be       	out	0x3f, r0	; 63
     f9a:	cd bf       	out	0x3d, r28	; 61
     f9c:	df 91       	pop	r29
     f9e:	cf 91       	pop	r28
     fa0:	08 95       	ret

00000fa2 <_ZN12Adafruit_GFX9setCursorEii>:
    @brief  Set text cursor location
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
     fa2:	cf 93       	push	r28
     fa4:	df 93       	push	r29
     fa6:	00 d0       	rcall	.+0      	; 0xfa8 <_ZN12Adafruit_GFX9setCursorEii+0x6>
     fa8:	00 d0       	rcall	.+0      	; 0xfaa <_ZN12Adafruit_GFX9setCursorEii+0x8>
     faa:	cd b7       	in	r28, 0x3d	; 61
     fac:	de b7       	in	r29, 0x3e	; 62
     fae:	9a 83       	std	Y+2, r25	; 0x02
     fb0:	89 83       	std	Y+1, r24	; 0x01
     fb2:	7c 83       	std	Y+4, r23	; 0x04
     fb4:	6b 83       	std	Y+3, r22	; 0x03
     fb6:	5e 83       	std	Y+6, r21	; 0x06
     fb8:	4d 83       	std	Y+5, r20	; 0x05
    cursor_x = x;
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	9a 81       	ldd	r25, Y+2	; 0x02
     fbe:	2b 81       	ldd	r18, Y+3	; 0x03
     fc0:	3c 81       	ldd	r19, Y+4	; 0x04
     fc2:	fc 01       	movw	r30, r24
     fc4:	35 87       	std	Z+13, r19	; 0x0d
     fc6:	24 87       	std	Z+12, r18	; 0x0c
    cursor_y = y;
     fc8:	89 81       	ldd	r24, Y+1	; 0x01
     fca:	9a 81       	ldd	r25, Y+2	; 0x02
     fcc:	2d 81       	ldd	r18, Y+5	; 0x05
     fce:	3e 81       	ldd	r19, Y+6	; 0x06
     fd0:	fc 01       	movw	r30, r24
     fd2:	37 87       	std	Z+15, r19	; 0x0f
     fd4:	26 87       	std	Z+14, r18	; 0x0e
  }
     fd6:	00 00       	nop
     fd8:	26 96       	adiw	r28, 0x06	; 6
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	de bf       	out	0x3e, r29	; 62
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	cd bf       	out	0x3d, r28	; 61
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	08 95       	ret

00000fea <_ZN12Adafruit_GFX12setTextColorEj>:
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	00 d0       	rcall	.+0      	; 0xff0 <_ZN12Adafruit_GFX12setTextColorEj+0x6>
     ff0:	1f 92       	push	r1
     ff2:	cd b7       	in	r28, 0x3d	; 61
     ff4:	de b7       	in	r29, 0x3e	; 62
     ff6:	9a 83       	std	Y+2, r25	; 0x02
     ff8:	89 83       	std	Y+1, r24	; 0x01
     ffa:	7c 83       	std	Y+4, r23	; 0x04
     ffc:	6b 83       	std	Y+3, r22	; 0x03
     ffe:	89 81       	ldd	r24, Y+1	; 0x01
    1000:	9a 81       	ldd	r25, Y+2	; 0x02
    1002:	2b 81       	ldd	r18, Y+3	; 0x03
    1004:	3c 81       	ldd	r19, Y+4	; 0x04
    1006:	fc 01       	movw	r30, r24
    1008:	33 8b       	std	Z+19, r19	; 0x13
    100a:	22 8b       	std	Z+18, r18	; 0x12
    100c:	89 81       	ldd	r24, Y+1	; 0x01
    100e:	9a 81       	ldd	r25, Y+2	; 0x02
    1010:	fc 01       	movw	r30, r24
    1012:	22 89       	ldd	r18, Z+18	; 0x12
    1014:	33 89       	ldd	r19, Z+19	; 0x13
    1016:	89 81       	ldd	r24, Y+1	; 0x01
    1018:	9a 81       	ldd	r25, Y+2	; 0x02
    101a:	fc 01       	movw	r30, r24
    101c:	31 8b       	std	Z+17, r19	; 0x11
    101e:	20 8b       	std	Z+16, r18	; 0x10
    1020:	00 00       	nop
    1022:	0f 90       	pop	r0
    1024:	0f 90       	pop	r0
    1026:	0f 90       	pop	r0
    1028:	0f 90       	pop	r0
    102a:	df 91       	pop	r29
    102c:	cf 91       	pop	r28
    102e:	08 95       	ret

00001030 <setup>:

void DisplayTemp(int h, int t);

String zeroReturn(int time);

void setup() {
    1030:	cf 92       	push	r12
    1032:	ef 92       	push	r14
    1034:	0f 93       	push	r16
    1036:	cf 93       	push	r28
    1038:	df 93       	push	r29
    103a:	cd b7       	in	r28, 0x3d	; 61
    103c:	de b7       	in	r29, 0x3e	; 62
	Serial.begin(9600);
    103e:	40 e8       	ldi	r20, 0x80	; 128
    1040:	55 e2       	ldi	r21, 0x25	; 37
    1042:	60 e0       	ldi	r22, 0x00	; 0
    1044:	70 e0       	ldi	r23, 0x00	; 0
    1046:	8c e8       	ldi	r24, 0x8C	; 140
    1048:	94 e0       	ldi	r25, 0x04	; 4
    104a:	89 df       	rcall	.-238    	; 0xf5e <_ZN14HardwareSerial5beginEm>
	
	display.setTextSize(2);
    104c:	62 e0       	ldi	r22, 0x02	; 2
    104e:	8c ec       	ldi	r24, 0xCC	; 204
    1050:	92 e0       	ldi	r25, 0x02	; 2
    1052:	0e 94 b4 25 	call	0x4b68	; 0x4b68 <_ZN12Adafruit_GFX11setTextSizeEh>
	
	display.setTextColor(WHITE);
    1056:	61 e0       	ldi	r22, 0x01	; 1
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	8c ec       	ldi	r24, 0xCC	; 204
    105c:	92 e0       	ldi	r25, 0x02	; 2
    105e:	c5 df       	rcall	.-118    	; 0xfea <_ZN12Adafruit_GFX12setTextColorEj>
	
	if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))
    1060:	01 e0       	ldi	r16, 0x01	; 1
    1062:	21 e0       	ldi	r18, 0x01	; 1
    1064:	4c e3       	ldi	r20, 0x3C	; 60
    1066:	62 e0       	ldi	r22, 0x02	; 2
    1068:	8c ec       	ldi	r24, 0xCC	; 204
    106a:	92 e0       	ldi	r25, 0x02	; 2
    106c:	0e 94 d5 29 	call	0x53aa	; 0x53aa <_ZN16Adafruit_SSD13065beginEhhbb>
    1070:	98 2f       	mov	r25, r24
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	89 27       	eor	r24, r25
    1076:	88 23       	and	r24, r24
    1078:	41 f0       	breq	.+16     	; 0x108a <setup+0x5a>
	{
		Serial.println(F("SSD1306 allocation failed"));
    107a:	8c e7       	ldi	r24, 0x7C	; 124
    107c:	93 e0       	ldi	r25, 0x03	; 3
    107e:	bc 01       	movw	r22, r24
    1080:	8c e8       	ldi	r24, 0x8C	; 140
    1082:	94 e0       	ldi	r25, 0x04	; 4
    1084:	0e 94 9c 48 	call	0x9138	; 0x9138 <_ZN5Print7printlnEPK19__FlashStringHelper>
		for(;;);
    1088:	ff cf       	rjmp	.-2      	; 0x1088 <setup+0x58>
	}
	
	clock.begin();
    108a:	84 eb       	ldi	r24, 0xB4	; 180
    108c:	92 e0       	ldi	r25, 0x02	; 2
    108e:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZN6DS32315beginEv>
	
	clock.setDateTime(2022,6,8,11,16,0);
    1092:	c1 2c       	mov	r12, r1
    1094:	68 94       	set
    1096:	ee 24       	eor	r14, r14
    1098:	e4 f8       	bld	r14, 4
    109a:	0b e0       	ldi	r16, 0x0B	; 11
    109c:	28 e0       	ldi	r18, 0x08	; 8
    109e:	46 e0       	ldi	r20, 0x06	; 6
    10a0:	66 ee       	ldi	r22, 0xE6	; 230
    10a2:	77 e0       	ldi	r23, 0x07	; 7
    10a4:	84 eb       	ldi	r24, 0xB4	; 180
    10a6:	92 e0       	ldi	r25, 0x02	; 2
    10a8:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <_ZN6DS323111setDateTimeEjhhhhh>
	
	dht.begin();
    10ac:	67 e3       	ldi	r22, 0x37	; 55
    10ae:	8c e0       	ldi	r24, 0x0C	; 12
    10b0:	93 e0       	ldi	r25, 0x03	; 3
    10b2:	a9 d3       	rcall	.+1874   	; 0x1806 <_ZN3DHT5beginEh>
}
    10b4:	00 00       	nop
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	0f 91       	pop	r16
    10bc:	ef 90       	pop	r14
    10be:	cf 90       	pop	r12
    10c0:	08 95       	ret

000010c2 <loop>:



void loop() {
    10c2:	af 92       	push	r10
    10c4:	bf 92       	push	r11
    10c6:	cf 92       	push	r12
    10c8:	df 92       	push	r13
    10ca:	ef 92       	push	r14
    10cc:	ff 92       	push	r15
    10ce:	0f 93       	push	r16
    10d0:	1f 93       	push	r17
    10d2:	cf 93       	push	r28
    10d4:	df 93       	push	r29
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	66 97       	sbiw	r28, 0x16	; 22
    10dc:	0f b6       	in	r0, 0x3f	; 63
    10de:	f8 94       	cli
    10e0:	de bf       	out	0x3e, r29	; 62
    10e2:	0f be       	out	0x3f, r0	; 63
    10e4:	cd bf       	out	0x3d, r28	; 61
	unsigned long currentMillis = millis();
    10e6:	0e 94 88 49 	call	0x9310	; 0x9310 <millis>
    10ea:	dc 01       	movw	r26, r24
    10ec:	cb 01       	movw	r24, r22
    10ee:	89 83       	std	Y+1, r24	; 0x01
    10f0:	9a 83       	std	Y+2, r25	; 0x02
    10f2:	ab 83       	std	Y+3, r26	; 0x03
    10f4:	bc 83       	std	Y+4, r27	; 0x04
	
	dt = clock.getDateTime();
    10f6:	ce 01       	movw	r24, r28
    10f8:	0b 96       	adiw	r24, 0x0b	; 11
    10fa:	64 eb       	ldi	r22, 0xB4	; 180
    10fc:	72 e0       	ldi	r23, 0x02	; 2
    10fe:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <_ZN6DS323111getDateTimeEv>
    1102:	8c e0       	ldi	r24, 0x0C	; 12
    1104:	fe 01       	movw	r30, r28
    1106:	3b 96       	adiw	r30, 0x0b	; 11
    1108:	a0 ec       	ldi	r26, 0xC0	; 192
    110a:	b2 e0       	ldi	r27, 0x02	; 2
    110c:	01 90       	ld	r0, Z+
    110e:	0d 92       	st	X+, r0
    1110:	8a 95       	dec	r24
    1112:	e1 f7       	brne	.-8      	; 0x110c <loop+0x4a>
	
	
	int h = dht.readHumidity();
    1114:	60 e0       	ldi	r22, 0x00	; 0
    1116:	8c e0       	ldi	r24, 0x0C	; 12
    1118:	93 e0       	ldi	r25, 0x03	; 3
    111a:	59 d5       	rcall	.+2738   	; 0x1bce <_ZN3DHT12readHumidityEb>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	bc 01       	movw	r22, r24
    1122:	cd 01       	movw	r24, r26
    1124:	0e 94 14 43 	call	0x8628	; 0x8628 <__fixsfsi>
    1128:	dc 01       	movw	r26, r24
    112a:	cb 01       	movw	r24, r22
    112c:	9e 83       	std	Y+6, r25	; 0x06
    112e:	8d 83       	std	Y+5, r24	; 0x05

	int t = dht.readTemperature();
    1130:	40 e0       	ldi	r20, 0x00	; 0
    1132:	60 e0       	ldi	r22, 0x00	; 0
    1134:	8c e0       	ldi	r24, 0x0C	; 12
    1136:	93 e0       	ldi	r25, 0x03	; 3
    1138:	90 d3       	rcall	.+1824   	; 0x185a <_ZN3DHT15readTemperatureEbb>
    113a:	dc 01       	movw	r26, r24
    113c:	cb 01       	movw	r24, r22
    113e:	bc 01       	movw	r22, r24
    1140:	cd 01       	movw	r24, r26
    1142:	0e 94 14 43 	call	0x8628	; 0x8628 <__fixsfsi>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	98 87       	std	Y+8, r25	; 0x08
    114c:	8f 83       	std	Y+7, r24	; 0x07

	int hic = dht.computeHeatIndex(t, h, false);
    114e:	8d 81       	ldd	r24, Y+5	; 0x05
    1150:	9e 81       	ldd	r25, Y+6	; 0x06
    1152:	09 2e       	mov	r0, r25
    1154:	00 0c       	add	r0, r0
    1156:	aa 0b       	sbc	r26, r26
    1158:	bb 0b       	sbc	r27, r27
    115a:	bc 01       	movw	r22, r24
    115c:	cd 01       	movw	r24, r26
    115e:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    1162:	5b 01       	movw	r10, r22
    1164:	6c 01       	movw	r12, r24
    1166:	8f 81       	ldd	r24, Y+7	; 0x07
    1168:	98 85       	ldd	r25, Y+8	; 0x08
    116a:	09 2e       	mov	r0, r25
    116c:	00 0c       	add	r0, r0
    116e:	aa 0b       	sbc	r26, r26
    1170:	bb 0b       	sbc	r27, r27
    1172:	bc 01       	movw	r22, r24
    1174:	cd 01       	movw	r24, r26
    1176:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    117a:	dc 01       	movw	r26, r24
    117c:	cb 01       	movw	r24, r22
    117e:	e1 2c       	mov	r14, r1
    1180:	96 01       	movw	r18, r12
    1182:	85 01       	movw	r16, r10
    1184:	ac 01       	movw	r20, r24
    1186:	bd 01       	movw	r22, r26
    1188:	8c e0       	ldi	r24, 0x0C	; 12
    118a:	93 e0       	ldi	r25, 0x03	; 3
    118c:	ca d5       	rcall	.+2964   	; 0x1d22 <_ZN3DHT16computeHeatIndexEffb>
    118e:	dc 01       	movw	r26, r24
    1190:	cb 01       	movw	r24, r22
    1192:	bc 01       	movw	r22, r24
    1194:	cd 01       	movw	r24, r26
    1196:	0e 94 14 43 	call	0x8628	; 0x8628 <__fixsfsi>
    119a:	dc 01       	movw	r26, r24
    119c:	cb 01       	movw	r24, r22
    119e:	9a 87       	std	Y+10, r25	; 0x0a
    11a0:	89 87       	std	Y+9, r24	; 0x09
	
	if (isnan(h) || isnan(t)) {
    11a2:	8d 81       	ldd	r24, Y+5	; 0x05
    11a4:	9e 81       	ldd	r25, Y+6	; 0x06
    11a6:	09 2e       	mov	r0, r25
    11a8:	00 0c       	add	r0, r0
    11aa:	aa 0b       	sbc	r26, r26
    11ac:	bb 0b       	sbc	r27, r27
    11ae:	bc 01       	movw	r22, r24
    11b0:	cd 01       	movw	r24, r26
    11b2:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    11b6:	dc 01       	movw	r26, r24
    11b8:	cb 01       	movw	r24, r22
    11ba:	9c 01       	movw	r18, r24
    11bc:	ad 01       	movw	r20, r26
    11be:	bc 01       	movw	r22, r24
    11c0:	cd 01       	movw	r24, r26
    11c2:	0e 94 ec 44 	call	0x89d8	; 0x89d8 <__unordsf2>
    11c6:	88 23       	and	r24, r24
    11c8:	a1 f4       	brne	.+40     	; 0x11f2 <loop+0x130>
    11ca:	8f 81       	ldd	r24, Y+7	; 0x07
    11cc:	98 85       	ldd	r25, Y+8	; 0x08
    11ce:	09 2e       	mov	r0, r25
    11d0:	00 0c       	add	r0, r0
    11d2:	aa 0b       	sbc	r26, r26
    11d4:	bb 0b       	sbc	r27, r27
    11d6:	bc 01       	movw	r22, r24
    11d8:	cd 01       	movw	r24, r26
    11da:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    11de:	dc 01       	movw	r26, r24
    11e0:	cb 01       	movw	r24, r22
    11e2:	9c 01       	movw	r18, r24
    11e4:	ad 01       	movw	r20, r26
    11e6:	bc 01       	movw	r22, r24
    11e8:	cd 01       	movw	r24, r26
    11ea:	0e 94 ec 44 	call	0x89d8	; 0x89d8 <__unordsf2>
    11ee:	88 23       	and	r24, r24
    11f0:	11 f0       	breq	.+4      	; 0x11f6 <loop+0x134>
    11f2:	81 e0       	ldi	r24, 0x01	; 1
    11f4:	01 c0       	rjmp	.+2      	; 0x11f8 <loop+0x136>
    11f6:	80 e0       	ldi	r24, 0x00	; 0
    11f8:	88 23       	and	r24, r24
    11fa:	41 f0       	breq	.+16     	; 0x120c <loop+0x14a>
		Serial.println(F("Failed to read from DHT sensor!"));
    11fc:	86 e9       	ldi	r24, 0x96	; 150
    11fe:	93 e0       	ldi	r25, 0x03	; 3
    1200:	bc 01       	movw	r22, r24
    1202:	8c e8       	ldi	r24, 0x8C	; 140
    1204:	94 e0       	ldi	r25, 0x04	; 4
    1206:	0e 94 9c 48 	call	0x9138	; 0x9138 <_ZN5Print7printlnEPK19__FlashStringHelper>
		return;
    120a:	5e c0       	rjmp	.+188    	; 0x12c8 <loop+0x206>
	}


	if (currentMillis - previousMillis >= interval)
    120c:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <previousMillis>
    1210:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <previousMillis+0x1>
    1214:	a0 91 21 03 	lds	r26, 0x0321	; 0x800321 <previousMillis+0x2>
    1218:	b0 91 22 03 	lds	r27, 0x0322	; 0x800322 <previousMillis+0x3>
    121c:	29 81       	ldd	r18, Y+1	; 0x01
    121e:	3a 81       	ldd	r19, Y+2	; 0x02
    1220:	4b 81       	ldd	r20, Y+3	; 0x03
    1222:	5c 81       	ldd	r21, Y+4	; 0x04
    1224:	79 01       	movw	r14, r18
    1226:	8a 01       	movw	r16, r20
    1228:	e8 1a       	sub	r14, r24
    122a:	f9 0a       	sbc	r15, r25
    122c:	0a 0b       	sbc	r16, r26
    122e:	1b 0b       	sbc	r17, r27
    1230:	d8 01       	movw	r26, r16
    1232:	c7 01       	movw	r24, r14
    1234:	80 31       	cpi	r24, 0x10	; 16
    1236:	97 42       	sbci	r25, 0x27	; 39
    1238:	a1 05       	cpc	r26, r1
    123a:	b1 05       	cpc	r27, r1
    123c:	90 f0       	brcs	.+36     	; 0x1262 <loop+0x1a0>
	{
		previousMillis =  currentMillis;
    123e:	89 81       	ldd	r24, Y+1	; 0x01
    1240:	9a 81       	ldd	r25, Y+2	; 0x02
    1242:	ab 81       	ldd	r26, Y+3	; 0x03
    1244:	bc 81       	ldd	r27, Y+4	; 0x04
    1246:	80 93 1f 03 	sts	0x031F, r24	; 0x80031f <previousMillis>
    124a:	90 93 20 03 	sts	0x0320, r25	; 0x800320 <previousMillis+0x1>
    124e:	a0 93 21 03 	sts	0x0321, r26	; 0x800321 <previousMillis+0x2>
    1252:	b0 93 22 03 	sts	0x0322, r27	; 0x800322 <previousMillis+0x3>
		
		intervalBool = !intervalBool;
    1256:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <intervalBool>
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	89 27       	eor	r24, r25
    125e:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <intervalBool>
	}
	
	
	if (currentMillis - previousMillisTime >= timeDate)
    1262:	80 91 23 03 	lds	r24, 0x0323	; 0x800323 <previousMillisTime>
    1266:	90 91 24 03 	lds	r25, 0x0324	; 0x800324 <previousMillisTime+0x1>
    126a:	a0 91 25 03 	lds	r26, 0x0325	; 0x800325 <previousMillisTime+0x2>
    126e:	b0 91 26 03 	lds	r27, 0x0326	; 0x800326 <previousMillisTime+0x3>
    1272:	29 81       	ldd	r18, Y+1	; 0x01
    1274:	3a 81       	ldd	r19, Y+2	; 0x02
    1276:	4b 81       	ldd	r20, Y+3	; 0x03
    1278:	5c 81       	ldd	r21, Y+4	; 0x04
    127a:	79 01       	movw	r14, r18
    127c:	8a 01       	movw	r16, r20
    127e:	e8 1a       	sub	r14, r24
    1280:	f9 0a       	sbc	r15, r25
    1282:	0a 0b       	sbc	r16, r26
    1284:	1b 0b       	sbc	r17, r27
    1286:	d8 01       	movw	r26, r16
    1288:	c7 01       	movw	r24, r14
    128a:	84 3f       	cpi	r24, 0xF4	; 244
    128c:	91 40       	sbci	r25, 0x01	; 1
    128e:	a1 05       	cpc	r26, r1
    1290:	b1 05       	cpc	r27, r1
    1292:	d0 f0       	brcs	.+52     	; 0x12c8 <loop+0x206>
	{
		previousMillisTime =  currentMillis;
    1294:	89 81       	ldd	r24, Y+1	; 0x01
    1296:	9a 81       	ldd	r25, Y+2	; 0x02
    1298:	ab 81       	ldd	r26, Y+3	; 0x03
    129a:	bc 81       	ldd	r27, Y+4	; 0x04
    129c:	80 93 23 03 	sts	0x0323, r24	; 0x800323 <previousMillisTime>
    12a0:	90 93 24 03 	sts	0x0324, r25	; 0x800324 <previousMillisTime+0x1>
    12a4:	a0 93 25 03 	sts	0x0325, r26	; 0x800325 <previousMillisTime+0x2>
    12a8:	b0 93 26 03 	sts	0x0326, r27	; 0x800326 <previousMillisTime+0x3>

		intervalBool == false ? DisplayTime() :  DisplayTemp(h, t);
    12ac:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <intervalBool>
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	89 27       	eor	r24, r25
    12b4:	88 23       	and	r24, r24
    12b6:	11 f0       	breq	.+4      	; 0x12bc <loop+0x1fa>
    12b8:	74 d0       	rcall	.+232    	; 0x13a2 <_Z11DisplayTimev>
    12ba:	06 c0       	rjmp	.+12     	; 0x12c8 <loop+0x206>
    12bc:	2f 81       	ldd	r18, Y+7	; 0x07
    12be:	38 85       	ldd	r19, Y+8	; 0x08
    12c0:	8d 81       	ldd	r24, Y+5	; 0x05
    12c2:	9e 81       	ldd	r25, Y+6	; 0x06
    12c4:	b9 01       	movw	r22, r18
    12c6:	22 d1       	rcall	.+580    	; 0x150c <_Z11DisplayTempii>
	}
}
    12c8:	66 96       	adiw	r28, 0x16	; 22
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	df 90       	pop	r13
    12e2:	cf 90       	pop	r12
    12e4:	bf 90       	pop	r11
    12e6:	af 90       	pop	r10
    12e8:	08 95       	ret

000012ea <_ZN15StringSumHelperD1Ev>:
       #if __cplusplus >= 201103L || defined(__GXX_EXPERIMENTAL_CXX0X__)
	void move(String &rhs);
	#endif
};

class StringSumHelper : public String
    12ea:	cf 93       	push	r28
    12ec:	df 93       	push	r29
    12ee:	1f 92       	push	r1
    12f0:	1f 92       	push	r1
    12f2:	cd b7       	in	r28, 0x3d	; 61
    12f4:	de b7       	in	r29, 0x3e	; 62
    12f6:	9a 83       	std	Y+2, r25	; 0x02
    12f8:	89 83       	std	Y+1, r24	; 0x01
    12fa:	89 81       	ldd	r24, Y+1	; 0x01
    12fc:	9a 81       	ldd	r25, Y+2	; 0x02
    12fe:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
    1302:	00 00       	nop
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	08 95       	ret

0000130e <_Z10zeroReturni>:


String zeroReturn(int time) {
    130e:	1f 93       	push	r17
    1310:	cf 93       	push	r28
    1312:	df 93       	push	r29
    1314:	cd b7       	in	r28, 0x3d	; 61
    1316:	de b7       	in	r29, 0x3e	; 62
    1318:	60 97       	sbiw	r28, 0x10	; 16
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	f8 94       	cli
    131e:	de bf       	out	0x3e, r29	; 62
    1320:	0f be       	out	0x3f, r0	; 63
    1322:	cd bf       	out	0x3d, r28	; 61
    1324:	9e 87       	std	Y+14, r25	; 0x0e
    1326:	8d 87       	std	Y+13, r24	; 0x0d
    1328:	78 8b       	std	Y+16, r23	; 0x10
    132a:	6f 87       	std	Y+15, r22	; 0x0f
	String zeroRet = String(time);
    132c:	2f 85       	ldd	r18, Y+15	; 0x0f
    132e:	38 89       	ldd	r19, Y+16	; 0x10
    1330:	ce 01       	movw	r24, r28
    1332:	07 96       	adiw	r24, 0x07	; 7
    1334:	4a e0       	ldi	r20, 0x0A	; 10
    1336:	b9 01       	movw	r22, r18
    1338:	0e 94 d2 4b 	call	0x97a4	; 0x97a4 <_ZN6StringC1Eih>
	return time <=9 ? '0' + zeroRet : zeroRet;
    133c:	10 e0       	ldi	r17, 0x00	; 0
    133e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1340:	98 89       	ldd	r25, Y+16	; 0x10
    1342:	0a 97       	sbiw	r24, 0x0a	; 10
    1344:	6c f4       	brge	.+26     	; 0x1360 <_Z10zeroReturni+0x52>
    1346:	60 e3       	ldi	r22, 0x30	; 48
    1348:	ce 01       	movw	r24, r28
    134a:	01 96       	adiw	r24, 0x01	; 1
    134c:	f4 dd       	rcall	.-1048   	; 0xf36 <_ZN15StringSumHelperC1Ec>
    134e:	11 e0       	ldi	r17, 0x01	; 1
    1350:	ce 01       	movw	r24, r28
    1352:	07 96       	adiw	r24, 0x07	; 7
    1354:	bc 01       	movw	r22, r24
    1356:	ce 01       	movw	r24, r28
    1358:	01 96       	adiw	r24, 0x01	; 1
    135a:	0e 94 28 4c 	call	0x9850	; 0x9850 <_ZplRK15StringSumHelperRK6String>
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <_Z10zeroReturni+0x56>
    1360:	ce 01       	movw	r24, r28
    1362:	07 96       	adiw	r24, 0x07	; 7
    1364:	2d 85       	ldd	r18, Y+13	; 0x0d
    1366:	3e 85       	ldd	r19, Y+14	; 0x0e
    1368:	bc 01       	movw	r22, r24
    136a:	c9 01       	movw	r24, r18
    136c:	0e 94 9d 4b 	call	0x973a	; 0x973a <_ZN6StringC1ERKS_>
    1370:	11 23       	and	r17, r17
    1372:	29 f0       	breq	.+10     	; 0x137e <_Z10zeroReturni+0x70>
    1374:	00 00       	nop
    1376:	ce 01       	movw	r24, r28
    1378:	01 96       	adiw	r24, 0x01	; 1
    137a:	b7 df       	rcall	.-146    	; 0x12ea <_ZN15StringSumHelperD1Ev>
    137c:	01 c0       	rjmp	.+2      	; 0x1380 <_Z10zeroReturni+0x72>
    137e:	00 00       	nop
	}
}


String zeroReturn(int time) {
	String zeroRet = String(time);
    1380:	ce 01       	movw	r24, r28
    1382:	07 96       	adiw	r24, 0x07	; 7
    1384:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
	return time <=9 ? '0' + zeroRet : zeroRet;
    1388:	00 00       	nop
}
    138a:	8d 85       	ldd	r24, Y+13	; 0x0d
    138c:	9e 85       	ldd	r25, Y+14	; 0x0e
    138e:	60 96       	adiw	r28, 0x10	; 16
    1390:	0f b6       	in	r0, 0x3f	; 63
    1392:	f8 94       	cli
    1394:	de bf       	out	0x3e, r29	; 62
    1396:	0f be       	out	0x3f, r0	; 63
    1398:	cd bf       	out	0x3d, r28	; 61
    139a:	df 91       	pop	r29
    139c:	cf 91       	pop	r28
    139e:	1f 91       	pop	r17
    13a0:	08 95       	ret

000013a2 <_Z11DisplayTimev>:

void DisplayTime()
{
    13a2:	cf 93       	push	r28
    13a4:	df 93       	push	r29
    13a6:	cd b7       	in	r28, 0x3d	; 61
    13a8:	de b7       	in	r29, 0x3e	; 62
    13aa:	a4 97       	sbiw	r28, 0x24	; 36
    13ac:	0f b6       	in	r0, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	de bf       	out	0x3e, r29	; 62
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	cd bf       	out	0x3d, r28	; 61
	display.clearDisplay();
    13b6:	8c ec       	ldi	r24, 0xCC	; 204
    13b8:	92 e0       	ldi	r25, 0x02	; 2
    13ba:	0e 94 25 2f 	call	0x5e4a	; 0x5e4a <_ZN16Adafruit_SSD130612clearDisplayEv>


	display.setCursor(0,0);
    13be:	40 e0       	ldi	r20, 0x00	; 0
    13c0:	50 e0       	ldi	r21, 0x00	; 0
    13c2:	60 e0       	ldi	r22, 0x00	; 0
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	8c ec       	ldi	r24, 0xCC	; 204
    13c8:	92 e0       	ldi	r25, 0x02	; 2
    13ca:	eb dd       	rcall	.-1066   	; 0xfa2 <_ZN12Adafruit_GFX9setCursorEii>


	display.print(zeroReturn(dt.year)); display.print("/");
    13cc:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <dt>
    13d0:	90 91 c1 02 	lds	r25, 0x02C1	; 0x8002c1 <dt+0x1>
    13d4:	9c 01       	movw	r18, r24
    13d6:	ce 01       	movw	r24, r28
    13d8:	4f 96       	adiw	r24, 0x1f	; 31
    13da:	b9 01       	movw	r22, r18
    13dc:	98 df       	rcall	.-208    	; 0x130e <_Z10zeroReturni>
    13de:	ce 01       	movw	r24, r28
    13e0:	4f 96       	adiw	r24, 0x1f	; 31
    13e2:	bc 01       	movw	r22, r24
    13e4:	8c ec       	ldi	r24, 0xCC	; 204
    13e6:	92 e0       	ldi	r25, 0x02	; 2
    13e8:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    13ec:	ce 01       	movw	r24, r28
    13ee:	4f 96       	adiw	r24, 0x1f	; 31
    13f0:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
    13f4:	67 e0       	ldi	r22, 0x07	; 7
    13f6:	72 e0       	ldi	r23, 0x02	; 2
    13f8:	8c ec       	ldi	r24, 0xCC	; 204
    13fa:	92 e0       	ldi	r25, 0x02	; 2
    13fc:	0e 94 91 48 	call	0x9122	; 0x9122 <_ZN5Print5printEPKc>

	display.print(zeroReturn(dt.month)); display.print("/");
    1400:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <dt+0x2>
    1404:	28 2f       	mov	r18, r24
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	ce 01       	movw	r24, r28
    140a:	49 96       	adiw	r24, 0x19	; 25
    140c:	b9 01       	movw	r22, r18
    140e:	7f df       	rcall	.-258    	; 0x130e <_Z10zeroReturni>
    1410:	ce 01       	movw	r24, r28
    1412:	49 96       	adiw	r24, 0x19	; 25
    1414:	bc 01       	movw	r22, r24
    1416:	8c ec       	ldi	r24, 0xCC	; 204
    1418:	92 e0       	ldi	r25, 0x02	; 2
    141a:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    141e:	ce 01       	movw	r24, r28
    1420:	49 96       	adiw	r24, 0x19	; 25
    1422:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
    1426:	67 e0       	ldi	r22, 0x07	; 7
    1428:	72 e0       	ldi	r23, 0x02	; 2
    142a:	8c ec       	ldi	r24, 0xCC	; 204
    142c:	92 e0       	ldi	r25, 0x02	; 2
    142e:	0e 94 91 48 	call	0x9122	; 0x9122 <_ZN5Print5printEPKc>
	
	display.print(zeroReturn(dt.day));
    1432:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <dt+0x3>
    1436:	28 2f       	mov	r18, r24
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	ce 01       	movw	r24, r28
    143c:	43 96       	adiw	r24, 0x13	; 19
    143e:	b9 01       	movw	r22, r18
    1440:	66 df       	rcall	.-308    	; 0x130e <_Z10zeroReturni>
    1442:	ce 01       	movw	r24, r28
    1444:	43 96       	adiw	r24, 0x13	; 19
    1446:	bc 01       	movw	r22, r24
    1448:	8c ec       	ldi	r24, 0xCC	; 204
    144a:	92 e0       	ldi	r25, 0x02	; 2
    144c:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    1450:	ce 01       	movw	r24, r28
    1452:	43 96       	adiw	r24, 0x13	; 19
    1454:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
	
	
	display.setCursor(0,20);
    1458:	44 e1       	ldi	r20, 0x14	; 20
    145a:	50 e0       	ldi	r21, 0x00	; 0
    145c:	60 e0       	ldi	r22, 0x00	; 0
    145e:	70 e0       	ldi	r23, 0x00	; 0
    1460:	8c ec       	ldi	r24, 0xCC	; 204
    1462:	92 e0       	ldi	r25, 0x02	; 2
    1464:	9e dd       	rcall	.-1220   	; 0xfa2 <_ZN12Adafruit_GFX9setCursorEii>


	display.print(zeroReturn(dt.hour)); display.print(":");
    1466:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <dt+0x4>
    146a:	28 2f       	mov	r18, r24
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	ce 01       	movw	r24, r28
    1470:	0d 96       	adiw	r24, 0x0d	; 13
    1472:	b9 01       	movw	r22, r18
    1474:	4c df       	rcall	.-360    	; 0x130e <_Z10zeroReturni>
    1476:	ce 01       	movw	r24, r28
    1478:	0d 96       	adiw	r24, 0x0d	; 13
    147a:	bc 01       	movw	r22, r24
    147c:	8c ec       	ldi	r24, 0xCC	; 204
    147e:	92 e0       	ldi	r25, 0x02	; 2
    1480:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    1484:	ce 01       	movw	r24, r28
    1486:	0d 96       	adiw	r24, 0x0d	; 13
    1488:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
    148c:	69 e0       	ldi	r22, 0x09	; 9
    148e:	72 e0       	ldi	r23, 0x02	; 2
    1490:	8c ec       	ldi	r24, 0xCC	; 204
    1492:	92 e0       	ldi	r25, 0x02	; 2
    1494:	0e 94 91 48 	call	0x9122	; 0x9122 <_ZN5Print5printEPKc>
	
	display.print(zeroReturn(dt.minute)); display.print(":");
    1498:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <dt+0x5>
    149c:	28 2f       	mov	r18, r24
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	ce 01       	movw	r24, r28
    14a2:	07 96       	adiw	r24, 0x07	; 7
    14a4:	b9 01       	movw	r22, r18
    14a6:	33 df       	rcall	.-410    	; 0x130e <_Z10zeroReturni>
    14a8:	ce 01       	movw	r24, r28
    14aa:	07 96       	adiw	r24, 0x07	; 7
    14ac:	bc 01       	movw	r22, r24
    14ae:	8c ec       	ldi	r24, 0xCC	; 204
    14b0:	92 e0       	ldi	r25, 0x02	; 2
    14b2:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    14b6:	ce 01       	movw	r24, r28
    14b8:	07 96       	adiw	r24, 0x07	; 7
    14ba:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>
    14be:	69 e0       	ldi	r22, 0x09	; 9
    14c0:	72 e0       	ldi	r23, 0x02	; 2
    14c2:	8c ec       	ldi	r24, 0xCC	; 204
    14c4:	92 e0       	ldi	r25, 0x02	; 2
    14c6:	0e 94 91 48 	call	0x9122	; 0x9122 <_ZN5Print5printEPKc>
	
	display.print(zeroReturn(dt.second));
    14ca:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <dt+0x6>
    14ce:	88 2f       	mov	r24, r24
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	bc 01       	movw	r22, r24
    14d4:	ce 01       	movw	r24, r28
    14d6:	01 96       	adiw	r24, 0x01	; 1
    14d8:	1a df       	rcall	.-460    	; 0x130e <_Z10zeroReturni>
    14da:	ce 01       	movw	r24, r28
    14dc:	01 96       	adiw	r24, 0x01	; 1
    14de:	bc 01       	movw	r22, r24
    14e0:	8c ec       	ldi	r24, 0xCC	; 204
    14e2:	92 e0       	ldi	r25, 0x02	; 2
    14e4:	0e 94 83 48 	call	0x9106	; 0x9106 <_ZN5Print5printERK6String>
    14e8:	ce 01       	movw	r24, r28
    14ea:	01 96       	adiw	r24, 0x01	; 1
    14ec:	0e 94 1e 4b 	call	0x963c	; 0x963c <_ZN6StringD1Ev>


	display.display();
    14f0:	8c ec       	ldi	r24, 0xCC	; 204
    14f2:	92 e0       	ldi	r25, 0x02	; 2
    14f4:	0e 94 83 33 	call	0x6706	; 0x6706 <_ZN16Adafruit_SSD13067displayEv>
}
    14f8:	00 00       	nop
    14fa:	a4 96       	adiw	r28, 0x24	; 36
    14fc:	0f b6       	in	r0, 0x3f	; 63
    14fe:	f8 94       	cli
    1500:	de bf       	out	0x3e, r29	; 62
    1502:	0f be       	out	0x3f, r0	; 63
    1504:	cd bf       	out	0x3d, r28	; 61
    1506:	df 91       	pop	r29
    1508:	cf 91       	pop	r28
    150a:	08 95       	ret

0000150c <_Z11DisplayTempii>:

void DisplayTemp(int h, int t)
{
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
    1510:	00 d0       	rcall	.+0      	; 0x1512 <_Z11DisplayTempii+0x6>
    1512:	1f 92       	push	r1
    1514:	cd b7       	in	r28, 0x3d	; 61
    1516:	de b7       	in	r29, 0x3e	; 62
    1518:	9a 83       	std	Y+2, r25	; 0x02
    151a:	89 83       	std	Y+1, r24	; 0x01
    151c:	7c 83       	std	Y+4, r23	; 0x04
    151e:	6b 83       	std	Y+3, r22	; 0x03
	display.setCursor(0,0);
    1520:	40 e0       	ldi	r20, 0x00	; 0
    1522:	50 e0       	ldi	r21, 0x00	; 0
    1524:	60 e0       	ldi	r22, 0x00	; 0
    1526:	70 e0       	ldi	r23, 0x00	; 0
    1528:	8c ec       	ldi	r24, 0xCC	; 204
    152a:	92 e0       	ldi	r25, 0x02	; 2
    152c:	3a dd       	rcall	.-1420   	; 0xfa2 <_ZN12Adafruit_GFX9setCursorEii>
	
	display.clearDisplay();
    152e:	8c ec       	ldi	r24, 0xCC	; 204
    1530:	92 e0       	ldi	r25, 0x02	; 2
    1532:	0e 94 25 2f 	call	0x5e4a	; 0x5e4a <_ZN16Adafruit_SSD130612clearDisplayEv>
	
	display.print(F("Hum: "));
    1536:	86 eb       	ldi	r24, 0xB6	; 182
    1538:	93 e0       	ldi	r25, 0x03	; 3
    153a:	bc 01       	movw	r22, r24
    153c:	8c ec       	ldi	r24, 0xCC	; 204
    153e:	92 e0       	ldi	r25, 0x02	; 2
    1540:	0e 94 5f 48 	call	0x90be	; 0x90be <_ZN5Print5printEPK19__FlashStringHelper>
	display.print(h);
    1544:	89 81       	ldd	r24, Y+1	; 0x01
    1546:	9a 81       	ldd	r25, Y+2	; 0x02
    1548:	4a e0       	ldi	r20, 0x0A	; 10
    154a:	50 e0       	ldi	r21, 0x00	; 0
    154c:	bc 01       	movw	r22, r24
    154e:	8c ec       	ldi	r24, 0xCC	; 204
    1550:	92 e0       	ldi	r25, 0x02	; 2
    1552:	0e 94 38 49 	call	0x9270	; 0x9270 <_ZN5Print5printEii>
	display.print(F("%"));
    1556:	8c eb       	ldi	r24, 0xBC	; 188
    1558:	93 e0       	ldi	r25, 0x03	; 3
    155a:	bc 01       	movw	r22, r24
    155c:	8c ec       	ldi	r24, 0xCC	; 204
    155e:	92 e0       	ldi	r25, 0x02	; 2
    1560:	0e 94 5f 48 	call	0x90be	; 0x90be <_ZN5Print5printEPK19__FlashStringHelper>
	
	display.setCursor(0,20);
    1564:	44 e1       	ldi	r20, 0x14	; 20
    1566:	50 e0       	ldi	r21, 0x00	; 0
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	70 e0       	ldi	r23, 0x00	; 0
    156c:	8c ec       	ldi	r24, 0xCC	; 204
    156e:	92 e0       	ldi	r25, 0x02	; 2
    1570:	18 dd       	rcall	.-1488   	; 0xfa2 <_ZN12Adafruit_GFX9setCursorEii>
	
	display.print(F("Temp: "));
    1572:	8e eb       	ldi	r24, 0xBE	; 190
    1574:	93 e0       	ldi	r25, 0x03	; 3
    1576:	bc 01       	movw	r22, r24
    1578:	8c ec       	ldi	r24, 0xCC	; 204
    157a:	92 e0       	ldi	r25, 0x02	; 2
    157c:	0e 94 5f 48 	call	0x90be	; 0x90be <_ZN5Print5printEPK19__FlashStringHelper>
	display.print(t);
    1580:	8b 81       	ldd	r24, Y+3	; 0x03
    1582:	9c 81       	ldd	r25, Y+4	; 0x04
    1584:	4a e0       	ldi	r20, 0x0A	; 10
    1586:	50 e0       	ldi	r21, 0x00	; 0
    1588:	bc 01       	movw	r22, r24
    158a:	8c ec       	ldi	r24, 0xCC	; 204
    158c:	92 e0       	ldi	r25, 0x02	; 2
    158e:	0e 94 38 49 	call	0x9270	; 0x9270 <_ZN5Print5printEii>
	display.print(grad);
    1592:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <grad>
    1596:	68 2f       	mov	r22, r24
    1598:	8c ec       	ldi	r24, 0xCC	; 204
    159a:	92 e0       	ldi	r25, 0x02	; 2
    159c:	0e 94 92 48 	call	0x9124	; 0x9124 <_ZN5Print5printEc>
	display.print(F("C "));
    15a0:	85 ec       	ldi	r24, 0xC5	; 197
    15a2:	93 e0       	ldi	r25, 0x03	; 3
    15a4:	bc 01       	movw	r22, r24
    15a6:	8c ec       	ldi	r24, 0xCC	; 204
    15a8:	92 e0       	ldi	r25, 0x02	; 2
    15aa:	0e 94 5f 48 	call	0x90be	; 0x90be <_ZN5Print5printEPK19__FlashStringHelper>
	
	display.display();
    15ae:	8c ec       	ldi	r24, 0xCC	; 204
    15b0:	92 e0       	ldi	r25, 0x02	; 2
    15b2:	0e 94 83 33 	call	0x6706	; 0x6706 <_ZN16Adafruit_SSD13067displayEv>
}
    15b6:	00 00       	nop
    15b8:	0f 90       	pop	r0
    15ba:	0f 90       	pop	r0
    15bc:	0f 90       	pop	r0
    15be:	0f 90       	pop	r0
    15c0:	df 91       	pop	r29
    15c2:	cf 91       	pop	r28
    15c4:	08 95       	ret

000015c6 <_Z41__static_initialization_and_destruction_0ii>:
    15c6:	8f 92       	push	r8
    15c8:	9f 92       	push	r9
    15ca:	af 92       	push	r10
    15cc:	bf 92       	push	r11
    15ce:	cf 92       	push	r12
    15d0:	df 92       	push	r13
    15d2:	ef 92       	push	r14
    15d4:	ff 92       	push	r15
    15d6:	0f 93       	push	r16
    15d8:	cf 93       	push	r28
    15da:	df 93       	push	r29
    15dc:	00 d0       	rcall	.+0      	; 0x15de <_Z41__static_initialization_and_destruction_0ii+0x18>
    15de:	1f 92       	push	r1
    15e0:	cd b7       	in	r28, 0x3d	; 61
    15e2:	de b7       	in	r29, 0x3e	; 62
    15e4:	9a 83       	std	Y+2, r25	; 0x02
    15e6:	89 83       	std	Y+1, r24	; 0x01
    15e8:	7c 83       	std	Y+4, r23	; 0x04
    15ea:	6b 83       	std	Y+3, r22	; 0x03
    15ec:	89 81       	ldd	r24, Y+1	; 0x01
    15ee:	9a 81       	ldd	r25, Y+2	; 0x02
    15f0:	01 97       	sbiw	r24, 0x01	; 1
    15f2:	29 f5       	brne	.+74     	; 0x163e <_Z41__static_initialization_and_destruction_0ii+0x78>
    15f4:	8b 81       	ldd	r24, Y+3	; 0x03
    15f6:	9c 81       	ldd	r25, Y+4	; 0x04
    15f8:	01 96       	adiw	r24, 0x01	; 1
    15fa:	09 f5       	brne	.+66     	; 0x163e <_Z41__static_initialization_and_destruction_0ii+0x78>
//OLED
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define OLED_RESET 4
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
    15fc:	0f 2e       	mov	r0, r31
    15fe:	f0 ea       	ldi	r31, 0xA0	; 160
    1600:	8f 2e       	mov	r8, r31
    1602:	f6 e8       	ldi	r31, 0x86	; 134
    1604:	9f 2e       	mov	r9, r31
    1606:	aa 24       	eor	r10, r10
    1608:	a3 94       	inc	r10
    160a:	b1 2c       	mov	r11, r1
    160c:	f0 2d       	mov	r31, r0
    160e:	0f 2e       	mov	r0, r31
    1610:	f0 e8       	ldi	r31, 0x80	; 128
    1612:	cf 2e       	mov	r12, r31
    1614:	fa e1       	ldi	r31, 0x1A	; 26
    1616:	df 2e       	mov	r13, r31
    1618:	f6 e0       	ldi	r31, 0x06	; 6
    161a:	ef 2e       	mov	r14, r31
    161c:	f1 2c       	mov	r15, r1
    161e:	f0 2d       	mov	r31, r0
    1620:	04 e0       	ldi	r16, 0x04	; 4
    1622:	27 ee       	ldi	r18, 0xE7	; 231
    1624:	33 e0       	ldi	r19, 0x03	; 3
    1626:	40 e4       	ldi	r20, 0x40	; 64
    1628:	60 e8       	ldi	r22, 0x80	; 128
    162a:	8c ec       	ldi	r24, 0xCC	; 204
    162c:	92 e0       	ldi	r25, 0x02	; 2
    162e:	0e 94 e5 26 	call	0x4dca	; 0x4dca <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm>

//DHT
#define DHTPIN 8  
#define DHTTYPE DHT11  

DHT dht(DHTPIN, DHTTYPE);
    1632:	26 e0       	ldi	r18, 0x06	; 6
    1634:	4b e0       	ldi	r20, 0x0B	; 11
    1636:	68 e0       	ldi	r22, 0x08	; 8
    1638:	8c e0       	ldi	r24, 0x0C	; 12
    163a:	93 e0       	ldi	r25, 0x03	; 3
    163c:	94 d0       	rcall	.+296    	; 0x1766 <_ZN3DHTC1Ehhh>
    163e:	89 81       	ldd	r24, Y+1	; 0x01
    1640:	9a 81       	ldd	r25, Y+2	; 0x02
    1642:	89 2b       	or	r24, r25
    1644:	41 f4       	brne	.+16     	; 0x1656 <_Z41__static_initialization_and_destruction_0ii+0x90>
    1646:	8b 81       	ldd	r24, Y+3	; 0x03
    1648:	9c 81       	ldd	r25, Y+4	; 0x04
    164a:	01 96       	adiw	r24, 0x01	; 1
    164c:	21 f4       	brne	.+8      	; 0x1656 <_Z41__static_initialization_and_destruction_0ii+0x90>
//OLED
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define OLED_RESET 4
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
    164e:	8c ec       	ldi	r24, 0xCC	; 204
    1650:	92 e0       	ldi	r25, 0x02	; 2
    1652:	0e 94 77 27 	call	0x4eee	; 0x4eee <_ZN16Adafruit_SSD1306D1Ev>
	display.print(t);
	display.print(grad);
	display.print(F("C "));
	
	display.display();
}
    1656:	00 00       	nop
    1658:	0f 90       	pop	r0
    165a:	0f 90       	pop	r0
    165c:	0f 90       	pop	r0
    165e:	0f 90       	pop	r0
    1660:	df 91       	pop	r29
    1662:	cf 91       	pop	r28
    1664:	0f 91       	pop	r16
    1666:	ff 90       	pop	r15
    1668:	ef 90       	pop	r14
    166a:	df 90       	pop	r13
    166c:	cf 90       	pop	r12
    166e:	bf 90       	pop	r11
    1670:	af 90       	pop	r10
    1672:	9f 90       	pop	r9
    1674:	8f 90       	pop	r8
    1676:	08 95       	ret

00001678 <_GLOBAL__sub_I_clock>:
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	cd b7       	in	r28, 0x3d	; 61
    167e:	de b7       	in	r29, 0x3e	; 62
    1680:	6f ef       	ldi	r22, 0xFF	; 255
    1682:	7f ef       	ldi	r23, 0xFF	; 255
    1684:	81 e0       	ldi	r24, 0x01	; 1
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	9e df       	rcall	.-196    	; 0x15c6 <_Z41__static_initialization_and_destruction_0ii>
    168a:	df 91       	pop	r29
    168c:	cf 91       	pop	r28
    168e:	08 95       	ret

00001690 <_GLOBAL__sub_D_clock>:
    1690:	cf 93       	push	r28
    1692:	df 93       	push	r29
    1694:	cd b7       	in	r28, 0x3d	; 61
    1696:	de b7       	in	r29, 0x3e	; 62
    1698:	6f ef       	ldi	r22, 0xFF	; 255
    169a:	7f ef       	ldi	r23, 0xFF	; 255
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	92 df       	rcall	.-220    	; 0x15c6 <_Z41__static_initialization_and_destruction_0ii>
    16a2:	df 91       	pop	r29
    16a4:	cf 91       	pop	r28
    16a6:	08 95       	ret

000016a8 <_ZN5Print17availableForWriteEv>:
      return write((const uint8_t *)buffer, size);
    }

    // default to zero, meaning "a single write may block"
    // should be overriden by subclasses with buffering
    virtual int availableForWrite() { return 0; }
    16a8:	cf 93       	push	r28
    16aa:	df 93       	push	r29
    16ac:	1f 92       	push	r1
    16ae:	1f 92       	push	r1
    16b0:	cd b7       	in	r28, 0x3d	; 61
    16b2:	de b7       	in	r29, 0x3e	; 62
    16b4:	9a 83       	std	Y+2, r25	; 0x02
    16b6:	89 83       	std	Y+1, r24	; 0x01
    16b8:	80 e0       	ldi	r24, 0x00	; 0
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	0f 90       	pop	r0
    16be:	0f 90       	pop	r0
    16c0:	df 91       	pop	r29
    16c2:	cf 91       	pop	r28
    16c4:	08 95       	ret

000016c6 <_ZN5Print5flushEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    16c6:	cf 93       	push	r28
    16c8:	df 93       	push	r29
    16ca:	1f 92       	push	r1
    16cc:	1f 92       	push	r1
    16ce:	cd b7       	in	r28, 0x3d	; 61
    16d0:	de b7       	in	r29, 0x3e	; 62
    16d2:	9a 83       	std	Y+2, r25	; 0x02
    16d4:	89 83       	std	Y+1, r24	; 0x01
    16d6:	00 00       	nop
    16d8:	0f 90       	pop	r0
    16da:	0f 90       	pop	r0
    16dc:	df 91       	pop	r29
    16de:	cf 91       	pop	r28
    16e0:	08 95       	ret

000016e2 <_ZNK12Adafruit_GFX5widthEv>:
  /*!
    @brief      Get width of the display, accounting for current rotation
    @returns    Width in pixels
  */
  /************************************************************************/
  int16_t width(void) const { return _width; };
    16e2:	cf 93       	push	r28
    16e4:	df 93       	push	r29
    16e6:	1f 92       	push	r1
    16e8:	1f 92       	push	r1
    16ea:	cd b7       	in	r28, 0x3d	; 61
    16ec:	de b7       	in	r29, 0x3e	; 62
    16ee:	9a 83       	std	Y+2, r25	; 0x02
    16f0:	89 83       	std	Y+1, r24	; 0x01
    16f2:	89 81       	ldd	r24, Y+1	; 0x01
    16f4:	9a 81       	ldd	r25, Y+2	; 0x02
    16f6:	fc 01       	movw	r30, r24
    16f8:	80 85       	ldd	r24, Z+8	; 0x08
    16fa:	91 85       	ldd	r25, Z+9	; 0x09
    16fc:	0f 90       	pop	r0
    16fe:	0f 90       	pop	r0
    1700:	df 91       	pop	r29
    1702:	cf 91       	pop	r28
    1704:	08 95       	ret

00001706 <_ZNK12Adafruit_GFX6heightEv>:
  /*!
    @brief      Get height of the display, accounting for current rotation
    @returns    Height in pixels
  */
  /************************************************************************/
  int16_t height(void) const { return _height; }
    1706:	cf 93       	push	r28
    1708:	df 93       	push	r29
    170a:	1f 92       	push	r1
    170c:	1f 92       	push	r1
    170e:	cd b7       	in	r28, 0x3d	; 61
    1710:	de b7       	in	r29, 0x3e	; 62
    1712:	9a 83       	std	Y+2, r25	; 0x02
    1714:	89 83       	std	Y+1, r24	; 0x01
    1716:	89 81       	ldd	r24, Y+1	; 0x01
    1718:	9a 81       	ldd	r25, Y+2	; 0x02
    171a:	fc 01       	movw	r30, r24
    171c:	82 85       	ldd	r24, Z+10	; 0x0a
    171e:	93 85       	ldd	r25, Z+11	; 0x0b
    1720:	0f 90       	pop	r0
    1722:	0f 90       	pop	r0
    1724:	df 91       	pop	r29
    1726:	cf 91       	pop	r28
    1728:	08 95       	ret

0000172a <_ZN13InterruptLockC1Ev>:
 */
float DHT::computeHeatIndex(bool isFahrenheit) {
  float hi = computeHeatIndex(readTemperature(isFahrenheit), readHumidity(),
                              isFahrenheit);
  return hi;
}
    172a:	cf 93       	push	r28
    172c:	df 93       	push	r29
    172e:	1f 92       	push	r1
    1730:	1f 92       	push	r1
    1732:	cd b7       	in	r28, 0x3d	; 61
    1734:	de b7       	in	r29, 0x3e	; 62
    1736:	9a 83       	std	Y+2, r25	; 0x02
    1738:	89 83       	std	Y+1, r24	; 0x01
    173a:	f8 94       	cli
    173c:	00 00       	nop
    173e:	0f 90       	pop	r0
    1740:	0f 90       	pop	r0
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	08 95       	ret

00001748 <_ZN13InterruptLockD1Ev>:
    1748:	cf 93       	push	r28
    174a:	df 93       	push	r29
    174c:	1f 92       	push	r1
    174e:	1f 92       	push	r1
    1750:	cd b7       	in	r28, 0x3d	; 61
    1752:	de b7       	in	r29, 0x3e	; 62
    1754:	9a 83       	std	Y+2, r25	; 0x02
    1756:	89 83       	std	Y+1, r24	; 0x01
    1758:	78 94       	sei
    175a:	00 00       	nop
    175c:	0f 90       	pop	r0
    175e:	0f 90       	pop	r0
    1760:	df 91       	pop	r29
    1762:	cf 91       	pop	r28
    1764:	08 95       	ret

00001766 <_ZN3DHTC1Ehhh>:
    1766:	cf 93       	push	r28
    1768:	df 93       	push	r29
    176a:	cd b7       	in	r28, 0x3d	; 61
    176c:	de b7       	in	r29, 0x3e	; 62
    176e:	2b 97       	sbiw	r28, 0x0b	; 11
    1770:	0f b6       	in	r0, 0x3f	; 63
    1772:	f8 94       	cli
    1774:	de bf       	out	0x3e, r29	; 62
    1776:	0f be       	out	0x3f, r0	; 63
    1778:	cd bf       	out	0x3d, r28	; 61
    177a:	98 87       	std	Y+8, r25	; 0x08
    177c:	8f 83       	std	Y+7, r24	; 0x07
    177e:	69 87       	std	Y+9, r22	; 0x09
    1780:	4a 87       	std	Y+10, r20	; 0x0a
    1782:	2b 87       	std	Y+11, r18	; 0x0b
    1784:	8f 81       	ldd	r24, Y+7	; 0x07
    1786:	98 85       	ldd	r25, Y+8	; 0x08
    1788:	29 85       	ldd	r18, Y+9	; 0x09
    178a:	fc 01       	movw	r30, r24
    178c:	25 83       	std	Z+5, r18	; 0x05
    178e:	8f 81       	ldd	r24, Y+7	; 0x07
    1790:	98 85       	ldd	r25, Y+8	; 0x08
    1792:	2a 85       	ldd	r18, Y+10	; 0x0a
    1794:	fc 01       	movw	r30, r24
    1796:	26 83       	std	Z+6, r18	; 0x06
    1798:	89 85       	ldd	r24, Y+9	; 0x09
    179a:	88 2f       	mov	r24, r24
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	83 51       	subi	r24, 0x13	; 19
    17a0:	92 4f       	sbci	r25, 0xF2	; 242
    17a2:	9a 83       	std	Y+2, r25	; 0x02
    17a4:	89 83       	std	Y+1, r24	; 0x01
    17a6:	89 81       	ldd	r24, Y+1	; 0x01
    17a8:	9a 81       	ldd	r25, Y+2	; 0x02
    17aa:	fc 01       	movw	r30, r24
    17ac:	84 91       	lpm	r24, Z
    17ae:	8b 83       	std	Y+3, r24	; 0x03
    17b0:	8f 81       	ldd	r24, Y+7	; 0x07
    17b2:	98 85       	ldd	r25, Y+8	; 0x08
    17b4:	2b 81       	ldd	r18, Y+3	; 0x03
    17b6:	fc 01       	movw	r30, r24
    17b8:	27 83       	std	Z+7, r18	; 0x07
    17ba:	89 85       	ldd	r24, Y+9	; 0x09
    17bc:	88 2f       	mov	r24, r24
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	8d 5c       	subi	r24, 0xCD	; 205
    17c2:	91 4f       	sbci	r25, 0xF1	; 241
    17c4:	9d 83       	std	Y+5, r25	; 0x05
    17c6:	8c 83       	std	Y+4, r24	; 0x04
    17c8:	8c 81       	ldd	r24, Y+4	; 0x04
    17ca:	9d 81       	ldd	r25, Y+5	; 0x05
    17cc:	fc 01       	movw	r30, r24
    17ce:	84 91       	lpm	r24, Z
    17d0:	8e 83       	std	Y+6, r24	; 0x06
    17d2:	8f 81       	ldd	r24, Y+7	; 0x07
    17d4:	98 85       	ldd	r25, Y+8	; 0x08
    17d6:	2e 81       	ldd	r18, Y+6	; 0x06
    17d8:	fc 01       	movw	r30, r24
    17da:	20 87       	std	Z+8, r18	; 0x08
    17dc:	2f 81       	ldd	r18, Y+7	; 0x07
    17de:	38 85       	ldd	r19, Y+8	; 0x08
    17e0:	80 e8       	ldi	r24, 0x80	; 128
    17e2:	9e e3       	ldi	r25, 0x3E	; 62
    17e4:	a0 e0       	ldi	r26, 0x00	; 0
    17e6:	b0 e0       	ldi	r27, 0x00	; 0
    17e8:	f9 01       	movw	r30, r18
    17ea:	85 87       	std	Z+13, r24	; 0x0d
    17ec:	96 87       	std	Z+14, r25	; 0x0e
    17ee:	a7 87       	std	Z+15, r26	; 0x0f
    17f0:	b0 8b       	std	Z+16, r27	; 0x10
    17f2:	00 00       	nop
    17f4:	2b 96       	adiw	r28, 0x0b	; 11
    17f6:	0f b6       	in	r0, 0x3f	; 63
    17f8:	f8 94       	cli
    17fa:	de bf       	out	0x3e, r29	; 62
    17fc:	0f be       	out	0x3f, r0	; 63
    17fe:	cd bf       	out	0x3d, r28	; 61
    1800:	df 91       	pop	r29
    1802:	cf 91       	pop	r28
    1804:	08 95       	ret

00001806 <_ZN3DHT5beginEh>:
    1806:	cf 93       	push	r28
    1808:	df 93       	push	r29
    180a:	00 d0       	rcall	.+0      	; 0x180c <_ZN3DHT5beginEh+0x6>
    180c:	cd b7       	in	r28, 0x3d	; 61
    180e:	de b7       	in	r29, 0x3e	; 62
    1810:	9a 83       	std	Y+2, r25	; 0x02
    1812:	89 83       	std	Y+1, r24	; 0x01
    1814:	6b 83       	std	Y+3, r22	; 0x03
    1816:	89 81       	ldd	r24, Y+1	; 0x01
    1818:	9a 81       	ldd	r25, Y+2	; 0x02
    181a:	fc 01       	movw	r30, r24
    181c:	85 81       	ldd	r24, Z+5	; 0x05
    181e:	62 e0       	ldi	r22, 0x02	; 2
    1820:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    1824:	0e 94 88 49 	call	0x9310	; 0x9310 <millis>
    1828:	dc 01       	movw	r26, r24
    182a:	cb 01       	movw	r24, r22
    182c:	80 5d       	subi	r24, 0xD0	; 208
    182e:	97 40       	sbci	r25, 0x07	; 7
    1830:	a1 09       	sbc	r26, r1
    1832:	b1 09       	sbc	r27, r1
    1834:	29 81       	ldd	r18, Y+1	; 0x01
    1836:	3a 81       	ldd	r19, Y+2	; 0x02
    1838:	f9 01       	movw	r30, r18
    183a:	81 87       	std	Z+9, r24	; 0x09
    183c:	92 87       	std	Z+10, r25	; 0x0a
    183e:	a3 87       	std	Z+11, r26	; 0x0b
    1840:	b4 87       	std	Z+12, r27	; 0x0c
    1842:	89 81       	ldd	r24, Y+1	; 0x01
    1844:	9a 81       	ldd	r25, Y+2	; 0x02
    1846:	2b 81       	ldd	r18, Y+3	; 0x03
    1848:	fc 01       	movw	r30, r24
    184a:	22 8b       	std	Z+18, r18	; 0x12
    184c:	00 00       	nop
    184e:	0f 90       	pop	r0
    1850:	0f 90       	pop	r0
    1852:	0f 90       	pop	r0
    1854:	df 91       	pop	r29
    1856:	cf 91       	pop	r28
    1858:	08 95       	ret

0000185a <_ZN3DHT15readTemperatureEbb>:
    185a:	cf 93       	push	r28
    185c:	df 93       	push	r29
    185e:	cd b7       	in	r28, 0x3d	; 61
    1860:	de b7       	in	r29, 0x3e	; 62
    1862:	28 97       	sbiw	r28, 0x08	; 8
    1864:	0f b6       	in	r0, 0x3f	; 63
    1866:	f8 94       	cli
    1868:	de bf       	out	0x3e, r29	; 62
    186a:	0f be       	out	0x3f, r0	; 63
    186c:	cd bf       	out	0x3d, r28	; 61
    186e:	9e 83       	std	Y+6, r25	; 0x06
    1870:	8d 83       	std	Y+5, r24	; 0x05
    1872:	6f 83       	std	Y+7, r22	; 0x07
    1874:	48 87       	std	Y+8, r20	; 0x08
    1876:	80 e0       	ldi	r24, 0x00	; 0
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	a0 ec       	ldi	r26, 0xC0	; 192
    187c:	bf e7       	ldi	r27, 0x7F	; 127
    187e:	89 83       	std	Y+1, r24	; 0x01
    1880:	9a 83       	std	Y+2, r25	; 0x02
    1882:	ab 83       	std	Y+3, r26	; 0x03
    1884:	bc 83       	std	Y+4, r27	; 0x04
    1886:	8d 81       	ldd	r24, Y+5	; 0x05
    1888:	9e 81       	ldd	r25, Y+6	; 0x06
    188a:	68 85       	ldd	r22, Y+8	; 0x08
    188c:	49 d5       	rcall	.+2706   	; 0x2320 <_ZN3DHT4readEb>
    188e:	88 23       	and	r24, r24
    1890:	09 f4       	brne	.+2      	; 0x1894 <_ZN3DHT15readTemperatureEbb+0x3a>
    1892:	34 c1       	rjmp	.+616    	; 0x1afc <_ZN3DHT15readTemperatureEbb+0x2a2>
    1894:	8d 81       	ldd	r24, Y+5	; 0x05
    1896:	9e 81       	ldd	r25, Y+6	; 0x06
    1898:	fc 01       	movw	r30, r24
    189a:	86 81       	ldd	r24, Z+6	; 0x06
    189c:	88 2f       	mov	r24, r24
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	8c 30       	cpi	r24, 0x0C	; 12
    18a2:	91 05       	cpc	r25, r1
    18a4:	09 f4       	brne	.+2      	; 0x18a8 <_ZN3DHT15readTemperatureEbb+0x4e>
    18a6:	72 c0       	rjmp	.+228    	; 0x198c <_ZN3DHT15readTemperatureEbb+0x132>
    18a8:	8d 30       	cpi	r24, 0x0D	; 13
    18aa:	91 05       	cpc	r25, r1
    18ac:	1c f4       	brge	.+6      	; 0x18b4 <_ZN3DHT15readTemperatureEbb+0x5a>
    18ae:	0b 97       	sbiw	r24, 0x0b	; 11
    18b0:	31 f0       	breq	.+12     	; 0x18be <_ZN3DHT15readTemperatureEbb+0x64>
    18b2:	24 c1       	rjmp	.+584    	; 0x1afc <_ZN3DHT15readTemperatureEbb+0x2a2>
    18b4:	45 97       	sbiw	r24, 0x15	; 21
    18b6:	02 97       	sbiw	r24, 0x02	; 2
    18b8:	08 f0       	brcs	.+2      	; 0x18bc <_ZN3DHT15readTemperatureEbb+0x62>
    18ba:	20 c1       	rjmp	.+576    	; 0x1afc <_ZN3DHT15readTemperatureEbb+0x2a2>
    18bc:	c7 c0       	rjmp	.+398    	; 0x1a4c <_ZN3DHT15readTemperatureEbb+0x1f2>
    18be:	8d 81       	ldd	r24, Y+5	; 0x05
    18c0:	9e 81       	ldd	r25, Y+6	; 0x06
    18c2:	fc 01       	movw	r30, r24
    18c4:	82 81       	ldd	r24, Z+2	; 0x02
    18c6:	88 2f       	mov	r24, r24
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	a0 e0       	ldi	r26, 0x00	; 0
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	bc 01       	movw	r22, r24
    18d0:	cd 01       	movw	r24, r26
    18d2:	0e 94 45 43 	call	0x868a	; 0x868a <__floatunsisf>
    18d6:	dc 01       	movw	r26, r24
    18d8:	cb 01       	movw	r24, r22
    18da:	89 83       	std	Y+1, r24	; 0x01
    18dc:	9a 83       	std	Y+2, r25	; 0x02
    18de:	ab 83       	std	Y+3, r26	; 0x03
    18e0:	bc 83       	std	Y+4, r27	; 0x04
    18e2:	8d 81       	ldd	r24, Y+5	; 0x05
    18e4:	9e 81       	ldd	r25, Y+6	; 0x06
    18e6:	fc 01       	movw	r30, r24
    18e8:	83 81       	ldd	r24, Z+3	; 0x03
    18ea:	88 23       	and	r24, r24
    18ec:	84 f4       	brge	.+32     	; 0x190e <_ZN3DHT15readTemperatureEbb+0xb4>
    18ee:	29 81       	ldd	r18, Y+1	; 0x01
    18f0:	3a 81       	ldd	r19, Y+2	; 0x02
    18f2:	4b 81       	ldd	r20, Y+3	; 0x03
    18f4:	5c 81       	ldd	r21, Y+4	; 0x04
    18f6:	60 e0       	ldi	r22, 0x00	; 0
    18f8:	70 e0       	ldi	r23, 0x00	; 0
    18fa:	80 e8       	ldi	r24, 0x80	; 128
    18fc:	9f eb       	ldi	r25, 0xBF	; 191
    18fe:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    1902:	dc 01       	movw	r26, r24
    1904:	cb 01       	movw	r24, r22
    1906:	89 83       	std	Y+1, r24	; 0x01
    1908:	9a 83       	std	Y+2, r25	; 0x02
    190a:	ab 83       	std	Y+3, r26	; 0x03
    190c:	bc 83       	std	Y+4, r27	; 0x04
    190e:	8d 81       	ldd	r24, Y+5	; 0x05
    1910:	9e 81       	ldd	r25, Y+6	; 0x06
    1912:	fc 01       	movw	r30, r24
    1914:	83 81       	ldd	r24, Z+3	; 0x03
    1916:	88 2f       	mov	r24, r24
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	8f 70       	andi	r24, 0x0F	; 15
    191c:	99 27       	eor	r25, r25
    191e:	09 2e       	mov	r0, r25
    1920:	00 0c       	add	r0, r0
    1922:	aa 0b       	sbc	r26, r26
    1924:	bb 0b       	sbc	r27, r27
    1926:	bc 01       	movw	r22, r24
    1928:	cd 01       	movw	r24, r26
    192a:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	2d ec       	ldi	r18, 0xCD	; 205
    1934:	3c ec       	ldi	r19, 0xCC	; 204
    1936:	4c ec       	ldi	r20, 0xCC	; 204
    1938:	5d e3       	ldi	r21, 0x3D	; 61
    193a:	bc 01       	movw	r22, r24
    193c:	cd 01       	movw	r24, r26
    193e:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1942:	dc 01       	movw	r26, r24
    1944:	cb 01       	movw	r24, r22
    1946:	9c 01       	movw	r18, r24
    1948:	ad 01       	movw	r20, r26
    194a:	69 81       	ldd	r22, Y+1	; 0x01
    194c:	7a 81       	ldd	r23, Y+2	; 0x02
    194e:	8b 81       	ldd	r24, Y+3	; 0x03
    1950:	9c 81       	ldd	r25, Y+4	; 0x04
    1952:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1956:	dc 01       	movw	r26, r24
    1958:	cb 01       	movw	r24, r22
    195a:	89 83       	std	Y+1, r24	; 0x01
    195c:	9a 83       	std	Y+2, r25	; 0x02
    195e:	ab 83       	std	Y+3, r26	; 0x03
    1960:	bc 83       	std	Y+4, r27	; 0x04
    1962:	8f 81       	ldd	r24, Y+7	; 0x07
    1964:	88 23       	and	r24, r24
    1966:	09 f4       	brne	.+2      	; 0x196a <_ZN3DHT15readTemperatureEbb+0x110>
    1968:	c4 c0       	rjmp	.+392    	; 0x1af2 <_ZN3DHT15readTemperatureEbb+0x298>
    196a:	89 81       	ldd	r24, Y+1	; 0x01
    196c:	9a 81       	ldd	r25, Y+2	; 0x02
    196e:	ab 81       	ldd	r26, Y+3	; 0x03
    1970:	bc 81       	ldd	r27, Y+4	; 0x04
    1972:	2d 81       	ldd	r18, Y+5	; 0x05
    1974:	3e 81       	ldd	r19, Y+6	; 0x06
    1976:	ac 01       	movw	r20, r24
    1978:	bd 01       	movw	r22, r26
    197a:	c9 01       	movw	r24, r18
    197c:	ce d0       	rcall	.+412    	; 0x1b1a <_ZN3DHT11convertCtoFEf>
    197e:	dc 01       	movw	r26, r24
    1980:	cb 01       	movw	r24, r22
    1982:	89 83       	std	Y+1, r24	; 0x01
    1984:	9a 83       	std	Y+2, r25	; 0x02
    1986:	ab 83       	std	Y+3, r26	; 0x03
    1988:	bc 83       	std	Y+4, r27	; 0x04
    198a:	b3 c0       	rjmp	.+358    	; 0x1af2 <_ZN3DHT15readTemperatureEbb+0x298>
    198c:	8d 81       	ldd	r24, Y+5	; 0x05
    198e:	9e 81       	ldd	r25, Y+6	; 0x06
    1990:	fc 01       	movw	r30, r24
    1992:	82 81       	ldd	r24, Z+2	; 0x02
    1994:	88 2f       	mov	r24, r24
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	a0 e0       	ldi	r26, 0x00	; 0
    199a:	b0 e0       	ldi	r27, 0x00	; 0
    199c:	bc 01       	movw	r22, r24
    199e:	cd 01       	movw	r24, r26
    19a0:	0e 94 45 43 	call	0x868a	; 0x868a <__floatunsisf>
    19a4:	dc 01       	movw	r26, r24
    19a6:	cb 01       	movw	r24, r22
    19a8:	89 83       	std	Y+1, r24	; 0x01
    19aa:	9a 83       	std	Y+2, r25	; 0x02
    19ac:	ab 83       	std	Y+3, r26	; 0x03
    19ae:	bc 83       	std	Y+4, r27	; 0x04
    19b0:	8d 81       	ldd	r24, Y+5	; 0x05
    19b2:	9e 81       	ldd	r25, Y+6	; 0x06
    19b4:	fc 01       	movw	r30, r24
    19b6:	83 81       	ldd	r24, Z+3	; 0x03
    19b8:	88 2f       	mov	r24, r24
    19ba:	90 e0       	ldi	r25, 0x00	; 0
    19bc:	8f 70       	andi	r24, 0x0F	; 15
    19be:	99 27       	eor	r25, r25
    19c0:	09 2e       	mov	r0, r25
    19c2:	00 0c       	add	r0, r0
    19c4:	aa 0b       	sbc	r26, r26
    19c6:	bb 0b       	sbc	r27, r27
    19c8:	bc 01       	movw	r22, r24
    19ca:	cd 01       	movw	r24, r26
    19cc:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	2d ec       	ldi	r18, 0xCD	; 205
    19d6:	3c ec       	ldi	r19, 0xCC	; 204
    19d8:	4c ec       	ldi	r20, 0xCC	; 204
    19da:	5d e3       	ldi	r21, 0x3D	; 61
    19dc:	bc 01       	movw	r22, r24
    19de:	cd 01       	movw	r24, r26
    19e0:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	9c 01       	movw	r18, r24
    19ea:	ad 01       	movw	r20, r26
    19ec:	69 81       	ldd	r22, Y+1	; 0x01
    19ee:	7a 81       	ldd	r23, Y+2	; 0x02
    19f0:	8b 81       	ldd	r24, Y+3	; 0x03
    19f2:	9c 81       	ldd	r25, Y+4	; 0x04
    19f4:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    19f8:	dc 01       	movw	r26, r24
    19fa:	cb 01       	movw	r24, r22
    19fc:	89 83       	std	Y+1, r24	; 0x01
    19fe:	9a 83       	std	Y+2, r25	; 0x02
    1a00:	ab 83       	std	Y+3, r26	; 0x03
    1a02:	bc 83       	std	Y+4, r27	; 0x04
    1a04:	8d 81       	ldd	r24, Y+5	; 0x05
    1a06:	9e 81       	ldd	r25, Y+6	; 0x06
    1a08:	fc 01       	movw	r30, r24
    1a0a:	82 81       	ldd	r24, Z+2	; 0x02
    1a0c:	88 23       	and	r24, r24
    1a0e:	4c f4       	brge	.+18     	; 0x1a22 <_ZN3DHT15readTemperatureEbb+0x1c8>
    1a10:	89 81       	ldd	r24, Y+1	; 0x01
    1a12:	9a 81       	ldd	r25, Y+2	; 0x02
    1a14:	ab 81       	ldd	r26, Y+3	; 0x03
    1a16:	bc 81       	ldd	r27, Y+4	; 0x04
    1a18:	b0 58       	subi	r27, 0x80	; 128
    1a1a:	89 83       	std	Y+1, r24	; 0x01
    1a1c:	9a 83       	std	Y+2, r25	; 0x02
    1a1e:	ab 83       	std	Y+3, r26	; 0x03
    1a20:	bc 83       	std	Y+4, r27	; 0x04
    1a22:	8f 81       	ldd	r24, Y+7	; 0x07
    1a24:	88 23       	and	r24, r24
    1a26:	09 f4       	brne	.+2      	; 0x1a2a <_ZN3DHT15readTemperatureEbb+0x1d0>
    1a28:	66 c0       	rjmp	.+204    	; 0x1af6 <_ZN3DHT15readTemperatureEbb+0x29c>
    1a2a:	89 81       	ldd	r24, Y+1	; 0x01
    1a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a2e:	ab 81       	ldd	r26, Y+3	; 0x03
    1a30:	bc 81       	ldd	r27, Y+4	; 0x04
    1a32:	2d 81       	ldd	r18, Y+5	; 0x05
    1a34:	3e 81       	ldd	r19, Y+6	; 0x06
    1a36:	ac 01       	movw	r20, r24
    1a38:	bd 01       	movw	r22, r26
    1a3a:	c9 01       	movw	r24, r18
    1a3c:	6e d0       	rcall	.+220    	; 0x1b1a <_ZN3DHT11convertCtoFEf>
    1a3e:	dc 01       	movw	r26, r24
    1a40:	cb 01       	movw	r24, r22
    1a42:	89 83       	std	Y+1, r24	; 0x01
    1a44:	9a 83       	std	Y+2, r25	; 0x02
    1a46:	ab 83       	std	Y+3, r26	; 0x03
    1a48:	bc 83       	std	Y+4, r27	; 0x04
    1a4a:	55 c0       	rjmp	.+170    	; 0x1af6 <_ZN3DHT15readTemperatureEbb+0x29c>
    1a4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a50:	fc 01       	movw	r30, r24
    1a52:	82 81       	ldd	r24, Z+2	; 0x02
    1a54:	88 2f       	mov	r24, r24
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	8f 77       	andi	r24, 0x7F	; 127
    1a5a:	99 27       	eor	r25, r25
    1a5c:	38 2f       	mov	r19, r24
    1a5e:	22 27       	eor	r18, r18
    1a60:	8d 81       	ldd	r24, Y+5	; 0x05
    1a62:	9e 81       	ldd	r25, Y+6	; 0x06
    1a64:	fc 01       	movw	r30, r24
    1a66:	83 81       	ldd	r24, Z+3	; 0x03
    1a68:	88 2f       	mov	r24, r24
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	82 2b       	or	r24, r18
    1a6e:	93 2b       	or	r25, r19
    1a70:	cc 01       	movw	r24, r24
    1a72:	a0 e0       	ldi	r26, 0x00	; 0
    1a74:	b0 e0       	ldi	r27, 0x00	; 0
    1a76:	bc 01       	movw	r22, r24
    1a78:	cd 01       	movw	r24, r26
    1a7a:	0e 94 45 43 	call	0x868a	; 0x868a <__floatunsisf>
    1a7e:	dc 01       	movw	r26, r24
    1a80:	cb 01       	movw	r24, r22
    1a82:	89 83       	std	Y+1, r24	; 0x01
    1a84:	9a 83       	std	Y+2, r25	; 0x02
    1a86:	ab 83       	std	Y+3, r26	; 0x03
    1a88:	bc 83       	std	Y+4, r27	; 0x04
    1a8a:	2d ec       	ldi	r18, 0xCD	; 205
    1a8c:	3c ec       	ldi	r19, 0xCC	; 204
    1a8e:	4c ec       	ldi	r20, 0xCC	; 204
    1a90:	5d e3       	ldi	r21, 0x3D	; 61
    1a92:	69 81       	ldd	r22, Y+1	; 0x01
    1a94:	7a 81       	ldd	r23, Y+2	; 0x02
    1a96:	8b 81       	ldd	r24, Y+3	; 0x03
    1a98:	9c 81       	ldd	r25, Y+4	; 0x04
    1a9a:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1a9e:	dc 01       	movw	r26, r24
    1aa0:	cb 01       	movw	r24, r22
    1aa2:	89 83       	std	Y+1, r24	; 0x01
    1aa4:	9a 83       	std	Y+2, r25	; 0x02
    1aa6:	ab 83       	std	Y+3, r26	; 0x03
    1aa8:	bc 83       	std	Y+4, r27	; 0x04
    1aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    1aac:	9e 81       	ldd	r25, Y+6	; 0x06
    1aae:	fc 01       	movw	r30, r24
    1ab0:	82 81       	ldd	r24, Z+2	; 0x02
    1ab2:	88 23       	and	r24, r24
    1ab4:	4c f4       	brge	.+18     	; 0x1ac8 <_ZN3DHT15readTemperatureEbb+0x26e>
    1ab6:	89 81       	ldd	r24, Y+1	; 0x01
    1ab8:	9a 81       	ldd	r25, Y+2	; 0x02
    1aba:	ab 81       	ldd	r26, Y+3	; 0x03
    1abc:	bc 81       	ldd	r27, Y+4	; 0x04
    1abe:	b0 58       	subi	r27, 0x80	; 128
    1ac0:	89 83       	std	Y+1, r24	; 0x01
    1ac2:	9a 83       	std	Y+2, r25	; 0x02
    1ac4:	ab 83       	std	Y+3, r26	; 0x03
    1ac6:	bc 83       	std	Y+4, r27	; 0x04
    1ac8:	8f 81       	ldd	r24, Y+7	; 0x07
    1aca:	88 23       	and	r24, r24
    1acc:	b1 f0       	breq	.+44     	; 0x1afa <_ZN3DHT15readTemperatureEbb+0x2a0>
    1ace:	89 81       	ldd	r24, Y+1	; 0x01
    1ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ad2:	ab 81       	ldd	r26, Y+3	; 0x03
    1ad4:	bc 81       	ldd	r27, Y+4	; 0x04
    1ad6:	2d 81       	ldd	r18, Y+5	; 0x05
    1ad8:	3e 81       	ldd	r19, Y+6	; 0x06
    1ada:	ac 01       	movw	r20, r24
    1adc:	bd 01       	movw	r22, r26
    1ade:	c9 01       	movw	r24, r18
    1ae0:	1c d0       	rcall	.+56     	; 0x1b1a <_ZN3DHT11convertCtoFEf>
    1ae2:	dc 01       	movw	r26, r24
    1ae4:	cb 01       	movw	r24, r22
    1ae6:	89 83       	std	Y+1, r24	; 0x01
    1ae8:	9a 83       	std	Y+2, r25	; 0x02
    1aea:	ab 83       	std	Y+3, r26	; 0x03
    1aec:	bc 83       	std	Y+4, r27	; 0x04
    1aee:	00 00       	nop
    1af0:	04 c0       	rjmp	.+8      	; 0x1afa <_ZN3DHT15readTemperatureEbb+0x2a0>
    1af2:	00 00       	nop
    1af4:	03 c0       	rjmp	.+6      	; 0x1afc <_ZN3DHT15readTemperatureEbb+0x2a2>
    1af6:	00 00       	nop
    1af8:	01 c0       	rjmp	.+2      	; 0x1afc <_ZN3DHT15readTemperatureEbb+0x2a2>
    1afa:	00 00       	nop
    1afc:	89 81       	ldd	r24, Y+1	; 0x01
    1afe:	9a 81       	ldd	r25, Y+2	; 0x02
    1b00:	ab 81       	ldd	r26, Y+3	; 0x03
    1b02:	bc 81       	ldd	r27, Y+4	; 0x04
    1b04:	bc 01       	movw	r22, r24
    1b06:	cd 01       	movw	r24, r26
    1b08:	28 96       	adiw	r28, 0x08	; 8
    1b0a:	0f b6       	in	r0, 0x3f	; 63
    1b0c:	f8 94       	cli
    1b0e:	de bf       	out	0x3e, r29	; 62
    1b10:	0f be       	out	0x3f, r0	; 63
    1b12:	cd bf       	out	0x3d, r28	; 61
    1b14:	df 91       	pop	r29
    1b16:	cf 91       	pop	r28
    1b18:	08 95       	ret

00001b1a <_ZN3DHT11convertCtoFEf>:
    1b1a:	cf 93       	push	r28
    1b1c:	df 93       	push	r29
    1b1e:	00 d0       	rcall	.+0      	; 0x1b20 <_ZN3DHT11convertCtoFEf+0x6>
    1b20:	00 d0       	rcall	.+0      	; 0x1b22 <_ZN3DHT11convertCtoFEf+0x8>
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	9a 83       	std	Y+2, r25	; 0x02
    1b28:	89 83       	std	Y+1, r24	; 0x01
    1b2a:	4b 83       	std	Y+3, r20	; 0x03
    1b2c:	5c 83       	std	Y+4, r21	; 0x04
    1b2e:	6d 83       	std	Y+5, r22	; 0x05
    1b30:	7e 83       	std	Y+6, r23	; 0x06
    1b32:	26 e6       	ldi	r18, 0x66	; 102
    1b34:	36 e6       	ldi	r19, 0x66	; 102
    1b36:	46 ee       	ldi	r20, 0xE6	; 230
    1b38:	5f e3       	ldi	r21, 0x3F	; 63
    1b3a:	6b 81       	ldd	r22, Y+3	; 0x03
    1b3c:	7c 81       	ldd	r23, Y+4	; 0x04
    1b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b40:	9e 81       	ldd	r25, Y+6	; 0x06
    1b42:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1b46:	dc 01       	movw	r26, r24
    1b48:	cb 01       	movw	r24, r22
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e0       	ldi	r20, 0x00	; 0
    1b50:	52 e4       	ldi	r21, 0x42	; 66
    1b52:	bc 01       	movw	r22, r24
    1b54:	cd 01       	movw	r24, r26
    1b56:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	cb 01       	movw	r24, r22
    1b5e:	bc 01       	movw	r22, r24
    1b60:	cd 01       	movw	r24, r26
    1b62:	26 96       	adiw	r28, 0x06	; 6
    1b64:	0f b6       	in	r0, 0x3f	; 63
    1b66:	f8 94       	cli
    1b68:	de bf       	out	0x3e, r29	; 62
    1b6a:	0f be       	out	0x3f, r0	; 63
    1b6c:	cd bf       	out	0x3d, r28	; 61
    1b6e:	df 91       	pop	r29
    1b70:	cf 91       	pop	r28
    1b72:	08 95       	ret

00001b74 <_ZN3DHT11convertFtoCEf>:
    1b74:	cf 93       	push	r28
    1b76:	df 93       	push	r29
    1b78:	00 d0       	rcall	.+0      	; 0x1b7a <_ZN3DHT11convertFtoCEf+0x6>
    1b7a:	00 d0       	rcall	.+0      	; 0x1b7c <_ZN3DHT11convertFtoCEf+0x8>
    1b7c:	cd b7       	in	r28, 0x3d	; 61
    1b7e:	de b7       	in	r29, 0x3e	; 62
    1b80:	9a 83       	std	Y+2, r25	; 0x02
    1b82:	89 83       	std	Y+1, r24	; 0x01
    1b84:	4b 83       	std	Y+3, r20	; 0x03
    1b86:	5c 83       	std	Y+4, r21	; 0x04
    1b88:	6d 83       	std	Y+5, r22	; 0x05
    1b8a:	7e 83       	std	Y+6, r23	; 0x06
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	40 e0       	ldi	r20, 0x00	; 0
    1b92:	52 e4       	ldi	r21, 0x42	; 66
    1b94:	6b 81       	ldd	r22, Y+3	; 0x03
    1b96:	7c 81       	ldd	r23, Y+4	; 0x04
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b9c:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    1ba0:	dc 01       	movw	r26, r24
    1ba2:	cb 01       	movw	r24, r22
    1ba4:	26 e8       	ldi	r18, 0x86	; 134
    1ba6:	38 e3       	ldi	r19, 0x38	; 56
    1ba8:	4e e0       	ldi	r20, 0x0E	; 14
    1baa:	5f e3       	ldi	r21, 0x3F	; 63
    1bac:	bc 01       	movw	r22, r24
    1bae:	cd 01       	movw	r24, r26
    1bb0:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1bb4:	dc 01       	movw	r26, r24
    1bb6:	cb 01       	movw	r24, r22
    1bb8:	bc 01       	movw	r22, r24
    1bba:	cd 01       	movw	r24, r26
    1bbc:	26 96       	adiw	r28, 0x06	; 6
    1bbe:	0f b6       	in	r0, 0x3f	; 63
    1bc0:	f8 94       	cli
    1bc2:	de bf       	out	0x3e, r29	; 62
    1bc4:	0f be       	out	0x3f, r0	; 63
    1bc6:	cd bf       	out	0x3d, r28	; 61
    1bc8:	df 91       	pop	r29
    1bca:	cf 91       	pop	r28
    1bcc:	08 95       	ret

00001bce <_ZN3DHT12readHumidityEb>:
    1bce:	cf 92       	push	r12
    1bd0:	df 92       	push	r13
    1bd2:	ef 92       	push	r14
    1bd4:	ff 92       	push	r15
    1bd6:	cf 93       	push	r28
    1bd8:	df 93       	push	r29
    1bda:	cd b7       	in	r28, 0x3d	; 61
    1bdc:	de b7       	in	r29, 0x3e	; 62
    1bde:	27 97       	sbiw	r28, 0x07	; 7
    1be0:	0f b6       	in	r0, 0x3f	; 63
    1be2:	f8 94       	cli
    1be4:	de bf       	out	0x3e, r29	; 62
    1be6:	0f be       	out	0x3f, r0	; 63
    1be8:	cd bf       	out	0x3d, r28	; 61
    1bea:	9e 83       	std	Y+6, r25	; 0x06
    1bec:	8d 83       	std	Y+5, r24	; 0x05
    1bee:	6f 83       	std	Y+7, r22	; 0x07
    1bf0:	80 e0       	ldi	r24, 0x00	; 0
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	a0 ec       	ldi	r26, 0xC0	; 192
    1bf6:	bf e7       	ldi	r27, 0x7F	; 127
    1bf8:	89 83       	std	Y+1, r24	; 0x01
    1bfa:	9a 83       	std	Y+2, r25	; 0x02
    1bfc:	ab 83       	std	Y+3, r26	; 0x03
    1bfe:	bc 83       	std	Y+4, r27	; 0x04
    1c00:	8d 81       	ldd	r24, Y+5	; 0x05
    1c02:	9e 81       	ldd	r25, Y+6	; 0x06
    1c04:	6f 81       	ldd	r22, Y+7	; 0x07
    1c06:	8c d3       	rcall	.+1816   	; 0x2320 <_ZN3DHT4readEb>
    1c08:	88 23       	and	r24, r24
    1c0a:	09 f4       	brne	.+2      	; 0x1c0e <_ZN3DHT12readHumidityEb+0x40>
    1c0c:	77 c0       	rjmp	.+238    	; 0x1cfc <_ZN3DHT12readHumidityEb+0x12e>
    1c0e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c10:	9e 81       	ldd	r25, Y+6	; 0x06
    1c12:	fc 01       	movw	r30, r24
    1c14:	86 81       	ldd	r24, Z+6	; 0x06
    1c16:	88 2f       	mov	r24, r24
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	8b 30       	cpi	r24, 0x0B	; 11
    1c1c:	91 05       	cpc	r25, r1
    1c1e:	0c f4       	brge	.+2      	; 0x1c22 <_ZN3DHT12readHumidityEb+0x54>
    1c20:	6d c0       	rjmp	.+218    	; 0x1cfc <_ZN3DHT12readHumidityEb+0x12e>
    1c22:	8d 30       	cpi	r24, 0x0D	; 13
    1c24:	91 05       	cpc	r25, r1
    1c26:	2c f0       	brlt	.+10     	; 0x1c32 <_ZN3DHT12readHumidityEb+0x64>
    1c28:	45 97       	sbiw	r24, 0x15	; 21
    1c2a:	02 97       	sbiw	r24, 0x02	; 2
    1c2c:	08 f0       	brcs	.+2      	; 0x1c30 <_ZN3DHT12readHumidityEb+0x62>
    1c2e:	66 c0       	rjmp	.+204    	; 0x1cfc <_ZN3DHT12readHumidityEb+0x12e>
    1c30:	37 c0       	rjmp	.+110    	; 0x1ca0 <_ZN3DHT12readHumidityEb+0xd2>
    1c32:	8d 81       	ldd	r24, Y+5	; 0x05
    1c34:	9e 81       	ldd	r25, Y+6	; 0x06
    1c36:	fc 01       	movw	r30, r24
    1c38:	80 81       	ld	r24, Z
    1c3a:	88 2f       	mov	r24, r24
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	09 2e       	mov	r0, r25
    1c40:	00 0c       	add	r0, r0
    1c42:	aa 0b       	sbc	r26, r26
    1c44:	bb 0b       	sbc	r27, r27
    1c46:	bc 01       	movw	r22, r24
    1c48:	cd 01       	movw	r24, r26
    1c4a:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    1c4e:	6b 01       	movw	r12, r22
    1c50:	7c 01       	movw	r14, r24
    1c52:	8d 81       	ldd	r24, Y+5	; 0x05
    1c54:	9e 81       	ldd	r25, Y+6	; 0x06
    1c56:	fc 01       	movw	r30, r24
    1c58:	81 81       	ldd	r24, Z+1	; 0x01
    1c5a:	88 2f       	mov	r24, r24
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	09 2e       	mov	r0, r25
    1c60:	00 0c       	add	r0, r0
    1c62:	aa 0b       	sbc	r26, r26
    1c64:	bb 0b       	sbc	r27, r27
    1c66:	bc 01       	movw	r22, r24
    1c68:	cd 01       	movw	r24, r26
    1c6a:	0e 94 47 43 	call	0x868e	; 0x868e <__floatsisf>
    1c6e:	dc 01       	movw	r26, r24
    1c70:	cb 01       	movw	r24, r22
    1c72:	2d ec       	ldi	r18, 0xCD	; 205
    1c74:	3c ec       	ldi	r19, 0xCC	; 204
    1c76:	4c ec       	ldi	r20, 0xCC	; 204
    1c78:	5d e3       	ldi	r21, 0x3D	; 61
    1c7a:	bc 01       	movw	r22, r24
    1c7c:	cd 01       	movw	r24, r26
    1c7e:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1c82:	dc 01       	movw	r26, r24
    1c84:	cb 01       	movw	r24, r22
    1c86:	9c 01       	movw	r18, r24
    1c88:	ad 01       	movw	r20, r26
    1c8a:	c7 01       	movw	r24, r14
    1c8c:	b6 01       	movw	r22, r12
    1c8e:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1c92:	dc 01       	movw	r26, r24
    1c94:	cb 01       	movw	r24, r22
    1c96:	89 83       	std	Y+1, r24	; 0x01
    1c98:	9a 83       	std	Y+2, r25	; 0x02
    1c9a:	ab 83       	std	Y+3, r26	; 0x03
    1c9c:	bc 83       	std	Y+4, r27	; 0x04
    1c9e:	2e c0       	rjmp	.+92     	; 0x1cfc <_ZN3DHT12readHumidityEb+0x12e>
    1ca0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ca2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ca4:	fc 01       	movw	r30, r24
    1ca6:	80 81       	ld	r24, Z
    1ca8:	88 2f       	mov	r24, r24
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	38 2f       	mov	r19, r24
    1cae:	22 27       	eor	r18, r18
    1cb0:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb2:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb4:	fc 01       	movw	r30, r24
    1cb6:	81 81       	ldd	r24, Z+1	; 0x01
    1cb8:	88 2f       	mov	r24, r24
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	82 2b       	or	r24, r18
    1cbe:	93 2b       	or	r25, r19
    1cc0:	cc 01       	movw	r24, r24
    1cc2:	a0 e0       	ldi	r26, 0x00	; 0
    1cc4:	b0 e0       	ldi	r27, 0x00	; 0
    1cc6:	bc 01       	movw	r22, r24
    1cc8:	cd 01       	movw	r24, r26
    1cca:	0e 94 45 43 	call	0x868a	; 0x868a <__floatunsisf>
    1cce:	dc 01       	movw	r26, r24
    1cd0:	cb 01       	movw	r24, r22
    1cd2:	89 83       	std	Y+1, r24	; 0x01
    1cd4:	9a 83       	std	Y+2, r25	; 0x02
    1cd6:	ab 83       	std	Y+3, r26	; 0x03
    1cd8:	bc 83       	std	Y+4, r27	; 0x04
    1cda:	2d ec       	ldi	r18, 0xCD	; 205
    1cdc:	3c ec       	ldi	r19, 0xCC	; 204
    1cde:	4c ec       	ldi	r20, 0xCC	; 204
    1ce0:	5d e3       	ldi	r21, 0x3D	; 61
    1ce2:	69 81       	ldd	r22, Y+1	; 0x01
    1ce4:	7a 81       	ldd	r23, Y+2	; 0x02
    1ce6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ce8:	9c 81       	ldd	r25, Y+4	; 0x04
    1cea:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1cee:	dc 01       	movw	r26, r24
    1cf0:	cb 01       	movw	r24, r22
    1cf2:	89 83       	std	Y+1, r24	; 0x01
    1cf4:	9a 83       	std	Y+2, r25	; 0x02
    1cf6:	ab 83       	std	Y+3, r26	; 0x03
    1cf8:	bc 83       	std	Y+4, r27	; 0x04
    1cfa:	00 00       	nop
    1cfc:	89 81       	ldd	r24, Y+1	; 0x01
    1cfe:	9a 81       	ldd	r25, Y+2	; 0x02
    1d00:	ab 81       	ldd	r26, Y+3	; 0x03
    1d02:	bc 81       	ldd	r27, Y+4	; 0x04
    1d04:	bc 01       	movw	r22, r24
    1d06:	cd 01       	movw	r24, r26
    1d08:	27 96       	adiw	r28, 0x07	; 7
    1d0a:	0f b6       	in	r0, 0x3f	; 63
    1d0c:	f8 94       	cli
    1d0e:	de bf       	out	0x3e, r29	; 62
    1d10:	0f be       	out	0x3f, r0	; 63
    1d12:	cd bf       	out	0x3d, r28	; 61
    1d14:	df 91       	pop	r29
    1d16:	cf 91       	pop	r28
    1d18:	ff 90       	pop	r15
    1d1a:	ef 90       	pop	r14
    1d1c:	df 90       	pop	r13
    1d1e:	cf 90       	pop	r12
    1d20:	08 95       	ret

00001d22 <_ZN3DHT16computeHeatIndexEffb>:
 *  @param  isFahrenheit
 * 					true if fahrenheit, false if celcius
 *	@return float heat index
 */
float DHT::computeHeatIndex(float temperature, float percentHumidity,
                            bool isFahrenheit) {
    1d22:	8f 92       	push	r8
    1d24:	9f 92       	push	r9
    1d26:	af 92       	push	r10
    1d28:	bf 92       	push	r11
    1d2a:	cf 92       	push	r12
    1d2c:	df 92       	push	r13
    1d2e:	ef 92       	push	r14
    1d30:	ff 92       	push	r15
    1d32:	0f 93       	push	r16
    1d34:	1f 93       	push	r17
    1d36:	cf 93       	push	r28
    1d38:	df 93       	push	r29
    1d3a:	cd b7       	in	r28, 0x3d	; 61
    1d3c:	de b7       	in	r29, 0x3e	; 62
    1d3e:	2f 97       	sbiw	r28, 0x0f	; 15
    1d40:	0f b6       	in	r0, 0x3f	; 63
    1d42:	f8 94       	cli
    1d44:	de bf       	out	0x3e, r29	; 62
    1d46:	0f be       	out	0x3f, r0	; 63
    1d48:	cd bf       	out	0x3d, r28	; 61
    1d4a:	9e 83       	std	Y+6, r25	; 0x06
    1d4c:	8d 83       	std	Y+5, r24	; 0x05
    1d4e:	4f 83       	std	Y+7, r20	; 0x07
    1d50:	58 87       	std	Y+8, r21	; 0x08
    1d52:	69 87       	std	Y+9, r22	; 0x09
    1d54:	7a 87       	std	Y+10, r23	; 0x0a
    1d56:	0b 87       	std	Y+11, r16	; 0x0b
    1d58:	1c 87       	std	Y+12, r17	; 0x0c
    1d5a:	2d 87       	std	Y+13, r18	; 0x0d
    1d5c:	3e 87       	std	Y+14, r19	; 0x0e
    1d5e:	ef 86       	std	Y+15, r14	; 0x0f
  float hi;

  if (!isFahrenheit)
    1d60:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d62:	81 e0       	ldi	r24, 0x01	; 1
    1d64:	89 27       	eor	r24, r25
    1d66:	88 23       	and	r24, r24
    1d68:	81 f0       	breq	.+32     	; 0x1d8a <_ZN3DHT16computeHeatIndexEffb+0x68>
    temperature = convertCtoF(temperature);
    1d6a:	8f 81       	ldd	r24, Y+7	; 0x07
    1d6c:	98 85       	ldd	r25, Y+8	; 0x08
    1d6e:	a9 85       	ldd	r26, Y+9	; 0x09
    1d70:	ba 85       	ldd	r27, Y+10	; 0x0a
    1d72:	2d 81       	ldd	r18, Y+5	; 0x05
    1d74:	3e 81       	ldd	r19, Y+6	; 0x06
    1d76:	ac 01       	movw	r20, r24
    1d78:	bd 01       	movw	r22, r26
    1d7a:	c9 01       	movw	r24, r18
    1d7c:	ce de       	rcall	.-612    	; 0x1b1a <_ZN3DHT11convertCtoFEf>
    1d7e:	dc 01       	movw	r26, r24
    1d80:	cb 01       	movw	r24, r22
    1d82:	8f 83       	std	Y+7, r24	; 0x07
    1d84:	98 87       	std	Y+8, r25	; 0x08
    1d86:	a9 87       	std	Y+9, r26	; 0x09
    1d88:	ba 87       	std	Y+10, r27	; 0x0a

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
    1d8a:	20 e0       	ldi	r18, 0x00	; 0
    1d8c:	30 e0       	ldi	r19, 0x00	; 0
    1d8e:	44 e7       	ldi	r20, 0x74	; 116
    1d90:	52 e4       	ldi	r21, 0x42	; 66
    1d92:	6f 81       	ldd	r22, Y+7	; 0x07
    1d94:	78 85       	ldd	r23, Y+8	; 0x08
    1d96:	89 85       	ldd	r24, Y+9	; 0x09
    1d98:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d9a:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1d9e:	dc 01       	movw	r26, r24
    1da0:	cb 01       	movw	r24, r22
    1da2:	6c 01       	movw	r12, r24
    1da4:	7d 01       	movw	r14, r26
    1da6:	20 e0       	ldi	r18, 0x00	; 0
    1da8:	30 e0       	ldi	r19, 0x00	; 0
    1daa:	48 e8       	ldi	r20, 0x88	; 136
    1dac:	52 e4       	ldi	r21, 0x42	; 66
    1dae:	6f 81       	ldd	r22, Y+7	; 0x07
    1db0:	78 85       	ldd	r23, Y+8	; 0x08
    1db2:	89 85       	ldd	r24, Y+9	; 0x09
    1db4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1db6:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    1dba:	dc 01       	movw	r26, r24
    1dbc:	cb 01       	movw	r24, r22
    1dbe:	2a e9       	ldi	r18, 0x9A	; 154
    1dc0:	39 e9       	ldi	r19, 0x99	; 153
    1dc2:	49 e9       	ldi	r20, 0x99	; 153
    1dc4:	5f e3       	ldi	r21, 0x3F	; 63
    1dc6:	bc 01       	movw	r22, r24
    1dc8:	cd 01       	movw	r24, r26
    1dca:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1dce:	dc 01       	movw	r26, r24
    1dd0:	cb 01       	movw	r24, r22
    1dd2:	9c 01       	movw	r18, r24
    1dd4:	ad 01       	movw	r20, r26
    1dd6:	c7 01       	movw	r24, r14
    1dd8:	b6 01       	movw	r22, r12
    1dda:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1dde:	dc 01       	movw	r26, r24
    1de0:	cb 01       	movw	r24, r22
    1de2:	6c 01       	movw	r12, r24
    1de4:	7d 01       	movw	r14, r26
              (percentHumidity * 0.094));
    1de6:	22 e1       	ldi	r18, 0x12	; 18
    1de8:	33 e8       	ldi	r19, 0x83	; 131
    1dea:	40 ec       	ldi	r20, 0xC0	; 192
    1dec:	5d e3       	ldi	r21, 0x3D	; 61
    1dee:	6b 85       	ldd	r22, Y+11	; 0x0b
    1df0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1df2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1df4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1df6:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
  float hi;

  if (!isFahrenheit)
    temperature = convertCtoF(temperature);

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
    1dfe:	9c 01       	movw	r18, r24
    1e00:	ad 01       	movw	r20, r26
    1e02:	c7 01       	movw	r24, r14
    1e04:	b6 01       	movw	r22, r12
    1e06:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1e0a:	dc 01       	movw	r26, r24
    1e0c:	cb 01       	movw	r24, r22
              (percentHumidity * 0.094));
    1e0e:	20 e0       	ldi	r18, 0x00	; 0
    1e10:	30 e0       	ldi	r19, 0x00	; 0
    1e12:	40 e0       	ldi	r20, 0x00	; 0
    1e14:	5f e3       	ldi	r21, 0x3F	; 63
    1e16:	bc 01       	movw	r22, r24
    1e18:	cd 01       	movw	r24, r26
    1e1a:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	89 83       	std	Y+1, r24	; 0x01
    1e24:	9a 83       	std	Y+2, r25	; 0x02
    1e26:	ab 83       	std	Y+3, r26	; 0x03
    1e28:	bc 83       	std	Y+4, r27	; 0x04

  if (hi > 79) {
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	30 e0       	ldi	r19, 0x00	; 0
    1e2e:	4e e9       	ldi	r20, 0x9E	; 158
    1e30:	52 e4       	ldi	r21, 0x42	; 66
    1e32:	69 81       	ldd	r22, Y+1	; 0x01
    1e34:	7a 81       	ldd	r23, Y+2	; 0x02
    1e36:	8b 81       	ldd	r24, Y+3	; 0x03
    1e38:	9c 81       	ldd	r25, Y+4	; 0x04
    1e3a:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    1e3e:	18 16       	cp	r1, r24
    1e40:	0c f0       	brlt	.+2      	; 0x1e44 <_ZN3DHT16computeHeatIndexEffb+0x122>
    1e42:	45 c2       	rjmp	.+1162   	; 0x22ce <__stack+0xcf>
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
    1e44:	21 e1       	ldi	r18, 0x11	; 17
    1e46:	33 e2       	ldi	r19, 0x23	; 35
    1e48:	43 e0       	ldi	r20, 0x03	; 3
    1e4a:	50 e4       	ldi	r21, 0x40	; 64
    1e4c:	6f 81       	ldd	r22, Y+7	; 0x07
    1e4e:	78 85       	ldd	r23, Y+8	; 0x08
    1e50:	89 85       	ldd	r24, Y+9	; 0x09
    1e52:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e54:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1e58:	dc 01       	movw	r26, r24
    1e5a:	cb 01       	movw	r24, r22
    1e5c:	29 e1       	ldi	r18, 0x19	; 25
    1e5e:	34 e8       	ldi	r19, 0x84	; 132
    1e60:	49 e2       	ldi	r20, 0x29	; 41
    1e62:	52 e4       	ldi	r21, 0x42	; 66
    1e64:	bc 01       	movw	r22, r24
    1e66:	cd 01       	movw	r24, r26
    1e68:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	cb 01       	movw	r24, r22
    1e70:	6c 01       	movw	r12, r24
    1e72:	7d 01       	movw	r14, r26
    1e74:	26 e1       	ldi	r18, 0x16	; 22
    1e76:	3b e4       	ldi	r19, 0x4B	; 75
    1e78:	42 e2       	ldi	r20, 0x22	; 34
    1e7a:	51 e4       	ldi	r21, 0x41	; 65
    1e7c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e7e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e80:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e82:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e84:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1e88:	dc 01       	movw	r26, r24
    1e8a:	cb 01       	movw	r24, r22
    1e8c:	9c 01       	movw	r18, r24
    1e8e:	ad 01       	movw	r20, r26
    1e90:	c7 01       	movw	r24, r14
    1e92:	b6 01       	movw	r22, r12
    1e94:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	6c 01       	movw	r12, r24
    1e9e:	7d 01       	movw	r14, r26
         -0.22475541 * temperature * percentHumidity +
    1ea0:	28 e4       	ldi	r18, 0x48	; 72
    1ea2:	36 e2       	ldi	r19, 0x26	; 38
    1ea4:	46 e6       	ldi	r20, 0x66	; 102
    1ea6:	5e eb       	ldi	r21, 0xBE	; 190
    1ea8:	6f 81       	ldd	r22, Y+7	; 0x07
    1eaa:	78 85       	ldd	r23, Y+8	; 0x08
    1eac:	89 85       	ldd	r24, Y+9	; 0x09
    1eae:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eb0:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1eb4:	dc 01       	movw	r26, r24
    1eb6:	cb 01       	movw	r24, r22
    1eb8:	2b 85       	ldd	r18, Y+11	; 0x0b
    1eba:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ebc:	4d 85       	ldd	r20, Y+13	; 0x0d
    1ebe:	5e 85       	ldd	r21, Y+14	; 0x0e
    1ec0:	bc 01       	movw	r22, r24
    1ec2:	cd 01       	movw	r24, r26
    1ec4:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1ec8:	dc 01       	movw	r26, r24
    1eca:	cb 01       	movw	r24, r22

  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
    1ecc:	9c 01       	movw	r18, r24
    1ece:	ad 01       	movw	r20, r26
    1ed0:	c7 01       	movw	r24, r14
    1ed2:	b6 01       	movw	r22, r12
    1ed4:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1ed8:	dc 01       	movw	r26, r24
    1eda:	cb 01       	movw	r24, r22
    1edc:	6c 01       	movw	r12, r24
    1ede:	7d 01       	movw	r14, r26
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
    1ee0:	8f 81       	ldd	r24, Y+7	; 0x07
    1ee2:	98 85       	ldd	r25, Y+8	; 0x08
    1ee4:	a9 85       	ldd	r26, Y+9	; 0x09
    1ee6:	ba 85       	ldd	r27, Y+10	; 0x0a
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	40 e0       	ldi	r20, 0x00	; 0
    1eee:	50 e4       	ldi	r21, 0x40	; 64
    1ef0:	bc 01       	movw	r22, r24
    1ef2:	cd 01       	movw	r24, r26
    1ef4:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    1ef8:	dc 01       	movw	r26, r24
    1efa:	cb 01       	movw	r24, r22
    1efc:	20 ee       	ldi	r18, 0xE0	; 224
    1efe:	3f e0       	ldi	r19, 0x0F	; 15
    1f00:	40 ee       	ldi	r20, 0xE0	; 224
    1f02:	5b eb       	ldi	r21, 0xBB	; 187
    1f04:	bc 01       	movw	r22, r24
    1f06:	cd 01       	movw	r24, r26
    1f08:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1f0c:	dc 01       	movw	r26, r24
    1f0e:	cb 01       	movw	r24, r22
  hi = 0.5 * (temperature + 61.0 + ((temperature - 68.0) * 1.2) +
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
    1f10:	9c 01       	movw	r18, r24
    1f12:	ad 01       	movw	r20, r26
    1f14:	c7 01       	movw	r24, r14
    1f16:	b6 01       	movw	r22, r12
    1f18:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	6c 01       	movw	r12, r24
    1f22:	7d 01       	movw	r14, r26
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
    1f24:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f26:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f28:	ad 85       	ldd	r26, Y+13	; 0x0d
    1f2a:	be 85       	ldd	r27, Y+14	; 0x0e
    1f2c:	20 e0       	ldi	r18, 0x00	; 0
    1f2e:	30 e0       	ldi	r19, 0x00	; 0
    1f30:	40 e0       	ldi	r20, 0x00	; 0
    1f32:	50 e4       	ldi	r21, 0x40	; 64
    1f34:	bc 01       	movw	r22, r24
    1f36:	cd 01       	movw	r24, r26
    1f38:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	cb 01       	movw	r24, r22
    1f40:	28 ef       	ldi	r18, 0xF8	; 248
    1f42:	37 e8       	ldi	r19, 0x87	; 135
    1f44:	40 e6       	ldi	r20, 0x60	; 96
    1f46:	5d eb       	ldi	r21, 0xBD	; 189
    1f48:	bc 01       	movw	r22, r24
    1f4a:	cd 01       	movw	r24, r26
    1f4c:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1f50:	dc 01       	movw	r26, r24
    1f52:	cb 01       	movw	r24, r22
              (percentHumidity * 0.094));

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
    1f54:	9c 01       	movw	r18, r24
    1f56:	ad 01       	movw	r20, r26
    1f58:	c7 01       	movw	r24, r14
    1f5a:	b6 01       	movw	r22, r12
    1f5c:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	6c 01       	movw	r12, r24
    1f66:	7d 01       	movw	r14, r26
         -0.05481717 * pow(percentHumidity, 2) +
         0.00122874 * pow(temperature, 2) * percentHumidity +
    1f68:	8f 81       	ldd	r24, Y+7	; 0x07
    1f6a:	98 85       	ldd	r25, Y+8	; 0x08
    1f6c:	a9 85       	ldd	r26, Y+9	; 0x09
    1f6e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1f70:	20 e0       	ldi	r18, 0x00	; 0
    1f72:	30 e0       	ldi	r19, 0x00	; 0
    1f74:	40 e0       	ldi	r20, 0x00	; 0
    1f76:	50 e4       	ldi	r21, 0x40	; 64
    1f78:	bc 01       	movw	r22, r24
    1f7a:	cd 01       	movw	r24, r26
    1f7c:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    1f80:	dc 01       	movw	r26, r24
    1f82:	cb 01       	movw	r24, r22
    1f84:	2c ea       	ldi	r18, 0xAC	; 172
    1f86:	3d e0       	ldi	r19, 0x0D	; 13
    1f88:	41 ea       	ldi	r20, 0xA1	; 161
    1f8a:	5a e3       	ldi	r21, 0x3A	; 58
    1f8c:	bc 01       	movw	r22, r24
    1f8e:	cd 01       	movw	r24, r26
    1f90:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1f94:	dc 01       	movw	r26, r24
    1f96:	cb 01       	movw	r24, r22
    1f98:	2b 85       	ldd	r18, Y+11	; 0x0b
    1f9a:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f9c:	4d 85       	ldd	r20, Y+13	; 0x0d
    1f9e:	5e 85       	ldd	r21, Y+14	; 0x0e
    1fa0:	bc 01       	movw	r22, r24
    1fa2:	cd 01       	movw	r24, r26
    1fa4:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1fa8:	dc 01       	movw	r26, r24
    1faa:	cb 01       	movw	r24, r22

  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
    1fac:	9c 01       	movw	r18, r24
    1fae:	ad 01       	movw	r20, r26
    1fb0:	c7 01       	movw	r24, r14
    1fb2:	b6 01       	movw	r22, r12
    1fb4:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    1fb8:	dc 01       	movw	r26, r24
    1fba:	cb 01       	movw	r24, r22
    1fbc:	6c 01       	movw	r12, r24
    1fbe:	7d 01       	movw	r14, r26
         0.00122874 * pow(temperature, 2) * percentHumidity +
         0.00085282 * temperature * pow(percentHumidity, 2) +
    1fc0:	28 ec       	ldi	r18, 0xC8	; 200
    1fc2:	3f e8       	ldi	r19, 0x8F	; 143
    1fc4:	4f e5       	ldi	r20, 0x5F	; 95
    1fc6:	5a e3       	ldi	r21, 0x3A	; 58
    1fc8:	6f 81       	ldd	r22, Y+7	; 0x07
    1fca:	78 85       	ldd	r23, Y+8	; 0x08
    1fcc:	89 85       	ldd	r24, Y+9	; 0x09
    1fce:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd0:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    1fd4:	dc 01       	movw	r26, r24
    1fd6:	cb 01       	movw	r24, r22
    1fd8:	4c 01       	movw	r8, r24
    1fda:	5d 01       	movw	r10, r26
    1fdc:	8b 85       	ldd	r24, Y+11	; 0x0b
    1fde:	9c 85       	ldd	r25, Y+12	; 0x0c
    1fe0:	ad 85       	ldd	r26, Y+13	; 0x0d
    1fe2:	be 85       	ldd	r27, Y+14	; 0x0e
    1fe4:	20 e0       	ldi	r18, 0x00	; 0
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	40 e0       	ldi	r20, 0x00	; 0
    1fea:	50 e4       	ldi	r21, 0x40	; 64
    1fec:	bc 01       	movw	r22, r24
    1fee:	cd 01       	movw	r24, r26
    1ff0:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    1ff4:	dc 01       	movw	r26, r24
    1ff6:	cb 01       	movw	r24, r22
    1ff8:	9c 01       	movw	r18, r24
    1ffa:	ad 01       	movw	r20, r26
    1ffc:	c5 01       	movw	r24, r10
    1ffe:	b4 01       	movw	r22, r8
    2000:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    2004:	dc 01       	movw	r26, r24
    2006:	cb 01       	movw	r24, r22
  if (hi > 79) {
    hi = -42.379 + 2.04901523 * temperature + 10.14333127 * percentHumidity +
         -0.22475541 * temperature * percentHumidity +
         -0.00683783 * pow(temperature, 2) +
         -0.05481717 * pow(percentHumidity, 2) +
         0.00122874 * pow(temperature, 2) * percentHumidity +
    2008:	9c 01       	movw	r18, r24
    200a:	ad 01       	movw	r20, r26
    200c:	c7 01       	movw	r24, r14
    200e:	b6 01       	movw	r22, r12
    2010:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    2014:	dc 01       	movw	r26, r24
    2016:	cb 01       	movw	r24, r22
    2018:	6c 01       	movw	r12, r24
    201a:	7d 01       	movw	r14, r26
         0.00085282 * temperature * pow(percentHumidity, 2) +
         -0.00000199 * pow(temperature, 2) * pow(percentHumidity, 2);
    201c:	8f 81       	ldd	r24, Y+7	; 0x07
    201e:	98 85       	ldd	r25, Y+8	; 0x08
    2020:	a9 85       	ldd	r26, Y+9	; 0x09
    2022:	ba 85       	ldd	r27, Y+10	; 0x0a
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	40 e0       	ldi	r20, 0x00	; 0
    202a:	50 e4       	ldi	r21, 0x40	; 64
    202c:	bc 01       	movw	r22, r24
    202e:	cd 01       	movw	r24, r26
    2030:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    2034:	dc 01       	movw	r26, r24
    2036:	cb 01       	movw	r24, r22
    2038:	21 ef       	ldi	r18, 0xF1	; 241
    203a:	3b e8       	ldi	r19, 0x8B	; 139
    203c:	45 e0       	ldi	r20, 0x05	; 5
    203e:	56 eb       	ldi	r21, 0xB6	; 182
    2040:	bc 01       	movw	r22, r24
    2042:	cd 01       	movw	r24, r26
    2044:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    2048:	dc 01       	movw	r26, r24
    204a:	cb 01       	movw	r24, r22
    204c:	4c 01       	movw	r8, r24
    204e:	5d 01       	movw	r10, r26
    2050:	8b 85       	ldd	r24, Y+11	; 0x0b
    2052:	9c 85       	ldd	r25, Y+12	; 0x0c
    2054:	ad 85       	ldd	r26, Y+13	; 0x0d
    2056:	be 85       	ldd	r27, Y+14	; 0x0e
    2058:	20 e0       	ldi	r18, 0x00	; 0
    205a:	30 e0       	ldi	r19, 0x00	; 0
    205c:	40 e0       	ldi	r20, 0x00	; 0
    205e:	50 e4       	ldi	r21, 0x40	; 64
    2060:	bc 01       	movw	r22, r24
    2062:	cd 01       	movw	r24, r26
    2064:	0e 94 5e 44 	call	0x88bc	; 0x88bc <pow>
    2068:	dc 01       	movw	r26, r24
    206a:	cb 01       	movw	r24, r22
    206c:	9c 01       	movw	r18, r24
    206e:	ad 01       	movw	r20, r26
    2070:	c5 01       	movw	r24, r10
    2072:	b4 01       	movw	r22, r8
    2074:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    2078:	dc 01       	movw	r26, r24
    207a:	cb 01       	movw	r24, r22
    207c:	9c 01       	movw	r18, r24
    207e:	ad 01       	movw	r20, r26
    2080:	c7 01       	movw	r24, r14
    2082:	b6 01       	movw	r22, r12
    2084:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	89 83       	std	Y+1, r24	; 0x01
    208e:	9a 83       	std	Y+2, r25	; 0x02
    2090:	ab 83       	std	Y+3, r26	; 0x03
    2092:	bc 83       	std	Y+4, r27	; 0x04

    if ((percentHumidity < 13) && (temperature >= 80.0) &&
    2094:	20 e0       	ldi	r18, 0x00	; 0
    2096:	30 e0       	ldi	r19, 0x00	; 0
    2098:	40 e5       	ldi	r20, 0x50	; 80
    209a:	51 e4       	ldi	r21, 0x41	; 65
    209c:	6b 85       	ldd	r22, Y+11	; 0x0b
    209e:	7c 85       	ldd	r23, Y+12	; 0x0c
    20a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    20a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    20a4:	0e 94 a8 42 	call	0x8550	; 0x8550 <__cmpsf2>
    20a8:	88 23       	and	r24, r24
    20aa:	0c f0       	brlt	.+2      	; 0x20ae <__DATA_REGION_LENGTH__+0xae>
    20ac:	a5 c0       	rjmp	.+330    	; 0x21f8 <__DATA_REGION_LENGTH__+0x1f8>
    20ae:	20 e0       	ldi	r18, 0x00	; 0
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	40 ea       	ldi	r20, 0xA0	; 160
    20b4:	52 e4       	ldi	r21, 0x42	; 66
    20b6:	6f 81       	ldd	r22, Y+7	; 0x07
    20b8:	78 85       	ldd	r23, Y+8	; 0x08
    20ba:	89 85       	ldd	r24, Y+9	; 0x09
    20bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    20be:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    20c2:	88 23       	and	r24, r24
    20c4:	0c f4       	brge	.+2      	; 0x20c8 <__DATA_REGION_LENGTH__+0xc8>
    20c6:	98 c0       	rjmp	.+304    	; 0x21f8 <__DATA_REGION_LENGTH__+0x1f8>
    20c8:	20 e0       	ldi	r18, 0x00	; 0
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	40 ee       	ldi	r20, 0xE0	; 224
    20ce:	52 e4       	ldi	r21, 0x42	; 66
    20d0:	6f 81       	ldd	r22, Y+7	; 0x07
    20d2:	78 85       	ldd	r23, Y+8	; 0x08
    20d4:	89 85       	ldd	r24, Y+9	; 0x09
    20d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    20d8:	0e 94 a8 42 	call	0x8550	; 0x8550 <__cmpsf2>
    20dc:	18 16       	cp	r1, r24
    20de:	0c f4       	brge	.+2      	; 0x20e2 <__DATA_REGION_LENGTH__+0xe2>
    20e0:	8b c0       	rjmp	.+278    	; 0x21f8 <__DATA_REGION_LENGTH__+0x1f8>
        (temperature <= 112.0))
      hi -= ((13.0 - percentHumidity) * 0.25) *
    20e2:	2b 85       	ldd	r18, Y+11	; 0x0b
    20e4:	3c 85       	ldd	r19, Y+12	; 0x0c
    20e6:	4d 85       	ldd	r20, Y+13	; 0x0d
    20e8:	5e 85       	ldd	r21, Y+14	; 0x0e
    20ea:	60 e0       	ldi	r22, 0x00	; 0
    20ec:	70 e0       	ldi	r23, 0x00	; 0
    20ee:	80 e5       	ldi	r24, 0x50	; 80
    20f0:	91 e4       	ldi	r25, 0x41	; 65
    20f2:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    20f6:	dc 01       	movw	r26, r24
    20f8:	cb 01       	movw	r24, r22
    20fa:	20 e0       	ldi	r18, 0x00	; 0
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	40 e8       	ldi	r20, 0x80	; 128
    2100:	5e e3       	ldi	r21, 0x3E	; 62
    2102:	bc 01       	movw	r22, r24
    2104:	cd 01       	movw	r24, r26
    2106:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    210a:	dc 01       	movw	r26, r24
    210c:	cb 01       	movw	r24, r22
    210e:	6c 01       	movw	r12, r24
    2110:	7d 01       	movw	r14, r26
            sqrt((17.0 - abs(temperature - 95.0)) * 0.05882);
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	4e eb       	ldi	r20, 0xBE	; 190
    2118:	52 e4       	ldi	r21, 0x42	; 66
    211a:	6f 81       	ldd	r22, Y+7	; 0x07
    211c:	78 85       	ldd	r23, Y+8	; 0x08
    211e:	89 85       	ldd	r24, Y+9	; 0x09
    2120:	9a 85       	ldd	r25, Y+10	; 0x0a
    2122:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    2126:	dc 01       	movw	r26, r24
    2128:	cb 01       	movw	r24, r22
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	a9 01       	movw	r20, r18
    2130:	bc 01       	movw	r22, r24
    2132:	cd 01       	movw	r24, r26
    2134:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    2138:	18 16       	cp	r1, r24
    213a:	0c f5       	brge	.+66     	; 0x217e <__DATA_REGION_LENGTH__+0x17e>
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	4e eb       	ldi	r20, 0xBE	; 190
    2142:	52 e4       	ldi	r21, 0x42	; 66
    2144:	6f 81       	ldd	r22, Y+7	; 0x07
    2146:	78 85       	ldd	r23, Y+8	; 0x08
    2148:	89 85       	ldd	r24, Y+9	; 0x09
    214a:	9a 85       	ldd	r25, Y+10	; 0x0a
    214c:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	9c 01       	movw	r18, r24
    2156:	ad 01       	movw	r20, r26
    2158:	60 e0       	ldi	r22, 0x00	; 0
    215a:	70 e0       	ldi	r23, 0x00	; 0
    215c:	88 e8       	ldi	r24, 0x88	; 136
    215e:	91 e4       	ldi	r25, 0x41	; 65
    2160:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    2164:	dc 01       	movw	r26, r24
    2166:	cb 01       	movw	r24, r22
    2168:	2e e3       	ldi	r18, 0x3E	; 62
    216a:	3d ee       	ldi	r19, 0xED	; 237
    216c:	40 e7       	ldi	r20, 0x70	; 112
    216e:	5d e3       	ldi	r21, 0x3D	; 61
    2170:	bc 01       	movw	r22, r24
    2172:	cd 01       	movw	r24, r26
    2174:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    2178:	dc 01       	movw	r26, r24
    217a:	cb 01       	movw	r24, r22
    217c:	20 c0       	rjmp	.+64     	; 0x21be <__DATA_REGION_LENGTH__+0x1be>
    217e:	20 e0       	ldi	r18, 0x00	; 0
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	4e eb       	ldi	r20, 0xBE	; 190
    2184:	52 e4       	ldi	r21, 0x42	; 66
    2186:	6f 81       	ldd	r22, Y+7	; 0x07
    2188:	78 85       	ldd	r23, Y+8	; 0x08
    218a:	89 85       	ldd	r24, Y+9	; 0x09
    218c:	9a 85       	ldd	r25, Y+10	; 0x0a
    218e:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	20 e0       	ldi	r18, 0x00	; 0
    2198:	30 e0       	ldi	r19, 0x00	; 0
    219a:	48 e8       	ldi	r20, 0x88	; 136
    219c:	51 e4       	ldi	r21, 0x41	; 65
    219e:	bc 01       	movw	r22, r24
    21a0:	cd 01       	movw	r24, r26
    21a2:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    21a6:	dc 01       	movw	r26, r24
    21a8:	cb 01       	movw	r24, r22
    21aa:	2e e3       	ldi	r18, 0x3E	; 62
    21ac:	3d ee       	ldi	r19, 0xED	; 237
    21ae:	40 e7       	ldi	r20, 0x70	; 112
    21b0:	5d e3       	ldi	r21, 0x3D	; 61
    21b2:	bc 01       	movw	r22, r24
    21b4:	cd 01       	movw	r24, r26
    21b6:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    21ba:	dc 01       	movw	r26, r24
    21bc:	cb 01       	movw	r24, r22
    21be:	bc 01       	movw	r22, r24
    21c0:	cd 01       	movw	r24, r26
    21c2:	0e 94 ae 44 	call	0x895c	; 0x895c <sqrt>
    21c6:	dc 01       	movw	r26, r24
    21c8:	cb 01       	movw	r24, r22
         0.00085282 * temperature * pow(percentHumidity, 2) +
         -0.00000199 * pow(temperature, 2) * pow(percentHumidity, 2);

    if ((percentHumidity < 13) && (temperature >= 80.0) &&
        (temperature <= 112.0))
      hi -= ((13.0 - percentHumidity) * 0.25) *
    21ca:	9c 01       	movw	r18, r24
    21cc:	ad 01       	movw	r20, r26
    21ce:	c7 01       	movw	r24, r14
    21d0:	b6 01       	movw	r22, r12
    21d2:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    21d6:	dc 01       	movw	r26, r24
    21d8:	cb 01       	movw	r24, r22
            sqrt((17.0 - abs(temperature - 95.0)) * 0.05882);
    21da:	9c 01       	movw	r18, r24
    21dc:	ad 01       	movw	r20, r26
    21de:	69 81       	ldd	r22, Y+1	; 0x01
    21e0:	7a 81       	ldd	r23, Y+2	; 0x02
    21e2:	8b 81       	ldd	r24, Y+3	; 0x03
    21e4:	9c 81       	ldd	r25, Y+4	; 0x04
    21e6:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    21ea:	dc 01       	movw	r26, r24
    21ec:	cb 01       	movw	r24, r22
    21ee:	89 83       	std	Y+1, r24	; 0x01
    21f0:	9a 83       	std	Y+2, r25	; 0x02
    21f2:	ab 83       	std	Y+3, r26	; 0x03
    21f4:	bc 83       	std	Y+4, r27	; 0x04
    21f6:	6b c0       	rjmp	.+214    	; 0x22ce <__stack+0xcf>

    else if ((percentHumidity > 85.0) && (temperature >= 80.0) &&
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	4a ea       	ldi	r20, 0xAA	; 170
    21fe:	52 e4       	ldi	r21, 0x42	; 66
    2200:	6b 85       	ldd	r22, Y+11	; 0x0b
    2202:	7c 85       	ldd	r23, Y+12	; 0x0c
    2204:	8d 85       	ldd	r24, Y+13	; 0x0d
    2206:	9e 85       	ldd	r25, Y+14	; 0x0e
    2208:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    220c:	18 16       	cp	r1, r24
    220e:	0c f0       	brlt	.+2      	; 0x2212 <__stack+0x13>
    2210:	5e c0       	rjmp	.+188    	; 0x22ce <__stack+0xcf>
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	40 ea       	ldi	r20, 0xA0	; 160
    2218:	52 e4       	ldi	r21, 0x42	; 66
    221a:	6f 81       	ldd	r22, Y+7	; 0x07
    221c:	78 85       	ldd	r23, Y+8	; 0x08
    221e:	89 85       	ldd	r24, Y+9	; 0x09
    2220:	9a 85       	ldd	r25, Y+10	; 0x0a
    2222:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    2226:	88 23       	and	r24, r24
    2228:	0c f4       	brge	.+2      	; 0x222c <__stack+0x2d>
    222a:	51 c0       	rjmp	.+162    	; 0x22ce <__stack+0xcf>
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	4e ea       	ldi	r20, 0xAE	; 174
    2232:	52 e4       	ldi	r21, 0x42	; 66
    2234:	6f 81       	ldd	r22, Y+7	; 0x07
    2236:	78 85       	ldd	r23, Y+8	; 0x08
    2238:	89 85       	ldd	r24, Y+9	; 0x09
    223a:	9a 85       	ldd	r25, Y+10	; 0x0a
    223c:	0e 94 a8 42 	call	0x8550	; 0x8550 <__cmpsf2>
    2240:	18 16       	cp	r1, r24
    2242:	0c f4       	brge	.+2      	; 0x2246 <__stack+0x47>
    2244:	44 c0       	rjmp	.+136    	; 0x22ce <__stack+0xcf>
             (temperature <= 87.0))
      hi += ((percentHumidity - 85.0) * 0.1) * ((87.0 - temperature) * 0.2);
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	4a ea       	ldi	r20, 0xAA	; 170
    224c:	52 e4       	ldi	r21, 0x42	; 66
    224e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2250:	7c 85       	ldd	r23, Y+12	; 0x0c
    2252:	8d 85       	ldd	r24, Y+13	; 0x0d
    2254:	9e 85       	ldd	r25, Y+14	; 0x0e
    2256:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    225a:	dc 01       	movw	r26, r24
    225c:	cb 01       	movw	r24, r22
    225e:	2d ec       	ldi	r18, 0xCD	; 205
    2260:	3c ec       	ldi	r19, 0xCC	; 204
    2262:	4c ec       	ldi	r20, 0xCC	; 204
    2264:	5d e3       	ldi	r21, 0x3D	; 61
    2266:	bc 01       	movw	r22, r24
    2268:	cd 01       	movw	r24, r26
    226a:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    226e:	dc 01       	movw	r26, r24
    2270:	cb 01       	movw	r24, r22
    2272:	6c 01       	movw	r12, r24
    2274:	7d 01       	movw	r14, r26
    2276:	2f 81       	ldd	r18, Y+7	; 0x07
    2278:	38 85       	ldd	r19, Y+8	; 0x08
    227a:	49 85       	ldd	r20, Y+9	; 0x09
    227c:	5a 85       	ldd	r21, Y+10	; 0x0a
    227e:	60 e0       	ldi	r22, 0x00	; 0
    2280:	70 e0       	ldi	r23, 0x00	; 0
    2282:	8e ea       	ldi	r24, 0xAE	; 174
    2284:	92 e4       	ldi	r25, 0x42	; 66
    2286:	0e 94 43 42 	call	0x8486	; 0x8486 <__subsf3>
    228a:	dc 01       	movw	r26, r24
    228c:	cb 01       	movw	r24, r22
    228e:	2d ec       	ldi	r18, 0xCD	; 205
    2290:	3c ec       	ldi	r19, 0xCC	; 204
    2292:	4c e4       	ldi	r20, 0x4C	; 76
    2294:	5e e3       	ldi	r21, 0x3E	; 62
    2296:	bc 01       	movw	r22, r24
    2298:	cd 01       	movw	r24, r26
    229a:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    229e:	dc 01       	movw	r26, r24
    22a0:	cb 01       	movw	r24, r22
    22a2:	9c 01       	movw	r18, r24
    22a4:	ad 01       	movw	r20, r26
    22a6:	c7 01       	movw	r24, r14
    22a8:	b6 01       	movw	r22, r12
    22aa:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    22ae:	dc 01       	movw	r26, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	9c 01       	movw	r18, r24
    22b4:	ad 01       	movw	r20, r26
    22b6:	69 81       	ldd	r22, Y+1	; 0x01
    22b8:	7a 81       	ldd	r23, Y+2	; 0x02
    22ba:	8b 81       	ldd	r24, Y+3	; 0x03
    22bc:	9c 81       	ldd	r25, Y+4	; 0x04
    22be:	0e 94 44 42 	call	0x8488	; 0x8488 <__addsf3>
    22c2:	dc 01       	movw	r26, r24
    22c4:	cb 01       	movw	r24, r22
    22c6:	89 83       	std	Y+1, r24	; 0x01
    22c8:	9a 83       	std	Y+2, r25	; 0x02
    22ca:	ab 83       	std	Y+3, r26	; 0x03
    22cc:	bc 83       	std	Y+4, r27	; 0x04
  }

  return isFahrenheit ? hi : convertFtoC(hi);
    22ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    22d0:	88 23       	and	r24, r24
    22d2:	29 f0       	breq	.+10     	; 0x22de <__stack+0xdf>
    22d4:	89 81       	ldd	r24, Y+1	; 0x01
    22d6:	9a 81       	ldd	r25, Y+2	; 0x02
    22d8:	ab 81       	ldd	r26, Y+3	; 0x03
    22da:	bc 81       	ldd	r27, Y+4	; 0x04
    22dc:	0c c0       	rjmp	.+24     	; 0x22f6 <__stack+0xf7>
    22de:	89 81       	ldd	r24, Y+1	; 0x01
    22e0:	9a 81       	ldd	r25, Y+2	; 0x02
    22e2:	ab 81       	ldd	r26, Y+3	; 0x03
    22e4:	bc 81       	ldd	r27, Y+4	; 0x04
    22e6:	2d 81       	ldd	r18, Y+5	; 0x05
    22e8:	3e 81       	ldd	r19, Y+6	; 0x06
    22ea:	ac 01       	movw	r20, r24
    22ec:	bd 01       	movw	r22, r26
    22ee:	c9 01       	movw	r24, r18
    22f0:	41 dc       	rcall	.-1918   	; 0x1b74 <_ZN3DHT11convertFtoCEf>
    22f2:	dc 01       	movw	r26, r24
    22f4:	cb 01       	movw	r24, r22
}
    22f6:	bc 01       	movw	r22, r24
    22f8:	cd 01       	movw	r24, r26
    22fa:	2f 96       	adiw	r28, 0x0f	; 15
    22fc:	0f b6       	in	r0, 0x3f	; 63
    22fe:	f8 94       	cli
    2300:	de bf       	out	0x3e, r29	; 62
    2302:	0f be       	out	0x3f, r0	; 63
    2304:	cd bf       	out	0x3d, r28	; 61
    2306:	df 91       	pop	r29
    2308:	cf 91       	pop	r28
    230a:	1f 91       	pop	r17
    230c:	0f 91       	pop	r16
    230e:	ff 90       	pop	r15
    2310:	ef 90       	pop	r14
    2312:	df 90       	pop	r13
    2314:	cf 90       	pop	r12
    2316:	bf 90       	pop	r11
    2318:	af 90       	pop	r10
    231a:	9f 90       	pop	r9
    231c:	8f 90       	pop	r8
    231e:	08 95       	ret

00002320 <_ZN3DHT4readEb>:
 *seconds.
 *  @param  force
 *          true if using force mode
 *	@return float value
 */
bool DHT::read(bool force) {
    2320:	af 92       	push	r10
    2322:	bf 92       	push	r11
    2324:	cf 92       	push	r12
    2326:	df 92       	push	r13
    2328:	ff 92       	push	r15
    232a:	0f 93       	push	r16
    232c:	1f 93       	push	r17
    232e:	cf 93       	push	r28
    2330:	df 93       	push	r29
    2332:	cd b7       	in	r28, 0x3d	; 61
    2334:	de b7       	in	r29, 0x3e	; 62
    2336:	c4 55       	subi	r28, 0x54	; 84
    2338:	d1 40       	sbci	r29, 0x01	; 1
    233a:	0f b6       	in	r0, 0x3f	; 63
    233c:	f8 94       	cli
    233e:	de bf       	out	0x3e, r29	; 62
    2340:	0f be       	out	0x3f, r0	; 63
    2342:	cd bf       	out	0x3d, r28	; 61
    2344:	9e 01       	movw	r18, r28
    2346:	2e 5a       	subi	r18, 0xAE	; 174
    2348:	3e 4f       	sbci	r19, 0xFE	; 254
    234a:	f9 01       	movw	r30, r18
    234c:	91 83       	std	Z+1, r25	; 0x01
    234e:	80 83       	st	Z, r24
    2350:	ce 01       	movw	r24, r28
    2352:	8c 5a       	subi	r24, 0xAC	; 172
    2354:	9e 4f       	sbci	r25, 0xFE	; 254
    2356:	fc 01       	movw	r30, r24
    2358:	60 83       	st	Z, r22
  // Check if sensor was read less than two seconds ago and return early
  // to use last reading.
  uint32_t currenttime = millis();
    235a:	0e 94 88 49 	call	0x9310	; 0x9310 <millis>
    235e:	dc 01       	movw	r26, r24
    2360:	cb 01       	movw	r24, r22
    2362:	8d 83       	std	Y+5, r24	; 0x05
    2364:	9e 83       	std	Y+6, r25	; 0x06
    2366:	af 83       	std	Y+7, r26	; 0x07
    2368:	b8 87       	std	Y+8, r27	; 0x08
  if (!force && ((currenttime - _lastreadtime) < MIN_INTERVAL)) {
    236a:	ce 01       	movw	r24, r28
    236c:	8c 5a       	subi	r24, 0xAC	; 172
    236e:	9e 4f       	sbci	r25, 0xFE	; 254
    2370:	fc 01       	movw	r30, r24
    2372:	90 81       	ld	r25, Z
    2374:	81 e0       	ldi	r24, 0x01	; 1
    2376:	89 27       	eor	r24, r25
    2378:	88 23       	and	r24, r24
    237a:	29 f1       	breq	.+74     	; 0x23c6 <_ZN3DHT4readEb+0xa6>
    237c:	ce 01       	movw	r24, r28
    237e:	8e 5a       	subi	r24, 0xAE	; 174
    2380:	9e 4f       	sbci	r25, 0xFE	; 254
    2382:	fc 01       	movw	r30, r24
    2384:	80 81       	ld	r24, Z
    2386:	91 81       	ldd	r25, Z+1	; 0x01
    2388:	fc 01       	movw	r30, r24
    238a:	81 85       	ldd	r24, Z+9	; 0x09
    238c:	92 85       	ldd	r25, Z+10	; 0x0a
    238e:	a3 85       	ldd	r26, Z+11	; 0x0b
    2390:	b4 85       	ldd	r27, Z+12	; 0x0c
    2392:	2d 81       	ldd	r18, Y+5	; 0x05
    2394:	3e 81       	ldd	r19, Y+6	; 0x06
    2396:	4f 81       	ldd	r20, Y+7	; 0x07
    2398:	58 85       	ldd	r21, Y+8	; 0x08
    239a:	59 01       	movw	r10, r18
    239c:	6a 01       	movw	r12, r20
    239e:	a8 1a       	sub	r10, r24
    23a0:	b9 0a       	sbc	r11, r25
    23a2:	ca 0a       	sbc	r12, r26
    23a4:	db 0a       	sbc	r13, r27
    23a6:	d6 01       	movw	r26, r12
    23a8:	c5 01       	movw	r24, r10
    23aa:	80 3d       	cpi	r24, 0xD0	; 208
    23ac:	97 40       	sbci	r25, 0x07	; 7
    23ae:	a1 05       	cpc	r26, r1
    23b0:	b1 05       	cpc	r27, r1
    23b2:	48 f4       	brcc	.+18     	; 0x23c6 <_ZN3DHT4readEb+0xa6>
    return _lastresult; // return last correct measurement
    23b4:	ce 01       	movw	r24, r28
    23b6:	8e 5a       	subi	r24, 0xAE	; 174
    23b8:	9e 4f       	sbci	r25, 0xFE	; 254
    23ba:	fc 01       	movw	r30, r24
    23bc:	80 81       	ld	r24, Z
    23be:	91 81       	ldd	r25, Z+1	; 0x01
    23c0:	fc 01       	movw	r30, r24
    23c2:	f1 88       	ldd	r15, Z+17	; 0x11
    23c4:	5f c2       	rjmp	.+1214   	; 0x2884 <_ZN3DHT4readEb+0x564>
  }
  _lastreadtime = currenttime;
    23c6:	ce 01       	movw	r24, r28
    23c8:	8e 5a       	subi	r24, 0xAE	; 174
    23ca:	9e 4f       	sbci	r25, 0xFE	; 254
    23cc:	fc 01       	movw	r30, r24
    23ce:	20 81       	ld	r18, Z
    23d0:	31 81       	ldd	r19, Z+1	; 0x01
    23d2:	8d 81       	ldd	r24, Y+5	; 0x05
    23d4:	9e 81       	ldd	r25, Y+6	; 0x06
    23d6:	af 81       	ldd	r26, Y+7	; 0x07
    23d8:	b8 85       	ldd	r27, Y+8	; 0x08
    23da:	f9 01       	movw	r30, r18
    23dc:	81 87       	std	Z+9, r24	; 0x09
    23de:	92 87       	std	Z+10, r25	; 0x0a
    23e0:	a3 87       	std	Z+11, r26	; 0x0b
    23e2:	b4 87       	std	Z+12, r27	; 0x0c

  // Reset 40 bits of received data to zero.
  data[0] = data[1] = data[2] = data[3] = data[4] = 0;
    23e4:	ce 01       	movw	r24, r28
    23e6:	8e 5a       	subi	r24, 0xAE	; 174
    23e8:	9e 4f       	sbci	r25, 0xFE	; 254
    23ea:	fc 01       	movw	r30, r24
    23ec:	80 81       	ld	r24, Z
    23ee:	91 81       	ldd	r25, Z+1	; 0x01
    23f0:	fc 01       	movw	r30, r24
    23f2:	14 82       	std	Z+4, r1	; 0x04
    23f4:	ce 01       	movw	r24, r28
    23f6:	8e 5a       	subi	r24, 0xAE	; 174
    23f8:	9e 4f       	sbci	r25, 0xFE	; 254
    23fa:	fc 01       	movw	r30, r24
    23fc:	80 81       	ld	r24, Z
    23fe:	91 81       	ldd	r25, Z+1	; 0x01
    2400:	fc 01       	movw	r30, r24
    2402:	24 81       	ldd	r18, Z+4	; 0x04
    2404:	ce 01       	movw	r24, r28
    2406:	8e 5a       	subi	r24, 0xAE	; 174
    2408:	9e 4f       	sbci	r25, 0xFE	; 254
    240a:	fc 01       	movw	r30, r24
    240c:	80 81       	ld	r24, Z
    240e:	91 81       	ldd	r25, Z+1	; 0x01
    2410:	fc 01       	movw	r30, r24
    2412:	23 83       	std	Z+3, r18	; 0x03
    2414:	ce 01       	movw	r24, r28
    2416:	8e 5a       	subi	r24, 0xAE	; 174
    2418:	9e 4f       	sbci	r25, 0xFE	; 254
    241a:	fc 01       	movw	r30, r24
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	fc 01       	movw	r30, r24
    2422:	23 81       	ldd	r18, Z+3	; 0x03
    2424:	ce 01       	movw	r24, r28
    2426:	8e 5a       	subi	r24, 0xAE	; 174
    2428:	9e 4f       	sbci	r25, 0xFE	; 254
    242a:	fc 01       	movw	r30, r24
    242c:	80 81       	ld	r24, Z
    242e:	91 81       	ldd	r25, Z+1	; 0x01
    2430:	fc 01       	movw	r30, r24
    2432:	22 83       	std	Z+2, r18	; 0x02
    2434:	ce 01       	movw	r24, r28
    2436:	8e 5a       	subi	r24, 0xAE	; 174
    2438:	9e 4f       	sbci	r25, 0xFE	; 254
    243a:	fc 01       	movw	r30, r24
    243c:	80 81       	ld	r24, Z
    243e:	91 81       	ldd	r25, Z+1	; 0x01
    2440:	fc 01       	movw	r30, r24
    2442:	22 81       	ldd	r18, Z+2	; 0x02
    2444:	ce 01       	movw	r24, r28
    2446:	8e 5a       	subi	r24, 0xAE	; 174
    2448:	9e 4f       	sbci	r25, 0xFE	; 254
    244a:	fc 01       	movw	r30, r24
    244c:	80 81       	ld	r24, Z
    244e:	91 81       	ldd	r25, Z+1	; 0x01
    2450:	fc 01       	movw	r30, r24
    2452:	21 83       	std	Z+1, r18	; 0x01
    2454:	ce 01       	movw	r24, r28
    2456:	8e 5a       	subi	r24, 0xAE	; 174
    2458:	9e 4f       	sbci	r25, 0xFE	; 254
    245a:	fc 01       	movw	r30, r24
    245c:	80 81       	ld	r24, Z
    245e:	91 81       	ldd	r25, Z+1	; 0x01
    2460:	fc 01       	movw	r30, r24
    2462:	21 81       	ldd	r18, Z+1	; 0x01
    2464:	ce 01       	movw	r24, r28
    2466:	8e 5a       	subi	r24, 0xAE	; 174
    2468:	9e 4f       	sbci	r25, 0xFE	; 254
    246a:	fc 01       	movw	r30, r24
    246c:	80 81       	ld	r24, Z
    246e:	91 81       	ldd	r25, Z+1	; 0x01
    2470:	fc 01       	movw	r30, r24
    2472:	20 83       	st	Z, r18
  // Send start signal.  See DHT datasheet for full signal diagram:
  //   http://www.adafruit.com/datasheets/Digital%20humidity%20and%20temperature%20sensor%20AM2302.pdf

  // Go into high impedence state to let pull-up raise data line level and
  // start the reading process.
  pinMode(_pin, INPUT_PULLUP);
    2474:	ce 01       	movw	r24, r28
    2476:	8e 5a       	subi	r24, 0xAE	; 174
    2478:	9e 4f       	sbci	r25, 0xFE	; 254
    247a:	fc 01       	movw	r30, r24
    247c:	80 81       	ld	r24, Z
    247e:	91 81       	ldd	r25, Z+1	; 0x01
    2480:	fc 01       	movw	r30, r24
    2482:	85 81       	ldd	r24, Z+5	; 0x05
    2484:	62 e0       	ldi	r22, 0x02	; 2
    2486:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
  delay(1);
    248a:	61 e0       	ldi	r22, 0x01	; 1
    248c:	70 e0       	ldi	r23, 0x00	; 0
    248e:	80 e0       	ldi	r24, 0x00	; 0
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	0e 94 b9 49 	call	0x9372	; 0x9372 <delay>

  // First set data line low for a period according to sensor type
  pinMode(_pin, OUTPUT);
    2496:	ce 01       	movw	r24, r28
    2498:	8e 5a       	subi	r24, 0xAE	; 174
    249a:	9e 4f       	sbci	r25, 0xFE	; 254
    249c:	fc 01       	movw	r30, r24
    249e:	80 81       	ld	r24, Z
    24a0:	91 81       	ldd	r25, Z+1	; 0x01
    24a2:	fc 01       	movw	r30, r24
    24a4:	85 81       	ldd	r24, Z+5	; 0x05
    24a6:	61 e0       	ldi	r22, 0x01	; 1
    24a8:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
  digitalWrite(_pin, LOW);
    24ac:	ce 01       	movw	r24, r28
    24ae:	8e 5a       	subi	r24, 0xAE	; 174
    24b0:	9e 4f       	sbci	r25, 0xFE	; 254
    24b2:	fc 01       	movw	r30, r24
    24b4:	80 81       	ld	r24, Z
    24b6:	91 81       	ldd	r25, Z+1	; 0x01
    24b8:	fc 01       	movw	r30, r24
    24ba:	85 81       	ldd	r24, Z+5	; 0x05
    24bc:	60 e0       	ldi	r22, 0x00	; 0
    24be:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
  switch (_type) {
    24c2:	ce 01       	movw	r24, r28
    24c4:	8e 5a       	subi	r24, 0xAE	; 174
    24c6:	9e 4f       	sbci	r25, 0xFE	; 254
    24c8:	fc 01       	movw	r30, r24
    24ca:	80 81       	ld	r24, Z
    24cc:	91 81       	ldd	r25, Z+1	; 0x01
    24ce:	fc 01       	movw	r30, r24
    24d0:	86 81       	ldd	r24, Z+6	; 0x06
    24d2:	88 2f       	mov	r24, r24
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	45 97       	sbiw	r24, 0x15	; 21
    24d8:	02 97       	sbiw	r24, 0x02	; 2
    24da:	28 f4       	brcc	.+10     	; 0x24e6 <_ZN3DHT4readEb+0x1c6>
  case DHT22:
  case DHT21:
    delayMicroseconds(1100); // data sheet says "at least 1ms"
    24dc:	8c e4       	ldi	r24, 0x4C	; 76
    24de:	94 e0       	ldi	r25, 0x04	; 4
    24e0:	0e 94 f2 49 	call	0x93e4	; 0x93e4 <delayMicroseconds>
    break;
    24e4:	07 c0       	rjmp	.+14     	; 0x24f4 <_ZN3DHT4readEb+0x1d4>
  case DHT11:
  default:
    delay(20); // data sheet says at least 18ms, 20ms just to be safe
    24e6:	64 e1       	ldi	r22, 0x14	; 20
    24e8:	70 e0       	ldi	r23, 0x00	; 0
    24ea:	80 e0       	ldi	r24, 0x00	; 0
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	0e 94 b9 49 	call	0x9372	; 0x9372 <delay>
    break;
    24f2:	00 00       	nop
  }

  uint32_t cycles[80];
  {
    // End the start signal by setting data line high for 40 microseconds.
    pinMode(_pin, INPUT_PULLUP);
    24f4:	ce 01       	movw	r24, r28
    24f6:	8e 5a       	subi	r24, 0xAE	; 174
    24f8:	9e 4f       	sbci	r25, 0xFE	; 254
    24fa:	fc 01       	movw	r30, r24
    24fc:	80 81       	ld	r24, Z
    24fe:	91 81       	ldd	r25, Z+1	; 0x01
    2500:	fc 01       	movw	r30, r24
    2502:	85 81       	ldd	r24, Z+5	; 0x05
    2504:	62 e0       	ldi	r22, 0x02	; 2
    2506:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>

    // Delay a moment to let sensor pull data line low.
    delayMicroseconds(pullTime);
    250a:	ce 01       	movw	r24, r28
    250c:	8e 5a       	subi	r24, 0xAE	; 174
    250e:	9e 4f       	sbci	r25, 0xFE	; 254
    2510:	fc 01       	movw	r30, r24
    2512:	80 81       	ld	r24, Z
    2514:	91 81       	ldd	r25, Z+1	; 0x01
    2516:	fc 01       	movw	r30, r24
    2518:	82 89       	ldd	r24, Z+18	; 0x12
    251a:	88 2f       	mov	r24, r24
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	0e 94 f2 49 	call	0x93e4	; 0x93e4 <delayMicroseconds>

    // Now start reading the data line to get the value from the DHT sensor.

    // Turn off interrupts temporarily because the next sections
    // are timing critical and we don't want any interruptions.
    InterruptLock lock;
    2522:	ce 01       	movw	r24, r28
    2524:	8f 5a       	subi	r24, 0xAF	; 175
    2526:	9e 4f       	sbci	r25, 0xFE	; 254
    2528:	00 d9       	rcall	.-3584   	; 0x172a <_ZN13InterruptLockC1Ev>

    // First expect a low signal for ~80 microseconds followed by a high signal
    // for ~80 microseconds again.
    if (expectPulse(LOW) == TIMEOUT) {
    252a:	ce 01       	movw	r24, r28
    252c:	8e 5a       	subi	r24, 0xAE	; 174
    252e:	9e 4f       	sbci	r25, 0xFE	; 254
    2530:	fc 01       	movw	r30, r24
    2532:	80 81       	ld	r24, Z
    2534:	91 81       	ldd	r25, Z+1	; 0x01
    2536:	60 e0       	ldi	r22, 0x00	; 0
    2538:	b7 d1       	rcall	.+878    	; 0x28a8 <_ZN3DHT11expectPulseEb>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	21 e0       	ldi	r18, 0x01	; 1
    2540:	8f 3f       	cpi	r24, 0xFF	; 255
    2542:	9f 4f       	sbci	r25, 0xFF	; 255
    2544:	af 4f       	sbci	r26, 0xFF	; 255
    2546:	bf 4f       	sbci	r27, 0xFF	; 255
    2548:	09 f0       	breq	.+2      	; 0x254c <_ZN3DHT4readEb+0x22c>
    254a:	20 e0       	ldi	r18, 0x00	; 0
    254c:	22 23       	and	r18, r18
    254e:	99 f0       	breq	.+38     	; 0x2576 <_ZN3DHT4readEb+0x256>
      DEBUG_PRINTLN(F("DHT timeout waiting for start signal low pulse."));
      _lastresult = false;
    2550:	ce 01       	movw	r24, r28
    2552:	8e 5a       	subi	r24, 0xAE	; 174
    2554:	9e 4f       	sbci	r25, 0xFE	; 254
    2556:	fc 01       	movw	r30, r24
    2558:	80 81       	ld	r24, Z
    255a:	91 81       	ldd	r25, Z+1	; 0x01
    255c:	fc 01       	movw	r30, r24
    255e:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    2560:	ce 01       	movw	r24, r28
    2562:	8e 5a       	subi	r24, 0xAE	; 174
    2564:	9e 4f       	sbci	r25, 0xFE	; 254
    2566:	fc 01       	movw	r30, r24
    2568:	80 81       	ld	r24, Z
    256a:	91 81       	ldd	r25, Z+1	; 0x01
    256c:	fc 01       	movw	r30, r24
    256e:	f1 88       	ldd	r15, Z+17	; 0x11
    2570:	00 e0       	ldi	r16, 0x00	; 0
    2572:	10 e0       	ldi	r17, 0x00	; 0
    2574:	72 c0       	rjmp	.+228    	; 0x265a <_ZN3DHT4readEb+0x33a>
    }
    if (expectPulse(HIGH) == TIMEOUT) {
    2576:	ce 01       	movw	r24, r28
    2578:	8e 5a       	subi	r24, 0xAE	; 174
    257a:	9e 4f       	sbci	r25, 0xFE	; 254
    257c:	fc 01       	movw	r30, r24
    257e:	80 81       	ld	r24, Z
    2580:	91 81       	ldd	r25, Z+1	; 0x01
    2582:	61 e0       	ldi	r22, 0x01	; 1
    2584:	91 d1       	rcall	.+802    	; 0x28a8 <_ZN3DHT11expectPulseEb>
    2586:	dc 01       	movw	r26, r24
    2588:	cb 01       	movw	r24, r22
    258a:	21 e0       	ldi	r18, 0x01	; 1
    258c:	8f 3f       	cpi	r24, 0xFF	; 255
    258e:	9f 4f       	sbci	r25, 0xFF	; 255
    2590:	af 4f       	sbci	r26, 0xFF	; 255
    2592:	bf 4f       	sbci	r27, 0xFF	; 255
    2594:	09 f0       	breq	.+2      	; 0x2598 <_ZN3DHT4readEb+0x278>
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	22 23       	and	r18, r18
    259a:	99 f0       	breq	.+38     	; 0x25c2 <_ZN3DHT4readEb+0x2a2>
      DEBUG_PRINTLN(F("DHT timeout waiting for start signal high pulse."));
      _lastresult = false;
    259c:	ce 01       	movw	r24, r28
    259e:	8e 5a       	subi	r24, 0xAE	; 174
    25a0:	9e 4f       	sbci	r25, 0xFE	; 254
    25a2:	fc 01       	movw	r30, r24
    25a4:	80 81       	ld	r24, Z
    25a6:	91 81       	ldd	r25, Z+1	; 0x01
    25a8:	fc 01       	movw	r30, r24
    25aa:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    25ac:	ce 01       	movw	r24, r28
    25ae:	8e 5a       	subi	r24, 0xAE	; 174
    25b0:	9e 4f       	sbci	r25, 0xFE	; 254
    25b2:	fc 01       	movw	r30, r24
    25b4:	80 81       	ld	r24, Z
    25b6:	91 81       	ldd	r25, Z+1	; 0x01
    25b8:	fc 01       	movw	r30, r24
    25ba:	f1 88       	ldd	r15, Z+17	; 0x11
    25bc:	00 e0       	ldi	r16, 0x00	; 0
    25be:	10 e0       	ldi	r17, 0x00	; 0
    25c0:	4c c0       	rjmp	.+152    	; 0x265a <_ZN3DHT4readEb+0x33a>
    // then it's a 1.  We measure the cycle count of the initial 50us low pulse
    // and use that to compare to the cycle count of the high pulse to determine
    // if the bit is a 0 (high state cycle count < low state cycle count), or a
    // 1 (high state cycle count > low state cycle count). Note that for speed
    // all the pulses are read into a array and then examined in a later step.
    for (int i = 0; i < 80; i += 2) {
    25c2:	1a 82       	std	Y+2, r1	; 0x02
    25c4:	19 82       	std	Y+1, r1	; 0x01
    25c6:	89 81       	ldd	r24, Y+1	; 0x01
    25c8:	9a 81       	ldd	r25, Y+2	; 0x02
    25ca:	80 35       	cpi	r24, 0x50	; 80
    25cc:	91 05       	cpc	r25, r1
    25ce:	0c f0       	brlt	.+2      	; 0x25d2 <_ZN3DHT4readEb+0x2b2>
    25d0:	42 c0       	rjmp	.+132    	; 0x2656 <_ZN3DHT4readEb+0x336>
      cycles[i] = expectPulse(LOW);
    25d2:	ce 01       	movw	r24, r28
    25d4:	8e 5a       	subi	r24, 0xAE	; 174
    25d6:	9e 4f       	sbci	r25, 0xFE	; 254
    25d8:	fc 01       	movw	r30, r24
    25da:	80 81       	ld	r24, Z
    25dc:	91 81       	ldd	r25, Z+1	; 0x01
    25de:	60 e0       	ldi	r22, 0x00	; 0
    25e0:	63 d1       	rcall	.+710    	; 0x28a8 <_ZN3DHT11expectPulseEb>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	29 81       	ldd	r18, Y+1	; 0x01
    25e8:	3a 81       	ldd	r19, Y+2	; 0x02
    25ea:	22 0f       	add	r18, r18
    25ec:	33 1f       	adc	r19, r19
    25ee:	22 0f       	add	r18, r18
    25f0:	33 1f       	adc	r19, r19
    25f2:	ae 01       	movw	r20, r28
    25f4:	4f 5f       	subi	r20, 0xFF	; 255
    25f6:	5f 4f       	sbci	r21, 0xFF	; 255
    25f8:	24 0f       	add	r18, r20
    25fa:	35 1f       	adc	r19, r21
    25fc:	20 5f       	subi	r18, 0xF0	; 240
    25fe:	3f 4f       	sbci	r19, 0xFF	; 255
    2600:	f9 01       	movw	r30, r18
    2602:	80 83       	st	Z, r24
    2604:	91 83       	std	Z+1, r25	; 0x01
    2606:	a2 83       	std	Z+2, r26	; 0x02
    2608:	b3 83       	std	Z+3, r27	; 0x03
      cycles[i + 1] = expectPulse(HIGH);
    260a:	89 81       	ldd	r24, Y+1	; 0x01
    260c:	9a 81       	ldd	r25, Y+2	; 0x02
    260e:	8c 01       	movw	r16, r24
    2610:	0f 5f       	subi	r16, 0xFF	; 255
    2612:	1f 4f       	sbci	r17, 0xFF	; 255
    2614:	ce 01       	movw	r24, r28
    2616:	8e 5a       	subi	r24, 0xAE	; 174
    2618:	9e 4f       	sbci	r25, 0xFE	; 254
    261a:	fc 01       	movw	r30, r24
    261c:	80 81       	ld	r24, Z
    261e:	91 81       	ldd	r25, Z+1	; 0x01
    2620:	61 e0       	ldi	r22, 0x01	; 1
    2622:	42 d1       	rcall	.+644    	; 0x28a8 <_ZN3DHT11expectPulseEb>
    2624:	dc 01       	movw	r26, r24
    2626:	cb 01       	movw	r24, r22
    2628:	98 01       	movw	r18, r16
    262a:	22 0f       	add	r18, r18
    262c:	33 1f       	adc	r19, r19
    262e:	22 0f       	add	r18, r18
    2630:	33 1f       	adc	r19, r19
    2632:	ae 01       	movw	r20, r28
    2634:	4f 5f       	subi	r20, 0xFF	; 255
    2636:	5f 4f       	sbci	r21, 0xFF	; 255
    2638:	24 0f       	add	r18, r20
    263a:	35 1f       	adc	r19, r21
    263c:	20 5f       	subi	r18, 0xF0	; 240
    263e:	3f 4f       	sbci	r19, 0xFF	; 255
    2640:	f9 01       	movw	r30, r18
    2642:	80 83       	st	Z, r24
    2644:	91 83       	std	Z+1, r25	; 0x01
    2646:	a2 83       	std	Z+2, r26	; 0x02
    2648:	b3 83       	std	Z+3, r27	; 0x03
    // then it's a 1.  We measure the cycle count of the initial 50us low pulse
    // and use that to compare to the cycle count of the high pulse to determine
    // if the bit is a 0 (high state cycle count < low state cycle count), or a
    // 1 (high state cycle count > low state cycle count). Note that for speed
    // all the pulses are read into a array and then examined in a later step.
    for (int i = 0; i < 80; i += 2) {
    264a:	89 81       	ldd	r24, Y+1	; 0x01
    264c:	9a 81       	ldd	r25, Y+2	; 0x02
    264e:	02 96       	adiw	r24, 0x02	; 2
    2650:	9a 83       	std	Y+2, r25	; 0x02
    2652:	89 83       	std	Y+1, r24	; 0x01
    2654:	b8 cf       	rjmp	.-144    	; 0x25c6 <_ZN3DHT4readEb+0x2a6>
    2656:	01 e0       	ldi	r16, 0x01	; 1
    2658:	10 e0       	ldi	r17, 0x00	; 0
    265a:	ce 01       	movw	r24, r28
    265c:	8f 5a       	subi	r24, 0xAF	; 175
    265e:	9e 4f       	sbci	r25, 0xFE	; 254
    2660:	73 d8       	rcall	.-3866   	; 0x1748 <_ZN13InterruptLockD1Ev>
    2662:	01 30       	cpi	r16, 0x01	; 1
    2664:	11 05       	cpc	r17, r1
    2666:	09 f0       	breq	.+2      	; 0x266a <_ZN3DHT4readEb+0x34a>
    2668:	0d c1       	rjmp	.+538    	; 0x2884 <_ZN3DHT4readEb+0x564>

    // Now start reading the data line to get the value from the DHT sensor.

    // Turn off interrupts temporarily because the next sections
    // are timing critical and we don't want any interruptions.
    InterruptLock lock;
    266a:	00 00       	nop
    }
  } // Timing critical code is now complete.

  // Inspect pulses and determine which ones are 0 (high state cycle count < low
  // state cycle count), or 1 (high state cycle count > low state cycle count).
  for (int i = 0; i < 40; ++i) {
    266c:	1c 82       	std	Y+4, r1	; 0x04
    266e:	1b 82       	std	Y+3, r1	; 0x03
    2670:	8b 81       	ldd	r24, Y+3	; 0x03
    2672:	9c 81       	ldd	r25, Y+4	; 0x04
    2674:	88 97       	sbiw	r24, 0x28	; 40
    2676:	0c f0       	brlt	.+2      	; 0x267a <_ZN3DHT4readEb+0x35a>
    2678:	a7 c0       	rjmp	.+334    	; 0x27c8 <_ZN3DHT4readEb+0x4a8>
    uint32_t lowCycles = cycles[2 * i];
    267a:	8b 81       	ldd	r24, Y+3	; 0x03
    267c:	9c 81       	ldd	r25, Y+4	; 0x04
    267e:	88 0f       	add	r24, r24
    2680:	99 1f       	adc	r25, r25
    2682:	88 0f       	add	r24, r24
    2684:	99 1f       	adc	r25, r25
    2686:	88 0f       	add	r24, r24
    2688:	99 1f       	adc	r25, r25
    268a:	9e 01       	movw	r18, r28
    268c:	2f 5f       	subi	r18, 0xFF	; 255
    268e:	3f 4f       	sbci	r19, 0xFF	; 255
    2690:	82 0f       	add	r24, r18
    2692:	93 1f       	adc	r25, r19
    2694:	40 96       	adiw	r24, 0x10	; 16
    2696:	fc 01       	movw	r30, r24
    2698:	80 81       	ld	r24, Z
    269a:	91 81       	ldd	r25, Z+1	; 0x01
    269c:	a2 81       	ldd	r26, Z+2	; 0x02
    269e:	b3 81       	ldd	r27, Z+3	; 0x03
    26a0:	89 87       	std	Y+9, r24	; 0x09
    26a2:	9a 87       	std	Y+10, r25	; 0x0a
    26a4:	ab 87       	std	Y+11, r26	; 0x0b
    26a6:	bc 87       	std	Y+12, r27	; 0x0c
    uint32_t highCycles = cycles[2 * i + 1];
    26a8:	8b 81       	ldd	r24, Y+3	; 0x03
    26aa:	9c 81       	ldd	r25, Y+4	; 0x04
    26ac:	88 0f       	add	r24, r24
    26ae:	99 1f       	adc	r25, r25
    26b0:	01 96       	adiw	r24, 0x01	; 1
    26b2:	88 0f       	add	r24, r24
    26b4:	99 1f       	adc	r25, r25
    26b6:	88 0f       	add	r24, r24
    26b8:	99 1f       	adc	r25, r25
    26ba:	9e 01       	movw	r18, r28
    26bc:	2f 5f       	subi	r18, 0xFF	; 255
    26be:	3f 4f       	sbci	r19, 0xFF	; 255
    26c0:	82 0f       	add	r24, r18
    26c2:	93 1f       	adc	r25, r19
    26c4:	40 96       	adiw	r24, 0x10	; 16
    26c6:	fc 01       	movw	r30, r24
    26c8:	80 81       	ld	r24, Z
    26ca:	91 81       	ldd	r25, Z+1	; 0x01
    26cc:	a2 81       	ldd	r26, Z+2	; 0x02
    26ce:	b3 81       	ldd	r27, Z+3	; 0x03
    26d0:	8d 87       	std	Y+13, r24	; 0x0d
    26d2:	9e 87       	std	Y+14, r25	; 0x0e
    26d4:	af 87       	std	Y+15, r26	; 0x0f
    26d6:	b8 8b       	std	Y+16, r27	; 0x10
    if ((lowCycles == TIMEOUT) || (highCycles == TIMEOUT)) {
    26d8:	89 85       	ldd	r24, Y+9	; 0x09
    26da:	9a 85       	ldd	r25, Y+10	; 0x0a
    26dc:	ab 85       	ldd	r26, Y+11	; 0x0b
    26de:	bc 85       	ldd	r27, Y+12	; 0x0c
    26e0:	8f 3f       	cpi	r24, 0xFF	; 255
    26e2:	9f 4f       	sbci	r25, 0xFF	; 255
    26e4:	af 4f       	sbci	r26, 0xFF	; 255
    26e6:	bf 4f       	sbci	r27, 0xFF	; 255
    26e8:	49 f0       	breq	.+18     	; 0x26fc <_ZN3DHT4readEb+0x3dc>
    26ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    26ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    26ee:	af 85       	ldd	r26, Y+15	; 0x0f
    26f0:	b8 89       	ldd	r27, Y+16	; 0x10
    26f2:	8f 3f       	cpi	r24, 0xFF	; 255
    26f4:	9f 4f       	sbci	r25, 0xFF	; 255
    26f6:	af 4f       	sbci	r26, 0xFF	; 255
    26f8:	bf 4f       	sbci	r27, 0xFF	; 255
    26fa:	89 f4       	brne	.+34     	; 0x271e <_ZN3DHT4readEb+0x3fe>
      DEBUG_PRINTLN(F("DHT timeout waiting for pulse."));
      _lastresult = false;
    26fc:	ce 01       	movw	r24, r28
    26fe:	8e 5a       	subi	r24, 0xAE	; 174
    2700:	9e 4f       	sbci	r25, 0xFE	; 254
    2702:	fc 01       	movw	r30, r24
    2704:	80 81       	ld	r24, Z
    2706:	91 81       	ldd	r25, Z+1	; 0x01
    2708:	fc 01       	movw	r30, r24
    270a:	11 8a       	std	Z+17, r1	; 0x11
      return _lastresult;
    270c:	ce 01       	movw	r24, r28
    270e:	8e 5a       	subi	r24, 0xAE	; 174
    2710:	9e 4f       	sbci	r25, 0xFE	; 254
    2712:	fc 01       	movw	r30, r24
    2714:	80 81       	ld	r24, Z
    2716:	91 81       	ldd	r25, Z+1	; 0x01
    2718:	fc 01       	movw	r30, r24
    271a:	f1 88       	ldd	r15, Z+17	; 0x11
    271c:	b3 c0       	rjmp	.+358    	; 0x2884 <_ZN3DHT4readEb+0x564>
    }
    data[i / 8] <<= 1;
    271e:	8b 81       	ldd	r24, Y+3	; 0x03
    2720:	9c 81       	ldd	r25, Y+4	; 0x04
    2722:	99 23       	and	r25, r25
    2724:	0c f4       	brge	.+2      	; 0x2728 <_ZN3DHT4readEb+0x408>
    2726:	07 96       	adiw	r24, 0x07	; 7
    2728:	95 95       	asr	r25
    272a:	87 95       	ror	r24
    272c:	95 95       	asr	r25
    272e:	87 95       	ror	r24
    2730:	95 95       	asr	r25
    2732:	87 95       	ror	r24
    2734:	9e 01       	movw	r18, r28
    2736:	2e 5a       	subi	r18, 0xAE	; 174
    2738:	3e 4f       	sbci	r19, 0xFE	; 254
    273a:	f9 01       	movw	r30, r18
    273c:	20 81       	ld	r18, Z
    273e:	31 81       	ldd	r19, Z+1	; 0x01
    2740:	28 0f       	add	r18, r24
    2742:	39 1f       	adc	r19, r25
    2744:	f9 01       	movw	r30, r18
    2746:	20 81       	ld	r18, Z
    2748:	42 2f       	mov	r20, r18
    274a:	44 0f       	add	r20, r20
    274c:	9e 01       	movw	r18, r28
    274e:	2e 5a       	subi	r18, 0xAE	; 174
    2750:	3e 4f       	sbci	r19, 0xFE	; 254
    2752:	f9 01       	movw	r30, r18
    2754:	20 81       	ld	r18, Z
    2756:	31 81       	ldd	r19, Z+1	; 0x01
    2758:	82 0f       	add	r24, r18
    275a:	93 1f       	adc	r25, r19
    275c:	fc 01       	movw	r30, r24
    275e:	40 83       	st	Z, r20
    // Now compare the low and high cycle times to see if the bit is a 0 or 1.
    if (highCycles > lowCycles) {
    2760:	2d 85       	ldd	r18, Y+13	; 0x0d
    2762:	3e 85       	ldd	r19, Y+14	; 0x0e
    2764:	4f 85       	ldd	r20, Y+15	; 0x0f
    2766:	58 89       	ldd	r21, Y+16	; 0x10
    2768:	89 85       	ldd	r24, Y+9	; 0x09
    276a:	9a 85       	ldd	r25, Y+10	; 0x0a
    276c:	ab 85       	ldd	r26, Y+11	; 0x0b
    276e:	bc 85       	ldd	r27, Y+12	; 0x0c
    2770:	82 17       	cp	r24, r18
    2772:	93 07       	cpc	r25, r19
    2774:	a4 07       	cpc	r26, r20
    2776:	b5 07       	cpc	r27, r21
    2778:	08 f5       	brcc	.+66     	; 0x27bc <_ZN3DHT4readEb+0x49c>
      // High cycles are greater than 50us low cycle count, must be a 1.
      data[i / 8] |= 1;
    277a:	8b 81       	ldd	r24, Y+3	; 0x03
    277c:	9c 81       	ldd	r25, Y+4	; 0x04
    277e:	99 23       	and	r25, r25
    2780:	0c f4       	brge	.+2      	; 0x2784 <_ZN3DHT4readEb+0x464>
    2782:	07 96       	adiw	r24, 0x07	; 7
    2784:	95 95       	asr	r25
    2786:	87 95       	ror	r24
    2788:	95 95       	asr	r25
    278a:	87 95       	ror	r24
    278c:	95 95       	asr	r25
    278e:	87 95       	ror	r24
    2790:	9e 01       	movw	r18, r28
    2792:	2e 5a       	subi	r18, 0xAE	; 174
    2794:	3e 4f       	sbci	r19, 0xFE	; 254
    2796:	f9 01       	movw	r30, r18
    2798:	20 81       	ld	r18, Z
    279a:	31 81       	ldd	r19, Z+1	; 0x01
    279c:	28 0f       	add	r18, r24
    279e:	39 1f       	adc	r19, r25
    27a0:	f9 01       	movw	r30, r18
    27a2:	20 81       	ld	r18, Z
    27a4:	42 2f       	mov	r20, r18
    27a6:	41 60       	ori	r20, 0x01	; 1
    27a8:	9e 01       	movw	r18, r28
    27aa:	2e 5a       	subi	r18, 0xAE	; 174
    27ac:	3e 4f       	sbci	r19, 0xFE	; 254
    27ae:	f9 01       	movw	r30, r18
    27b0:	20 81       	ld	r18, Z
    27b2:	31 81       	ldd	r19, Z+1	; 0x01
    27b4:	82 0f       	add	r24, r18
    27b6:	93 1f       	adc	r25, r19
    27b8:	fc 01       	movw	r30, r24
    27ba:	40 83       	st	Z, r20
    }
  } // Timing critical code is now complete.

  // Inspect pulses and determine which ones are 0 (high state cycle count < low
  // state cycle count), or 1 (high state cycle count > low state cycle count).
  for (int i = 0; i < 40; ++i) {
    27bc:	8b 81       	ldd	r24, Y+3	; 0x03
    27be:	9c 81       	ldd	r25, Y+4	; 0x04
    27c0:	01 96       	adiw	r24, 0x01	; 1
    27c2:	9c 83       	std	Y+4, r25	; 0x04
    27c4:	8b 83       	std	Y+3, r24	; 0x03
    27c6:	54 cf       	rjmp	.-344    	; 0x2670 <_ZN3DHT4readEb+0x350>
  DEBUG_PRINT(data[4], HEX);
  DEBUG_PRINT(F(" =? "));
  DEBUG_PRINTLN((data[0] + data[1] + data[2] + data[3]) & 0xFF, HEX);

  // Check we read 40 bits and that the checksum matches.
  if (data[4] == ((data[0] + data[1] + data[2] + data[3]) & 0xFF)) {
    27c8:	ce 01       	movw	r24, r28
    27ca:	8e 5a       	subi	r24, 0xAE	; 174
    27cc:	9e 4f       	sbci	r25, 0xFE	; 254
    27ce:	fc 01       	movw	r30, r24
    27d0:	80 81       	ld	r24, Z
    27d2:	91 81       	ldd	r25, Z+1	; 0x01
    27d4:	fc 01       	movw	r30, r24
    27d6:	84 81       	ldd	r24, Z+4	; 0x04
    27d8:	28 2f       	mov	r18, r24
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	ce 01       	movw	r24, r28
    27de:	8e 5a       	subi	r24, 0xAE	; 174
    27e0:	9e 4f       	sbci	r25, 0xFE	; 254
    27e2:	fc 01       	movw	r30, r24
    27e4:	80 81       	ld	r24, Z
    27e6:	91 81       	ldd	r25, Z+1	; 0x01
    27e8:	fc 01       	movw	r30, r24
    27ea:	80 81       	ld	r24, Z
    27ec:	48 2f       	mov	r20, r24
    27ee:	50 e0       	ldi	r21, 0x00	; 0
    27f0:	ce 01       	movw	r24, r28
    27f2:	8e 5a       	subi	r24, 0xAE	; 174
    27f4:	9e 4f       	sbci	r25, 0xFE	; 254
    27f6:	fc 01       	movw	r30, r24
    27f8:	80 81       	ld	r24, Z
    27fa:	91 81       	ldd	r25, Z+1	; 0x01
    27fc:	fc 01       	movw	r30, r24
    27fe:	81 81       	ldd	r24, Z+1	; 0x01
    2800:	88 2f       	mov	r24, r24
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	48 0f       	add	r20, r24
    2806:	59 1f       	adc	r21, r25
    2808:	ce 01       	movw	r24, r28
    280a:	8e 5a       	subi	r24, 0xAE	; 174
    280c:	9e 4f       	sbci	r25, 0xFE	; 254
    280e:	fc 01       	movw	r30, r24
    2810:	80 81       	ld	r24, Z
    2812:	91 81       	ldd	r25, Z+1	; 0x01
    2814:	fc 01       	movw	r30, r24
    2816:	82 81       	ldd	r24, Z+2	; 0x02
    2818:	88 2f       	mov	r24, r24
    281a:	90 e0       	ldi	r25, 0x00	; 0
    281c:	48 0f       	add	r20, r24
    281e:	59 1f       	adc	r21, r25
    2820:	ce 01       	movw	r24, r28
    2822:	8e 5a       	subi	r24, 0xAE	; 174
    2824:	9e 4f       	sbci	r25, 0xFE	; 254
    2826:	fc 01       	movw	r30, r24
    2828:	80 81       	ld	r24, Z
    282a:	91 81       	ldd	r25, Z+1	; 0x01
    282c:	fc 01       	movw	r30, r24
    282e:	83 81       	ldd	r24, Z+3	; 0x03
    2830:	88 2f       	mov	r24, r24
    2832:	90 e0       	ldi	r25, 0x00	; 0
    2834:	84 0f       	add	r24, r20
    2836:	95 1f       	adc	r25, r21
    2838:	99 27       	eor	r25, r25
    283a:	28 17       	cp	r18, r24
    283c:	39 07       	cpc	r19, r25
    283e:	91 f4       	brne	.+36     	; 0x2864 <_ZN3DHT4readEb+0x544>
    _lastresult = true;
    2840:	ce 01       	movw	r24, r28
    2842:	8e 5a       	subi	r24, 0xAE	; 174
    2844:	9e 4f       	sbci	r25, 0xFE	; 254
    2846:	fc 01       	movw	r30, r24
    2848:	80 81       	ld	r24, Z
    284a:	91 81       	ldd	r25, Z+1	; 0x01
    284c:	21 e0       	ldi	r18, 0x01	; 1
    284e:	fc 01       	movw	r30, r24
    2850:	21 8b       	std	Z+17, r18	; 0x11
    return _lastresult;
    2852:	ce 01       	movw	r24, r28
    2854:	8e 5a       	subi	r24, 0xAE	; 174
    2856:	9e 4f       	sbci	r25, 0xFE	; 254
    2858:	fc 01       	movw	r30, r24
    285a:	80 81       	ld	r24, Z
    285c:	91 81       	ldd	r25, Z+1	; 0x01
    285e:	fc 01       	movw	r30, r24
    2860:	f1 88       	ldd	r15, Z+17	; 0x11
    2862:	10 c0       	rjmp	.+32     	; 0x2884 <_ZN3DHT4readEb+0x564>
  } else {
    DEBUG_PRINTLN(F("DHT checksum failure!"));
    _lastresult = false;
    2864:	ce 01       	movw	r24, r28
    2866:	8e 5a       	subi	r24, 0xAE	; 174
    2868:	9e 4f       	sbci	r25, 0xFE	; 254
    286a:	fc 01       	movw	r30, r24
    286c:	80 81       	ld	r24, Z
    286e:	91 81       	ldd	r25, Z+1	; 0x01
    2870:	fc 01       	movw	r30, r24
    2872:	11 8a       	std	Z+17, r1	; 0x11
    return _lastresult;
    2874:	ce 01       	movw	r24, r28
    2876:	8e 5a       	subi	r24, 0xAE	; 174
    2878:	9e 4f       	sbci	r25, 0xFE	; 254
    287a:	fc 01       	movw	r30, r24
    287c:	80 81       	ld	r24, Z
    287e:	91 81       	ldd	r25, Z+1	; 0x01
    2880:	fc 01       	movw	r30, r24
    2882:	f1 88       	ldd	r15, Z+17	; 0x11
    2884:	8f 2d       	mov	r24, r15
  }
}
    2886:	cc 5a       	subi	r28, 0xAC	; 172
    2888:	de 4f       	sbci	r29, 0xFE	; 254
    288a:	0f b6       	in	r0, 0x3f	; 63
    288c:	f8 94       	cli
    288e:	de bf       	out	0x3e, r29	; 62
    2890:	0f be       	out	0x3f, r0	; 63
    2892:	cd bf       	out	0x3d, r28	; 61
    2894:	df 91       	pop	r29
    2896:	cf 91       	pop	r28
    2898:	1f 91       	pop	r17
    289a:	0f 91       	pop	r16
    289c:	ff 90       	pop	r15
    289e:	df 90       	pop	r13
    28a0:	cf 90       	pop	r12
    28a2:	bf 90       	pop	r11
    28a4:	af 90       	pop	r10
    28a6:	08 95       	ret

000028a8 <_ZN3DHT11expectPulseEb>:
// used to compare the relative time of two pulses).  If more than a millisecond
// ellapses without the level changing then the call fails with a 0 response.
// This is adapted from Arduino's pulseInLong function (which is only available
// in the very latest IDE versions):
//   https://github.com/arduino/Arduino/blob/master/hardware/arduino/avr/cores/arduino/wiring_pulse.c
uint32_t DHT::expectPulse(bool level) {
    28a8:	cf 93       	push	r28
    28aa:	df 93       	push	r29
    28ac:	cd b7       	in	r28, 0x3d	; 61
    28ae:	de b7       	in	r29, 0x3e	; 62
    28b0:	2a 97       	sbiw	r28, 0x0a	; 10
    28b2:	0f b6       	in	r0, 0x3f	; 63
    28b4:	f8 94       	cli
    28b6:	de bf       	out	0x3e, r29	; 62
    28b8:	0f be       	out	0x3f, r0	; 63
    28ba:	cd bf       	out	0x3d, r28	; 61
    28bc:	99 87       	std	Y+9, r25	; 0x09
    28be:	88 87       	std	Y+8, r24	; 0x08
    28c0:	6a 87       	std	Y+10, r22	; 0x0a
#if (F_CPU > 16000000L)
  uint32_t count = 0;
#else
  uint16_t count = 0; // To work fast enough on slower AVR boards
    28c2:	1a 82       	std	Y+2, r1	; 0x02
    28c4:	19 82       	std	Y+1, r1	; 0x01
#endif
// On AVR platforms use direct GPIO port access as it's much faster and better
// for catching pulses that are 10's of microseconds in length:
#ifdef __AVR
  uint8_t portState = level ? _bit : 0;
    28c6:	8a 85       	ldd	r24, Y+10	; 0x0a
    28c8:	88 23       	and	r24, r24
    28ca:	29 f0       	breq	.+10     	; 0x28d6 <_ZN3DHT11expectPulseEb+0x2e>
    28cc:	88 85       	ldd	r24, Y+8	; 0x08
    28ce:	99 85       	ldd	r25, Y+9	; 0x09
    28d0:	fc 01       	movw	r30, r24
    28d2:	87 81       	ldd	r24, Z+7	; 0x07
    28d4:	01 c0       	rjmp	.+2      	; 0x28d8 <_ZN3DHT11expectPulseEb+0x30>
    28d6:	80 e0       	ldi	r24, 0x00	; 0
    28d8:	8b 83       	std	Y+3, r24	; 0x03
  while ((*portInputRegister(_port) & _bit) == portState) {
    28da:	88 85       	ldd	r24, Y+8	; 0x08
    28dc:	99 85       	ldd	r25, Y+9	; 0x09
    28de:	fc 01       	movw	r30, r24
    28e0:	80 85       	ldd	r24, Z+8	; 0x08
    28e2:	88 2f       	mov	r24, r24
    28e4:	90 e0       	ldi	r25, 0x00	; 0
    28e6:	88 0f       	add	r24, r24
    28e8:	99 1f       	adc	r25, r25
    28ea:	87 58       	subi	r24, 0x87	; 135
    28ec:	91 4f       	sbci	r25, 0xF1	; 241
    28ee:	9d 83       	std	Y+5, r25	; 0x05
    28f0:	8c 83       	std	Y+4, r24	; 0x04
    28f2:	8c 81       	ldd	r24, Y+4	; 0x04
    28f4:	9d 81       	ldd	r25, Y+5	; 0x05
    28f6:	fc 01       	movw	r30, r24
    28f8:	25 91       	lpm	r18, Z+
    28fa:	34 91       	lpm	r19, Z
    28fc:	cf 01       	movw	r24, r30
    28fe:	3f 83       	std	Y+7, r19	; 0x07
    2900:	2e 83       	std	Y+6, r18	; 0x06
    2902:	9d 83       	std	Y+5, r25	; 0x05
    2904:	8c 83       	std	Y+4, r24	; 0x04
    2906:	8e 81       	ldd	r24, Y+6	; 0x06
    2908:	9f 81       	ldd	r25, Y+7	; 0x07
    290a:	fc 01       	movw	r30, r24
    290c:	20 81       	ld	r18, Z
    290e:	88 85       	ldd	r24, Y+8	; 0x08
    2910:	99 85       	ldd	r25, Y+9	; 0x09
    2912:	fc 01       	movw	r30, r24
    2914:	87 81       	ldd	r24, Z+7	; 0x07
    2916:	28 23       	and	r18, r24
    2918:	81 e0       	ldi	r24, 0x01	; 1
    291a:	9b 81       	ldd	r25, Y+3	; 0x03
    291c:	29 17       	cp	r18, r25
    291e:	09 f0       	breq	.+2      	; 0x2922 <_ZN3DHT11expectPulseEb+0x7a>
    2920:	80 e0       	ldi	r24, 0x00	; 0
    2922:	88 23       	and	r24, r24
    2924:	f9 f0       	breq	.+62     	; 0x2964 <_ZN3DHT11expectPulseEb+0xbc>
    if (count++ >= _maxcycles) {
    2926:	89 81       	ldd	r24, Y+1	; 0x01
    2928:	9a 81       	ldd	r25, Y+2	; 0x02
    292a:	9c 01       	movw	r18, r24
    292c:	2f 5f       	subi	r18, 0xFF	; 255
    292e:	3f 4f       	sbci	r19, 0xFF	; 255
    2930:	3a 83       	std	Y+2, r19	; 0x02
    2932:	29 83       	std	Y+1, r18	; 0x01
    2934:	9c 01       	movw	r18, r24
    2936:	40 e0       	ldi	r20, 0x00	; 0
    2938:	50 e0       	ldi	r21, 0x00	; 0
    293a:	88 85       	ldd	r24, Y+8	; 0x08
    293c:	99 85       	ldd	r25, Y+9	; 0x09
    293e:	fc 01       	movw	r30, r24
    2940:	85 85       	ldd	r24, Z+13	; 0x0d
    2942:	96 85       	ldd	r25, Z+14	; 0x0e
    2944:	a7 85       	ldd	r26, Z+15	; 0x0f
    2946:	b0 89       	ldd	r27, Z+16	; 0x10
    2948:	61 e0       	ldi	r22, 0x01	; 1
    294a:	28 17       	cp	r18, r24
    294c:	39 07       	cpc	r19, r25
    294e:	4a 07       	cpc	r20, r26
    2950:	5b 07       	cpc	r21, r27
    2952:	08 f4       	brcc	.+2      	; 0x2956 <_ZN3DHT11expectPulseEb+0xae>
    2954:	60 e0       	ldi	r22, 0x00	; 0
    2956:	66 23       	and	r22, r22
    2958:	09 f4       	brne	.+2      	; 0x295c <_ZN3DHT11expectPulseEb+0xb4>
    295a:	bf cf       	rjmp	.-130    	; 0x28da <_ZN3DHT11expectPulseEb+0x32>
      return TIMEOUT; // Exceeded timeout, fail.
    295c:	8f ef       	ldi	r24, 0xFF	; 255
    295e:	9f ef       	ldi	r25, 0xFF	; 255
    2960:	dc 01       	movw	r26, r24
    2962:	05 c0       	rjmp	.+10     	; 0x296e <_ZN3DHT11expectPulseEb+0xc6>
      return TIMEOUT; // Exceeded timeout, fail.
    }
  }
#endif

  return count;
    2964:	89 81       	ldd	r24, Y+1	; 0x01
    2966:	9a 81       	ldd	r25, Y+2	; 0x02
    2968:	cc 01       	movw	r24, r24
    296a:	a0 e0       	ldi	r26, 0x00	; 0
    296c:	b0 e0       	ldi	r27, 0x00	; 0
}
    296e:	bc 01       	movw	r22, r24
    2970:	cd 01       	movw	r24, r26
    2972:	2a 96       	adiw	r28, 0x0a	; 10
    2974:	0f b6       	in	r0, 0x3f	; 63
    2976:	f8 94       	cli
    2978:	de bf       	out	0x3e, r29	; 62
    297a:	0f be       	out	0x3f, r0	; 63
    297c:	cd bf       	out	0x3d, r28	; 61
    297e:	df 91       	pop	r29
    2980:	cf 91       	pop	r28
    2982:	08 95       	ret

00002984 <_ZN9DS1307RTCC1Ev>:

// Convert Binary Coded Decimal (BCD) to Decimal
uint8_t DS1307RTC::bcd2dec(uint8_t num)
{
  return ((num/16 * 10) + (num % 16));
}
    2984:	cf 93       	push	r28
    2986:	df 93       	push	r29
    2988:	1f 92       	push	r1
    298a:	1f 92       	push	r1
    298c:	cd b7       	in	r28, 0x3d	; 61
    298e:	de b7       	in	r29, 0x3e	; 62
    2990:	9a 83       	std	Y+2, r25	; 0x02
    2992:	89 83       	std	Y+1, r24	; 0x01
    2994:	87 ee       	ldi	r24, 0xE7	; 231
    2996:	93 e0       	ldi	r25, 0x03	; 3
    2998:	0e 94 87 3c 	call	0x790e	; 0x790e <_ZN7TwoWire5beginEv>
    299c:	00 00       	nop
    299e:	0f 90       	pop	r0
    29a0:	0f 90       	pop	r0
    29a2:	df 91       	pop	r29
    29a4:	cf 91       	pop	r28
    29a6:	08 95       	ret

000029a8 <_Z41__static_initialization_and_destruction_0ii>:

bool DS1307RTC::exists = false;

DS1307RTC RTC = DS1307RTC(); // create an instance for the user
    29a8:	cf 93       	push	r28
    29aa:	df 93       	push	r29
    29ac:	00 d0       	rcall	.+0      	; 0x29ae <_Z41__static_initialization_and_destruction_0ii+0x6>
    29ae:	1f 92       	push	r1
    29b0:	cd b7       	in	r28, 0x3d	; 61
    29b2:	de b7       	in	r29, 0x3e	; 62
    29b4:	9a 83       	std	Y+2, r25	; 0x02
    29b6:	89 83       	std	Y+1, r24	; 0x01
    29b8:	7c 83       	std	Y+4, r23	; 0x04
    29ba:	6b 83       	std	Y+3, r22	; 0x03
    29bc:	89 81       	ldd	r24, Y+1	; 0x01
    29be:	9a 81       	ldd	r25, Y+2	; 0x02
    29c0:	01 97       	sbiw	r24, 0x01	; 1
    29c2:	39 f4       	brne	.+14     	; 0x29d2 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    29c4:	8b 81       	ldd	r24, Y+3	; 0x03
    29c6:	9c 81       	ldd	r25, Y+4	; 0x04
    29c8:	01 96       	adiw	r24, 0x01	; 1
    29ca:	19 f4       	brne	.+6      	; 0x29d2 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    29cc:	88 e2       	ldi	r24, 0x28	; 40
    29ce:	93 e0       	ldi	r25, 0x03	; 3
    29d0:	d9 df       	rcall	.-78     	; 0x2984 <_ZN9DS1307RTCC1Ev>
    29d2:	00 00       	nop
    29d4:	0f 90       	pop	r0
    29d6:	0f 90       	pop	r0
    29d8:	0f 90       	pop	r0
    29da:	0f 90       	pop	r0
    29dc:	df 91       	pop	r29
    29de:	cf 91       	pop	r28
    29e0:	08 95       	ret

000029e2 <_GLOBAL__sub_I__ZN9DS1307RTCC2Ev>:
    29e2:	cf 93       	push	r28
    29e4:	df 93       	push	r29
    29e6:	cd b7       	in	r28, 0x3d	; 61
    29e8:	de b7       	in	r29, 0x3e	; 62
    29ea:	6f ef       	ldi	r22, 0xFF	; 255
    29ec:	7f ef       	ldi	r23, 0xFF	; 255
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	da df       	rcall	.-76     	; 0x29a8 <_Z41__static_initialization_and_destruction_0ii>
    29f4:	df 91       	pop	r29
    29f6:	cf 91       	pop	r28
    29f8:	08 95       	ret

000029fa <_ZN7TwoWire5writeEi>:
    {
        v = *p - '0';
    }

    return 10 * v + *++p - '0';
}
    29fa:	cf 93       	push	r28
    29fc:	df 93       	push	r29
    29fe:	00 d0       	rcall	.+0      	; 0x2a00 <_ZN7TwoWire5writeEi+0x6>
    2a00:	1f 92       	push	r1
    2a02:	cd b7       	in	r28, 0x3d	; 61
    2a04:	de b7       	in	r29, 0x3e	; 62
    2a06:	9a 83       	std	Y+2, r25	; 0x02
    2a08:	89 83       	std	Y+1, r24	; 0x01
    2a0a:	7c 83       	std	Y+4, r23	; 0x04
    2a0c:	6b 83       	std	Y+3, r22	; 0x03
    2a0e:	89 81       	ldd	r24, Y+1	; 0x01
    2a10:	9a 81       	ldd	r25, Y+2	; 0x02
    2a12:	fc 01       	movw	r30, r24
    2a14:	80 81       	ld	r24, Z
    2a16:	91 81       	ldd	r25, Z+1	; 0x01
    2a18:	fc 01       	movw	r30, r24
    2a1a:	20 81       	ld	r18, Z
    2a1c:	31 81       	ldd	r19, Z+1	; 0x01
    2a1e:	4b 81       	ldd	r20, Y+3	; 0x03
    2a20:	89 81       	ldd	r24, Y+1	; 0x01
    2a22:	9a 81       	ldd	r25, Y+2	; 0x02
    2a24:	64 2f       	mov	r22, r20
    2a26:	f9 01       	movw	r30, r18
    2a28:	19 95       	eicall
    2a2a:	0f 90       	pop	r0
    2a2c:	0f 90       	pop	r0
    2a2e:	0f 90       	pop	r0
    2a30:	0f 90       	pop	r0
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	08 95       	ret

00002a38 <_ZN6DS32315beginEv>:
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	1f 92       	push	r1
    2a3e:	1f 92       	push	r1
    2a40:	cd b7       	in	r28, 0x3d	; 61
    2a42:	de b7       	in	r29, 0x3e	; 62
    2a44:	9a 83       	std	Y+2, r25	; 0x02
    2a46:	89 83       	std	Y+1, r24	; 0x01
    2a48:	87 ee       	ldi	r24, 0xE7	; 231
    2a4a:	93 e0       	ldi	r25, 0x03	; 3
    2a4c:	0e 94 87 3c 	call	0x790e	; 0x790e <_ZN7TwoWire5beginEv>
    2a50:	89 81       	ldd	r24, Y+1	; 0x01
    2a52:	9a 81       	ldd	r25, Y+2	; 0x02
    2a54:	40 e0       	ldi	r20, 0x00	; 0
    2a56:	61 e0       	ldi	r22, 0x01	; 1
    2a58:	64 d1       	rcall	.+712    	; 0x2d22 <_ZN6DS323110setBatteryEbb>
    2a5a:	89 81       	ldd	r24, Y+1	; 0x01
    2a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a5e:	20 ed       	ldi	r18, 0xD0	; 208
    2a60:	37 e0       	ldi	r19, 0x07	; 7
    2a62:	fc 01       	movw	r30, r24
    2a64:	31 83       	std	Z+1, r19	; 0x01
    2a66:	20 83       	st	Z, r18
    2a68:	89 81       	ldd	r24, Y+1	; 0x01
    2a6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a6c:	21 e0       	ldi	r18, 0x01	; 1
    2a6e:	fc 01       	movw	r30, r24
    2a70:	22 83       	std	Z+2, r18	; 0x02
    2a72:	89 81       	ldd	r24, Y+1	; 0x01
    2a74:	9a 81       	ldd	r25, Y+2	; 0x02
    2a76:	21 e0       	ldi	r18, 0x01	; 1
    2a78:	fc 01       	movw	r30, r24
    2a7a:	23 83       	std	Z+3, r18	; 0x03
    2a7c:	89 81       	ldd	r24, Y+1	; 0x01
    2a7e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a80:	fc 01       	movw	r30, r24
    2a82:	14 82       	std	Z+4, r1	; 0x04
    2a84:	89 81       	ldd	r24, Y+1	; 0x01
    2a86:	9a 81       	ldd	r25, Y+2	; 0x02
    2a88:	fc 01       	movw	r30, r24
    2a8a:	15 82       	std	Z+5, r1	; 0x05
    2a8c:	89 81       	ldd	r24, Y+1	; 0x01
    2a8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a90:	fc 01       	movw	r30, r24
    2a92:	16 82       	std	Z+6, r1	; 0x06
    2a94:	89 81       	ldd	r24, Y+1	; 0x01
    2a96:	9a 81       	ldd	r25, Y+2	; 0x02
    2a98:	26 e0       	ldi	r18, 0x06	; 6
    2a9a:	fc 01       	movw	r30, r24
    2a9c:	27 83       	std	Z+7, r18	; 0x07
    2a9e:	29 81       	ldd	r18, Y+1	; 0x01
    2aa0:	3a 81       	ldd	r19, Y+2	; 0x02
    2aa2:	80 e7       	ldi	r24, 0x70	; 112
    2aa4:	95 e3       	ldi	r25, 0x35	; 53
    2aa6:	ad e6       	ldi	r26, 0x6D	; 109
    2aa8:	b8 e3       	ldi	r27, 0x38	; 56
    2aaa:	f9 01       	movw	r30, r18
    2aac:	80 87       	std	Z+8, r24	; 0x08
    2aae:	91 87       	std	Z+9, r25	; 0x09
    2ab0:	a2 87       	std	Z+10, r26	; 0x0a
    2ab2:	b3 87       	std	Z+11, r27	; 0x0b
    2ab4:	81 e0       	ldi	r24, 0x01	; 1
    2ab6:	0f 90       	pop	r0
    2ab8:	0f 90       	pop	r0
    2aba:	df 91       	pop	r29
    2abc:	cf 91       	pop	r28
    2abe:	08 95       	ret

00002ac0 <_ZN6DS323111setDateTimeEjhhhhh>:
    2ac0:	cf 92       	push	r12
    2ac2:	ef 92       	push	r14
    2ac4:	0f 93       	push	r16
    2ac6:	cf 93       	push	r28
    2ac8:	df 93       	push	r29
    2aca:	cd b7       	in	r28, 0x3d	; 61
    2acc:	de b7       	in	r29, 0x3e	; 62
    2ace:	29 97       	sbiw	r28, 0x09	; 9
    2ad0:	0f b6       	in	r0, 0x3f	; 63
    2ad2:	f8 94       	cli
    2ad4:	de bf       	out	0x3e, r29	; 62
    2ad6:	0f be       	out	0x3f, r0	; 63
    2ad8:	cd bf       	out	0x3d, r28	; 61
    2ada:	9a 83       	std	Y+2, r25	; 0x02
    2adc:	89 83       	std	Y+1, r24	; 0x01
    2ade:	7c 83       	std	Y+4, r23	; 0x04
    2ae0:	6b 83       	std	Y+3, r22	; 0x03
    2ae2:	4d 83       	std	Y+5, r20	; 0x05
    2ae4:	2e 83       	std	Y+6, r18	; 0x06
    2ae6:	0f 83       	std	Y+7, r16	; 0x07
    2ae8:	e8 86       	std	Y+8, r14	; 0x08
    2aea:	c9 86       	std	Y+9, r12	; 0x09
    2aec:	68 e6       	ldi	r22, 0x68	; 104
    2aee:	70 e0       	ldi	r23, 0x00	; 0
    2af0:	87 ee       	ldi	r24, 0xE7	; 231
    2af2:	93 e0       	ldi	r25, 0x03	; 3
    2af4:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    2af8:	60 e0       	ldi	r22, 0x00	; 0
    2afa:	70 e0       	ldi	r23, 0x00	; 0
    2afc:	87 ee       	ldi	r24, 0xE7	; 231
    2afe:	93 e0       	ldi	r25, 0x03	; 3
    2b00:	7c df       	rcall	.-264    	; 0x29fa <_ZN7TwoWire5writeEi>
    2b02:	89 81       	ldd	r24, Y+1	; 0x01
    2b04:	9a 81       	ldd	r25, Y+2	; 0x02
    2b06:	69 85       	ldd	r22, Y+9	; 0x09
    2b08:	57 d1       	rcall	.+686    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b0a:	68 2f       	mov	r22, r24
    2b0c:	87 ee       	ldi	r24, 0xE7	; 231
    2b0e:	93 e0       	ldi	r25, 0x03	; 3
    2b10:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b14:	89 81       	ldd	r24, Y+1	; 0x01
    2b16:	9a 81       	ldd	r25, Y+2	; 0x02
    2b18:	68 85       	ldd	r22, Y+8	; 0x08
    2b1a:	4e d1       	rcall	.+668    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b1c:	68 2f       	mov	r22, r24
    2b1e:	87 ee       	ldi	r24, 0xE7	; 231
    2b20:	93 e0       	ldi	r25, 0x03	; 3
    2b22:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b26:	89 81       	ldd	r24, Y+1	; 0x01
    2b28:	9a 81       	ldd	r25, Y+2	; 0x02
    2b2a:	6f 81       	ldd	r22, Y+7	; 0x07
    2b2c:	45 d1       	rcall	.+650    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b2e:	68 2f       	mov	r22, r24
    2b30:	87 ee       	ldi	r24, 0xE7	; 231
    2b32:	93 e0       	ldi	r25, 0x03	; 3
    2b34:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b38:	6b 81       	ldd	r22, Y+3	; 0x03
    2b3a:	7c 81       	ldd	r23, Y+4	; 0x04
    2b3c:	89 81       	ldd	r24, Y+1	; 0x01
    2b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b40:	2e 81       	ldd	r18, Y+6	; 0x06
    2b42:	4d 81       	ldd	r20, Y+5	; 0x05
    2b44:	a5 d2       	rcall	.+1354   	; 0x3090 <_ZN6DS32313dowEjhh>
    2b46:	28 2f       	mov	r18, r24
    2b48:	89 81       	ldd	r24, Y+1	; 0x01
    2b4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b4c:	62 2f       	mov	r22, r18
    2b4e:	34 d1       	rcall	.+616    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b50:	68 2f       	mov	r22, r24
    2b52:	87 ee       	ldi	r24, 0xE7	; 231
    2b54:	93 e0       	ldi	r25, 0x03	; 3
    2b56:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b5a:	89 81       	ldd	r24, Y+1	; 0x01
    2b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b5e:	6e 81       	ldd	r22, Y+6	; 0x06
    2b60:	2b d1       	rcall	.+598    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b62:	68 2f       	mov	r22, r24
    2b64:	87 ee       	ldi	r24, 0xE7	; 231
    2b66:	93 e0       	ldi	r25, 0x03	; 3
    2b68:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b6c:	89 81       	ldd	r24, Y+1	; 0x01
    2b6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b70:	6d 81       	ldd	r22, Y+5	; 0x05
    2b72:	22 d1       	rcall	.+580    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b74:	68 2f       	mov	r22, r24
    2b76:	87 ee       	ldi	r24, 0xE7	; 231
    2b78:	93 e0       	ldi	r25, 0x03	; 3
    2b7a:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b80:	20 e3       	ldi	r18, 0x30	; 48
    2b82:	28 0f       	add	r18, r24
    2b84:	89 81       	ldd	r24, Y+1	; 0x01
    2b86:	9a 81       	ldd	r25, Y+2	; 0x02
    2b88:	62 2f       	mov	r22, r18
    2b8a:	16 d1       	rcall	.+556    	; 0x2db8 <_ZN6DS32317dec2bcdEh>
    2b8c:	68 2f       	mov	r22, r24
    2b8e:	87 ee       	ldi	r24, 0xE7	; 231
    2b90:	93 e0       	ldi	r25, 0x03	; 3
    2b92:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    2b96:	60 e0       	ldi	r22, 0x00	; 0
    2b98:	70 e0       	ldi	r23, 0x00	; 0
    2b9a:	87 ee       	ldi	r24, 0xE7	; 231
    2b9c:	93 e0       	ldi	r25, 0x03	; 3
    2b9e:	2d df       	rcall	.-422    	; 0x29fa <_ZN7TwoWire5writeEi>
    2ba0:	87 ee       	ldi	r24, 0xE7	; 231
    2ba2:	93 e0       	ldi	r25, 0x03	; 3
    2ba4:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    2ba8:	00 00       	nop
    2baa:	29 96       	adiw	r28, 0x09	; 9
    2bac:	0f b6       	in	r0, 0x3f	; 63
    2bae:	f8 94       	cli
    2bb0:	de bf       	out	0x3e, r29	; 62
    2bb2:	0f be       	out	0x3f, r0	; 63
    2bb4:	cd bf       	out	0x3d, r28	; 61
    2bb6:	df 91       	pop	r29
    2bb8:	cf 91       	pop	r28
    2bba:	0f 91       	pop	r16
    2bbc:	ef 90       	pop	r14
    2bbe:	cf 90       	pop	r12
    2bc0:	08 95       	ret

00002bc2 <_ZN6DS323111getDateTimeEv>:
    2bc2:	cf 93       	push	r28
    2bc4:	df 93       	push	r29
    2bc6:	cd b7       	in	r28, 0x3d	; 61
    2bc8:	de b7       	in	r29, 0x3e	; 62
    2bca:	64 97       	sbiw	r28, 0x14	; 20
    2bcc:	0f b6       	in	r0, 0x3f	; 63
    2bce:	f8 94       	cli
    2bd0:	de bf       	out	0x3e, r29	; 62
    2bd2:	0f be       	out	0x3f, r0	; 63
    2bd4:	cd bf       	out	0x3d, r28	; 61
    2bd6:	9a 8b       	std	Y+18, r25	; 0x12
    2bd8:	89 8b       	std	Y+17, r24	; 0x11
    2bda:	7c 8b       	std	Y+20, r23	; 0x14
    2bdc:	6b 8b       	std	Y+19, r22	; 0x13
    2bde:	68 e6       	ldi	r22, 0x68	; 104
    2be0:	70 e0       	ldi	r23, 0x00	; 0
    2be2:	87 ee       	ldi	r24, 0xE7	; 231
    2be4:	93 e0       	ldi	r25, 0x03	; 3
    2be6:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    2bea:	60 e0       	ldi	r22, 0x00	; 0
    2bec:	70 e0       	ldi	r23, 0x00	; 0
    2bee:	87 ee       	ldi	r24, 0xE7	; 231
    2bf0:	93 e0       	ldi	r25, 0x03	; 3
    2bf2:	03 df       	rcall	.-506    	; 0x29fa <_ZN7TwoWire5writeEi>
    2bf4:	87 ee       	ldi	r24, 0xE7	; 231
    2bf6:	93 e0       	ldi	r25, 0x03	; 3
    2bf8:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    2bfc:	47 e0       	ldi	r20, 0x07	; 7
    2bfe:	50 e0       	ldi	r21, 0x00	; 0
    2c00:	68 e6       	ldi	r22, 0x68	; 104
    2c02:	70 e0       	ldi	r23, 0x00	; 0
    2c04:	87 ee       	ldi	r24, 0xE7	; 231
    2c06:	93 e0       	ldi	r25, 0x03	; 3
    2c08:	0e 94 5c 3d 	call	0x7ab8	; 0x7ab8 <_ZN7TwoWire11requestFromEii>
    2c0c:	87 ee       	ldi	r24, 0xE7	; 231
    2c0e:	93 e0       	ldi	r25, 0x03	; 3
    2c10:	0e 94 5c 3e 	call	0x7cb8	; 0x7cb8 <_ZN7TwoWire9availableEv>
    2c14:	21 e0       	ldi	r18, 0x01	; 1
    2c16:	89 2b       	or	r24, r25
    2c18:	09 f0       	breq	.+2      	; 0x2c1c <_ZN6DS323111getDateTimeEv+0x5a>
    2c1a:	20 e0       	ldi	r18, 0x00	; 0
    2c1c:	22 23       	and	r18, r18
    2c1e:	09 f0       	breq	.+2      	; 0x2c22 <_ZN6DS323111getDateTimeEv+0x60>
    2c20:	f5 cf       	rjmp	.-22     	; 0x2c0c <_ZN6DS323111getDateTimeEv+0x4a>
    2c22:	86 e0       	ldi	r24, 0x06	; 6
    2c24:	90 e0       	ldi	r25, 0x00	; 0
    2c26:	9a 83       	std	Y+2, r25	; 0x02
    2c28:	89 83       	std	Y+1, r24	; 0x01
    2c2a:	89 81       	ldd	r24, Y+1	; 0x01
    2c2c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c2e:	99 23       	and	r25, r25
    2c30:	f4 f0       	brlt	.+60     	; 0x2c6e <_ZN6DS323111getDateTimeEv+0xac>
    2c32:	87 ee       	ldi	r24, 0xE7	; 231
    2c34:	93 e0       	ldi	r25, 0x03	; 3
    2c36:	0e 94 75 3e 	call	0x7cea	; 0x7cea <_ZN7TwoWire4readEv>
    2c3a:	28 2f       	mov	r18, r24
    2c3c:	8b 89       	ldd	r24, Y+19	; 0x13
    2c3e:	9c 89       	ldd	r25, Y+20	; 0x14
    2c40:	62 2f       	mov	r22, r18
    2c42:	a1 d0       	rcall	.+322    	; 0x2d86 <_ZN6DS32317bcd2decEh>
    2c44:	28 2f       	mov	r18, r24
    2c46:	30 e0       	ldi	r19, 0x00	; 0
    2c48:	89 81       	ldd	r24, Y+1	; 0x01
    2c4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c4c:	88 0f       	add	r24, r24
    2c4e:	99 1f       	adc	r25, r25
    2c50:	ae 01       	movw	r20, r28
    2c52:	4f 5f       	subi	r20, 0xFF	; 255
    2c54:	5f 4f       	sbci	r21, 0xFF	; 255
    2c56:	84 0f       	add	r24, r20
    2c58:	95 1f       	adc	r25, r21
    2c5a:	02 96       	adiw	r24, 0x02	; 2
    2c5c:	fc 01       	movw	r30, r24
    2c5e:	31 83       	std	Z+1, r19	; 0x01
    2c60:	20 83       	st	Z, r18
    2c62:	89 81       	ldd	r24, Y+1	; 0x01
    2c64:	9a 81       	ldd	r25, Y+2	; 0x02
    2c66:	01 97       	sbiw	r24, 0x01	; 1
    2c68:	9a 83       	std	Y+2, r25	; 0x02
    2c6a:	89 83       	std	Y+1, r24	; 0x01
    2c6c:	de cf       	rjmp	.-68     	; 0x2c2a <_ZN6DS323111getDateTimeEv+0x68>
    2c6e:	87 ee       	ldi	r24, 0xE7	; 231
    2c70:	93 e0       	ldi	r25, 0x03	; 3
    2c72:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    2c76:	8b 81       	ldd	r24, Y+3	; 0x03
    2c78:	9c 81       	ldd	r25, Y+4	; 0x04
    2c7a:	80 53       	subi	r24, 0x30	; 48
    2c7c:	98 4f       	sbci	r25, 0xF8	; 248
    2c7e:	9c 01       	movw	r18, r24
    2c80:	8b 89       	ldd	r24, Y+19	; 0x13
    2c82:	9c 89       	ldd	r25, Y+20	; 0x14
    2c84:	fc 01       	movw	r30, r24
    2c86:	31 83       	std	Z+1, r19	; 0x01
    2c88:	20 83       	st	Z, r18
    2c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    2c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    2c8e:	28 2f       	mov	r18, r24
    2c90:	8b 89       	ldd	r24, Y+19	; 0x13
    2c92:	9c 89       	ldd	r25, Y+20	; 0x14
    2c94:	fc 01       	movw	r30, r24
    2c96:	22 83       	std	Z+2, r18	; 0x02
    2c98:	8f 81       	ldd	r24, Y+7	; 0x07
    2c9a:	98 85       	ldd	r25, Y+8	; 0x08
    2c9c:	28 2f       	mov	r18, r24
    2c9e:	8b 89       	ldd	r24, Y+19	; 0x13
    2ca0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ca2:	fc 01       	movw	r30, r24
    2ca4:	23 83       	std	Z+3, r18	; 0x03
    2ca6:	89 85       	ldd	r24, Y+9	; 0x09
    2ca8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2caa:	28 2f       	mov	r18, r24
    2cac:	8b 89       	ldd	r24, Y+19	; 0x13
    2cae:	9c 89       	ldd	r25, Y+20	; 0x14
    2cb0:	fc 01       	movw	r30, r24
    2cb2:	27 83       	std	Z+7, r18	; 0x07
    2cb4:	8b 85       	ldd	r24, Y+11	; 0x0b
    2cb6:	9c 85       	ldd	r25, Y+12	; 0x0c
    2cb8:	28 2f       	mov	r18, r24
    2cba:	8b 89       	ldd	r24, Y+19	; 0x13
    2cbc:	9c 89       	ldd	r25, Y+20	; 0x14
    2cbe:	fc 01       	movw	r30, r24
    2cc0:	24 83       	std	Z+4, r18	; 0x04
    2cc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cc6:	28 2f       	mov	r18, r24
    2cc8:	8b 89       	ldd	r24, Y+19	; 0x13
    2cca:	9c 89       	ldd	r25, Y+20	; 0x14
    2ccc:	fc 01       	movw	r30, r24
    2cce:	25 83       	std	Z+5, r18	; 0x05
    2cd0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2cd2:	98 89       	ldd	r25, Y+16	; 0x10
    2cd4:	28 2f       	mov	r18, r24
    2cd6:	8b 89       	ldd	r24, Y+19	; 0x13
    2cd8:	9c 89       	ldd	r25, Y+20	; 0x14
    2cda:	fc 01       	movw	r30, r24
    2cdc:	26 83       	std	Z+6, r18	; 0x06
    2cde:	8b 89       	ldd	r24, Y+19	; 0x13
    2ce0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ce2:	84 d1       	rcall	.+776    	; 0x2fec <_ZN6DS32318unixtimeEv>
    2ce4:	dc 01       	movw	r26, r24
    2ce6:	cb 01       	movw	r24, r22
    2ce8:	2b 89       	ldd	r18, Y+19	; 0x13
    2cea:	3c 89       	ldd	r19, Y+20	; 0x14
    2cec:	f9 01       	movw	r30, r18
    2cee:	80 87       	std	Z+8, r24	; 0x08
    2cf0:	91 87       	std	Z+9, r25	; 0x09
    2cf2:	a2 87       	std	Z+10, r26	; 0x0a
    2cf4:	b3 87       	std	Z+11, r27	; 0x0b
    2cf6:	89 89       	ldd	r24, Y+17	; 0x11
    2cf8:	9a 89       	ldd	r25, Y+18	; 0x12
    2cfa:	2b 89       	ldd	r18, Y+19	; 0x13
    2cfc:	3c 89       	ldd	r19, Y+20	; 0x14
    2cfe:	4c e0       	ldi	r20, 0x0C	; 12
    2d00:	f9 01       	movw	r30, r18
    2d02:	dc 01       	movw	r26, r24
    2d04:	01 90       	ld	r0, Z+
    2d06:	0d 92       	st	X+, r0
    2d08:	4a 95       	dec	r20
    2d0a:	e1 f7       	brne	.-8      	; 0x2d04 <_ZN6DS323111getDateTimeEv+0x142>
    2d0c:	89 89       	ldd	r24, Y+17	; 0x11
    2d0e:	9a 89       	ldd	r25, Y+18	; 0x12
    2d10:	64 96       	adiw	r28, 0x14	; 20
    2d12:	0f b6       	in	r0, 0x3f	; 63
    2d14:	f8 94       	cli
    2d16:	de bf       	out	0x3e, r29	; 62
    2d18:	0f be       	out	0x3f, r0	; 63
    2d1a:	cd bf       	out	0x3d, r28	; 61
    2d1c:	df 91       	pop	r29
    2d1e:	cf 91       	pop	r28
    2d20:	08 95       	ret

00002d22 <_ZN6DS323110setBatteryEbb>:
    2d22:	cf 93       	push	r28
    2d24:	df 93       	push	r29
    2d26:	00 d0       	rcall	.+0      	; 0x2d28 <_ZN6DS323110setBatteryEbb+0x6>
    2d28:	1f 92       	push	r1
    2d2a:	1f 92       	push	r1
    2d2c:	cd b7       	in	r28, 0x3d	; 61
    2d2e:	de b7       	in	r29, 0x3e	; 62
    2d30:	9b 83       	std	Y+3, r25	; 0x03
    2d32:	8a 83       	std	Y+2, r24	; 0x02
    2d34:	6c 83       	std	Y+4, r22	; 0x04
    2d36:	4d 83       	std	Y+5, r20	; 0x05
    2d38:	8a 81       	ldd	r24, Y+2	; 0x02
    2d3a:	9b 81       	ldd	r25, Y+3	; 0x03
    2d3c:	6e e0       	ldi	r22, 0x0E	; 14
    2d3e:	5d d2       	rcall	.+1210   	; 0x31fa <_ZN6DS323113readRegister8Eh>
    2d40:	89 83       	std	Y+1, r24	; 0x01
    2d42:	8d 81       	ldd	r24, Y+5	; 0x05
    2d44:	88 23       	and	r24, r24
    2d46:	21 f0       	breq	.+8      	; 0x2d50 <_ZN6DS323110setBatteryEbb+0x2e>
    2d48:	89 81       	ldd	r24, Y+1	; 0x01
    2d4a:	80 64       	ori	r24, 0x40	; 64
    2d4c:	89 83       	std	Y+1, r24	; 0x01
    2d4e:	03 c0       	rjmp	.+6      	; 0x2d56 <_ZN6DS323110setBatteryEbb+0x34>
    2d50:	89 81       	ldd	r24, Y+1	; 0x01
    2d52:	8f 7b       	andi	r24, 0xBF	; 191
    2d54:	89 83       	std	Y+1, r24	; 0x01
    2d56:	8c 81       	ldd	r24, Y+4	; 0x04
    2d58:	88 23       	and	r24, r24
    2d5a:	21 f0       	breq	.+8      	; 0x2d64 <_ZN6DS323110setBatteryEbb+0x42>
    2d5c:	89 81       	ldd	r24, Y+1	; 0x01
    2d5e:	8b 77       	andi	r24, 0x7B	; 123
    2d60:	89 83       	std	Y+1, r24	; 0x01
    2d62:	03 c0       	rjmp	.+6      	; 0x2d6a <_ZN6DS323110setBatteryEbb+0x48>
    2d64:	89 81       	ldd	r24, Y+1	; 0x01
    2d66:	80 68       	ori	r24, 0x80	; 128
    2d68:	89 83       	std	Y+1, r24	; 0x01
    2d6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6c:	9b 81       	ldd	r25, Y+3	; 0x03
    2d6e:	49 81       	ldd	r20, Y+1	; 0x01
    2d70:	6e e0       	ldi	r22, 0x0E	; 14
    2d72:	1d d2       	rcall	.+1082   	; 0x31ae <_ZN6DS323114writeRegister8Ehh>
    2d74:	00 00       	nop
    2d76:	0f 90       	pop	r0
    2d78:	0f 90       	pop	r0
    2d7a:	0f 90       	pop	r0
    2d7c:	0f 90       	pop	r0
    2d7e:	0f 90       	pop	r0
    2d80:	df 91       	pop	r29
    2d82:	cf 91       	pop	r28
    2d84:	08 95       	ret

00002d86 <_ZN6DS32317bcd2decEh>:
    2d86:	cf 93       	push	r28
    2d88:	df 93       	push	r29
    2d8a:	00 d0       	rcall	.+0      	; 0x2d8c <_ZN6DS32317bcd2decEh+0x6>
    2d8c:	cd b7       	in	r28, 0x3d	; 61
    2d8e:	de b7       	in	r29, 0x3e	; 62
    2d90:	9a 83       	std	Y+2, r25	; 0x02
    2d92:	89 83       	std	Y+1, r24	; 0x01
    2d94:	6b 83       	std	Y+3, r22	; 0x03
    2d96:	8b 81       	ldd	r24, Y+3	; 0x03
    2d98:	82 95       	swap	r24
    2d9a:	8f 70       	andi	r24, 0x0F	; 15
    2d9c:	88 0f       	add	r24, r24
    2d9e:	98 2f       	mov	r25, r24
    2da0:	99 0f       	add	r25, r25
    2da2:	99 0f       	add	r25, r25
    2da4:	98 0f       	add	r25, r24
    2da6:	8b 81       	ldd	r24, Y+3	; 0x03
    2da8:	8f 70       	andi	r24, 0x0F	; 15
    2daa:	89 0f       	add	r24, r25
    2dac:	0f 90       	pop	r0
    2dae:	0f 90       	pop	r0
    2db0:	0f 90       	pop	r0
    2db2:	df 91       	pop	r29
    2db4:	cf 91       	pop	r28
    2db6:	08 95       	ret

00002db8 <_ZN6DS32317dec2bcdEh>:
    2db8:	cf 93       	push	r28
    2dba:	df 93       	push	r29
    2dbc:	00 d0       	rcall	.+0      	; 0x2dbe <_ZN6DS32317dec2bcdEh+0x6>
    2dbe:	cd b7       	in	r28, 0x3d	; 61
    2dc0:	de b7       	in	r29, 0x3e	; 62
    2dc2:	9a 83       	std	Y+2, r25	; 0x02
    2dc4:	89 83       	std	Y+1, r24	; 0x01
    2dc6:	6b 83       	std	Y+3, r22	; 0x03
    2dc8:	9b 81       	ldd	r25, Y+3	; 0x03
    2dca:	8d ec       	ldi	r24, 0xCD	; 205
    2dcc:	98 9f       	mul	r25, r24
    2dce:	81 2d       	mov	r24, r1
    2dd0:	11 24       	eor	r1, r1
    2dd2:	86 95       	lsr	r24
    2dd4:	86 95       	lsr	r24
    2dd6:	86 95       	lsr	r24
    2dd8:	28 2f       	mov	r18, r24
    2dda:	22 95       	swap	r18
    2ddc:	20 7f       	andi	r18, 0xF0	; 240
    2dde:	9b 81       	ldd	r25, Y+3	; 0x03
    2de0:	8d ec       	ldi	r24, 0xCD	; 205
    2de2:	98 9f       	mul	r25, r24
    2de4:	81 2d       	mov	r24, r1
    2de6:	11 24       	eor	r1, r1
    2de8:	86 95       	lsr	r24
    2dea:	86 95       	lsr	r24
    2dec:	86 95       	lsr	r24
    2dee:	88 0f       	add	r24, r24
    2df0:	38 2f       	mov	r19, r24
    2df2:	33 0f       	add	r19, r19
    2df4:	33 0f       	add	r19, r19
    2df6:	83 0f       	add	r24, r19
    2df8:	39 2f       	mov	r19, r25
    2dfa:	38 1b       	sub	r19, r24
    2dfc:	83 2f       	mov	r24, r19
    2dfe:	82 0f       	add	r24, r18
    2e00:	0f 90       	pop	r0
    2e02:	0f 90       	pop	r0
    2e04:	0f 90       	pop	r0
    2e06:	df 91       	pop	r29
    2e08:	cf 91       	pop	r28
    2e0a:	08 95       	ret

00002e0c <_ZN6DS32319time2longEjhhh>:
    2e0c:	0f 93       	push	r16
    2e0e:	cf 93       	push	r28
    2e10:	df 93       	push	r29
    2e12:	cd b7       	in	r28, 0x3d	; 61
    2e14:	de b7       	in	r29, 0x3e	; 62
    2e16:	27 97       	sbiw	r28, 0x07	; 7
    2e18:	0f b6       	in	r0, 0x3f	; 63
    2e1a:	f8 94       	cli
    2e1c:	de bf       	out	0x3e, r29	; 62
    2e1e:	0f be       	out	0x3f, r0	; 63
    2e20:	cd bf       	out	0x3d, r28	; 61
    2e22:	9a 83       	std	Y+2, r25	; 0x02
    2e24:	89 83       	std	Y+1, r24	; 0x01
    2e26:	7c 83       	std	Y+4, r23	; 0x04
    2e28:	6b 83       	std	Y+3, r22	; 0x03
    2e2a:	4d 83       	std	Y+5, r20	; 0x05
    2e2c:	2e 83       	std	Y+6, r18	; 0x06
    2e2e:	0f 83       	std	Y+7, r16	; 0x07
    2e30:	8b 81       	ldd	r24, Y+3	; 0x03
    2e32:	9c 81       	ldd	r25, Y+4	; 0x04
    2e34:	9c 01       	movw	r18, r24
    2e36:	40 e0       	ldi	r20, 0x00	; 0
    2e38:	50 e0       	ldi	r21, 0x00	; 0
    2e3a:	da 01       	movw	r26, r20
    2e3c:	c9 01       	movw	r24, r18
    2e3e:	88 0f       	add	r24, r24
    2e40:	99 1f       	adc	r25, r25
    2e42:	aa 1f       	adc	r26, r26
    2e44:	bb 1f       	adc	r27, r27
    2e46:	82 0f       	add	r24, r18
    2e48:	93 1f       	adc	r25, r19
    2e4a:	a4 1f       	adc	r26, r20
    2e4c:	b5 1f       	adc	r27, r21
    2e4e:	88 0f       	add	r24, r24
    2e50:	99 1f       	adc	r25, r25
    2e52:	aa 1f       	adc	r26, r26
    2e54:	bb 1f       	adc	r27, r27
    2e56:	88 0f       	add	r24, r24
    2e58:	99 1f       	adc	r25, r25
    2e5a:	aa 1f       	adc	r26, r26
    2e5c:	bb 1f       	adc	r27, r27
    2e5e:	88 0f       	add	r24, r24
    2e60:	99 1f       	adc	r25, r25
    2e62:	aa 1f       	adc	r26, r26
    2e64:	bb 1f       	adc	r27, r27
    2e66:	9c 01       	movw	r18, r24
    2e68:	ad 01       	movw	r20, r26
    2e6a:	8d 81       	ldd	r24, Y+5	; 0x05
    2e6c:	88 2f       	mov	r24, r24
    2e6e:	90 e0       	ldi	r25, 0x00	; 0
    2e70:	a0 e0       	ldi	r26, 0x00	; 0
    2e72:	b0 e0       	ldi	r27, 0x00	; 0
    2e74:	28 0f       	add	r18, r24
    2e76:	39 1f       	adc	r19, r25
    2e78:	4a 1f       	adc	r20, r26
    2e7a:	5b 1f       	adc	r21, r27
    2e7c:	8c e3       	ldi	r24, 0x3C	; 60
    2e7e:	90 e0       	ldi	r25, 0x00	; 0
    2e80:	dc 01       	movw	r26, r24
    2e82:	0e 94 72 4c 	call	0x98e4	; 0x98e4 <__muluhisi3>
    2e86:	9b 01       	movw	r18, r22
    2e88:	ac 01       	movw	r20, r24
    2e8a:	8e 81       	ldd	r24, Y+6	; 0x06
    2e8c:	88 2f       	mov	r24, r24
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	a0 e0       	ldi	r26, 0x00	; 0
    2e92:	b0 e0       	ldi	r27, 0x00	; 0
    2e94:	28 0f       	add	r18, r24
    2e96:	39 1f       	adc	r19, r25
    2e98:	4a 1f       	adc	r20, r26
    2e9a:	5b 1f       	adc	r21, r27
    2e9c:	8c e3       	ldi	r24, 0x3C	; 60
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	dc 01       	movw	r26, r24
    2ea2:	0e 94 72 4c 	call	0x98e4	; 0x98e4 <__muluhisi3>
    2ea6:	9b 01       	movw	r18, r22
    2ea8:	ac 01       	movw	r20, r24
    2eaa:	8f 81       	ldd	r24, Y+7	; 0x07
    2eac:	88 2f       	mov	r24, r24
    2eae:	90 e0       	ldi	r25, 0x00	; 0
    2eb0:	a0 e0       	ldi	r26, 0x00	; 0
    2eb2:	b0 e0       	ldi	r27, 0x00	; 0
    2eb4:	82 0f       	add	r24, r18
    2eb6:	93 1f       	adc	r25, r19
    2eb8:	a4 1f       	adc	r26, r20
    2eba:	b5 1f       	adc	r27, r21
    2ebc:	bc 01       	movw	r22, r24
    2ebe:	cd 01       	movw	r24, r26
    2ec0:	27 96       	adiw	r28, 0x07	; 7
    2ec2:	0f b6       	in	r0, 0x3f	; 63
    2ec4:	f8 94       	cli
    2ec6:	de bf       	out	0x3e, r29	; 62
    2ec8:	0f be       	out	0x3f, r0	; 63
    2eca:	cd bf       	out	0x3d, r28	; 61
    2ecc:	df 91       	pop	r29
    2ece:	cf 91       	pop	r28
    2ed0:	0f 91       	pop	r16
    2ed2:	08 95       	ret

00002ed4 <_ZN6DS323110isLeapYearEj>:
    2ed4:	cf 93       	push	r28
    2ed6:	df 93       	push	r29
    2ed8:	00 d0       	rcall	.+0      	; 0x2eda <_ZN6DS323110isLeapYearEj+0x6>
    2eda:	1f 92       	push	r1
    2edc:	cd b7       	in	r28, 0x3d	; 61
    2ede:	de b7       	in	r29, 0x3e	; 62
    2ee0:	9a 83       	std	Y+2, r25	; 0x02
    2ee2:	89 83       	std	Y+1, r24	; 0x01
    2ee4:	7c 83       	std	Y+4, r23	; 0x04
    2ee6:	6b 83       	std	Y+3, r22	; 0x03
    2ee8:	8b 81       	ldd	r24, Y+3	; 0x03
    2eea:	9c 81       	ldd	r25, Y+4	; 0x04
    2eec:	83 70       	andi	r24, 0x03	; 3
    2eee:	99 27       	eor	r25, r25
    2ef0:	21 e0       	ldi	r18, 0x01	; 1
    2ef2:	89 2b       	or	r24, r25
    2ef4:	09 f0       	breq	.+2      	; 0x2ef8 <_ZN6DS323110isLeapYearEj+0x24>
    2ef6:	20 e0       	ldi	r18, 0x00	; 0
    2ef8:	82 2f       	mov	r24, r18
    2efa:	0f 90       	pop	r0
    2efc:	0f 90       	pop	r0
    2efe:	0f 90       	pop	r0
    2f00:	0f 90       	pop	r0
    2f02:	df 91       	pop	r29
    2f04:	cf 91       	pop	r28
    2f06:	08 95       	ret

00002f08 <_ZN6DS32319date2daysEjhh>:
    2f08:	cf 93       	push	r28
    2f0a:	df 93       	push	r29
    2f0c:	cd b7       	in	r28, 0x3d	; 61
    2f0e:	de b7       	in	r29, 0x3e	; 62
    2f10:	2c 97       	sbiw	r28, 0x0c	; 12
    2f12:	0f b6       	in	r0, 0x3f	; 63
    2f14:	f8 94       	cli
    2f16:	de bf       	out	0x3e, r29	; 62
    2f18:	0f be       	out	0x3f, r0	; 63
    2f1a:	cd bf       	out	0x3d, r28	; 61
    2f1c:	98 87       	std	Y+8, r25	; 0x08
    2f1e:	8f 83       	std	Y+7, r24	; 0x07
    2f20:	7a 87       	std	Y+10, r23	; 0x0a
    2f22:	69 87       	std	Y+9, r22	; 0x09
    2f24:	4b 87       	std	Y+11, r20	; 0x0b
    2f26:	2c 87       	std	Y+12, r18	; 0x0c
    2f28:	89 85       	ldd	r24, Y+9	; 0x09
    2f2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f2c:	80 5d       	subi	r24, 0xD0	; 208
    2f2e:	97 40       	sbci	r25, 0x07	; 7
    2f30:	9a 87       	std	Y+10, r25	; 0x0a
    2f32:	89 87       	std	Y+9, r24	; 0x09
    2f34:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f36:	88 2f       	mov	r24, r24
    2f38:	90 e0       	ldi	r25, 0x00	; 0
    2f3a:	9a 83       	std	Y+2, r25	; 0x02
    2f3c:	89 83       	std	Y+1, r24	; 0x01
    2f3e:	81 e0       	ldi	r24, 0x01	; 1
    2f40:	8b 83       	std	Y+3, r24	; 0x03
    2f42:	9b 81       	ldd	r25, Y+3	; 0x03
    2f44:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f46:	98 17       	cp	r25, r24
    2f48:	d0 f4       	brcc	.+52     	; 0x2f7e <_ZN6DS32319date2daysEjhh+0x76>
    2f4a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f4c:	88 2f       	mov	r24, r24
    2f4e:	90 e0       	ldi	r25, 0x00	; 0
    2f50:	01 97       	sbiw	r24, 0x01	; 1
    2f52:	88 53       	subi	r24, 0x38	; 56
    2f54:	9c 4f       	sbci	r25, 0xFC	; 252
    2f56:	9d 83       	std	Y+5, r25	; 0x05
    2f58:	8c 83       	std	Y+4, r24	; 0x04
    2f5a:	8c 81       	ldd	r24, Y+4	; 0x04
    2f5c:	9d 81       	ldd	r25, Y+5	; 0x05
    2f5e:	fc 01       	movw	r30, r24
    2f60:	84 91       	lpm	r24, Z
    2f62:	8e 83       	std	Y+6, r24	; 0x06
    2f64:	8e 81       	ldd	r24, Y+6	; 0x06
    2f66:	88 2f       	mov	r24, r24
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	29 81       	ldd	r18, Y+1	; 0x01
    2f6c:	3a 81       	ldd	r19, Y+2	; 0x02
    2f6e:	82 0f       	add	r24, r18
    2f70:	93 1f       	adc	r25, r19
    2f72:	9a 83       	std	Y+2, r25	; 0x02
    2f74:	89 83       	std	Y+1, r24	; 0x01
    2f76:	8b 81       	ldd	r24, Y+3	; 0x03
    2f78:	8f 5f       	subi	r24, 0xFF	; 255
    2f7a:	8b 83       	std	Y+3, r24	; 0x03
    2f7c:	e2 cf       	rjmp	.-60     	; 0x2f42 <_ZN6DS32319date2daysEjhh+0x3a>
    2f7e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f80:	82 30       	cpi	r24, 0x02	; 2
    2f82:	51 f4       	brne	.+20     	; 0x2f98 <_ZN6DS32319date2daysEjhh+0x90>
    2f84:	29 85       	ldd	r18, Y+9	; 0x09
    2f86:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f88:	8f 81       	ldd	r24, Y+7	; 0x07
    2f8a:	98 85       	ldd	r25, Y+8	; 0x08
    2f8c:	b9 01       	movw	r22, r18
    2f8e:	a2 df       	rcall	.-188    	; 0x2ed4 <_ZN6DS323110isLeapYearEj>
    2f90:	88 23       	and	r24, r24
    2f92:	11 f0       	breq	.+4      	; 0x2f98 <_ZN6DS32319date2daysEjhh+0x90>
    2f94:	81 e0       	ldi	r24, 0x01	; 1
    2f96:	01 c0       	rjmp	.+2      	; 0x2f9a <_ZN6DS32319date2daysEjhh+0x92>
    2f98:	80 e0       	ldi	r24, 0x00	; 0
    2f9a:	88 23       	and	r24, r24
    2f9c:	29 f0       	breq	.+10     	; 0x2fa8 <_ZN6DS32319date2daysEjhh+0xa0>
    2f9e:	89 81       	ldd	r24, Y+1	; 0x01
    2fa0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa2:	01 96       	adiw	r24, 0x01	; 1
    2fa4:	9a 83       	std	Y+2, r25	; 0x02
    2fa6:	89 83       	std	Y+1, r24	; 0x01
    2fa8:	49 85       	ldd	r20, Y+9	; 0x09
    2faa:	5a 85       	ldd	r21, Y+10	; 0x0a
    2fac:	8d e6       	ldi	r24, 0x6D	; 109
    2fae:	91 e0       	ldi	r25, 0x01	; 1
    2fb0:	48 9f       	mul	r20, r24
    2fb2:	90 01       	movw	r18, r0
    2fb4:	49 9f       	mul	r20, r25
    2fb6:	30 0d       	add	r19, r0
    2fb8:	58 9f       	mul	r21, r24
    2fba:	30 0d       	add	r19, r0
    2fbc:	11 24       	eor	r1, r1
    2fbe:	89 81       	ldd	r24, Y+1	; 0x01
    2fc0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fc2:	28 0f       	add	r18, r24
    2fc4:	39 1f       	adc	r19, r25
    2fc6:	89 85       	ldd	r24, Y+9	; 0x09
    2fc8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fca:	03 96       	adiw	r24, 0x03	; 3
    2fcc:	96 95       	lsr	r25
    2fce:	87 95       	ror	r24
    2fd0:	96 95       	lsr	r25
    2fd2:	87 95       	ror	r24
    2fd4:	82 0f       	add	r24, r18
    2fd6:	93 1f       	adc	r25, r19
    2fd8:	01 97       	sbiw	r24, 0x01	; 1
    2fda:	2c 96       	adiw	r28, 0x0c	; 12
    2fdc:	0f b6       	in	r0, 0x3f	; 63
    2fde:	f8 94       	cli
    2fe0:	de bf       	out	0x3e, r29	; 62
    2fe2:	0f be       	out	0x3f, r0	; 63
    2fe4:	cd bf       	out	0x3d, r28	; 61
    2fe6:	df 91       	pop	r29
    2fe8:	cf 91       	pop	r28
    2fea:	08 95       	ret

00002fec <_ZN6DS32318unixtimeEv>:
    2fec:	ff 92       	push	r15
    2fee:	0f 93       	push	r16
    2ff0:	1f 93       	push	r17
    2ff2:	cf 93       	push	r28
    2ff4:	df 93       	push	r29
    2ff6:	00 d0       	rcall	.+0      	; 0x2ff8 <_ZN6DS32318unixtimeEv+0xc>
    2ff8:	00 d0       	rcall	.+0      	; 0x2ffa <_ZN6DS32318unixtimeEv+0xe>
    2ffa:	cd b7       	in	r28, 0x3d	; 61
    2ffc:	de b7       	in	r29, 0x3e	; 62
    2ffe:	9e 83       	std	Y+6, r25	; 0x06
    3000:	8d 83       	std	Y+5, r24	; 0x05
    3002:	8d 81       	ldd	r24, Y+5	; 0x05
    3004:	9e 81       	ldd	r25, Y+6	; 0x06
    3006:	fc 01       	movw	r30, r24
    3008:	06 81       	ldd	r16, Z+6	; 0x06
    300a:	8d 81       	ldd	r24, Y+5	; 0x05
    300c:	9e 81       	ldd	r25, Y+6	; 0x06
    300e:	fc 01       	movw	r30, r24
    3010:	f5 80       	ldd	r15, Z+5	; 0x05
    3012:	8d 81       	ldd	r24, Y+5	; 0x05
    3014:	9e 81       	ldd	r25, Y+6	; 0x06
    3016:	fc 01       	movw	r30, r24
    3018:	14 81       	ldd	r17, Z+4	; 0x04
    301a:	8d 81       	ldd	r24, Y+5	; 0x05
    301c:	9e 81       	ldd	r25, Y+6	; 0x06
    301e:	fc 01       	movw	r30, r24
    3020:	23 81       	ldd	r18, Z+3	; 0x03
    3022:	8d 81       	ldd	r24, Y+5	; 0x05
    3024:	9e 81       	ldd	r25, Y+6	; 0x06
    3026:	fc 01       	movw	r30, r24
    3028:	32 81       	ldd	r19, Z+2	; 0x02
    302a:	8d 81       	ldd	r24, Y+5	; 0x05
    302c:	9e 81       	ldd	r25, Y+6	; 0x06
    302e:	fc 01       	movw	r30, r24
    3030:	60 81       	ld	r22, Z
    3032:	71 81       	ldd	r23, Z+1	; 0x01
    3034:	8d 81       	ldd	r24, Y+5	; 0x05
    3036:	9e 81       	ldd	r25, Y+6	; 0x06
    3038:	43 2f       	mov	r20, r19
    303a:	66 df       	rcall	.-308    	; 0x2f08 <_ZN6DS32319date2daysEjhh>
    303c:	bc 01       	movw	r22, r24
    303e:	8d 81       	ldd	r24, Y+5	; 0x05
    3040:	9e 81       	ldd	r25, Y+6	; 0x06
    3042:	2f 2d       	mov	r18, r15
    3044:	41 2f       	mov	r20, r17
    3046:	e2 de       	rcall	.-572    	; 0x2e0c <_ZN6DS32319time2longEjhhh>
    3048:	dc 01       	movw	r26, r24
    304a:	cb 01       	movw	r24, r22
    304c:	89 83       	std	Y+1, r24	; 0x01
    304e:	9a 83       	std	Y+2, r25	; 0x02
    3050:	ab 83       	std	Y+3, r26	; 0x03
    3052:	bc 83       	std	Y+4, r27	; 0x04
    3054:	89 81       	ldd	r24, Y+1	; 0x01
    3056:	9a 81       	ldd	r25, Y+2	; 0x02
    3058:	ab 81       	ldd	r26, Y+3	; 0x03
    305a:	bc 81       	ldd	r27, Y+4	; 0x04
    305c:	80 59       	subi	r24, 0x90	; 144
    305e:	9a 4c       	sbci	r25, 0xCA	; 202
    3060:	a2 49       	sbci	r26, 0x92	; 146
    3062:	b7 4c       	sbci	r27, 0xC7	; 199
    3064:	89 83       	std	Y+1, r24	; 0x01
    3066:	9a 83       	std	Y+2, r25	; 0x02
    3068:	ab 83       	std	Y+3, r26	; 0x03
    306a:	bc 83       	std	Y+4, r27	; 0x04
    306c:	89 81       	ldd	r24, Y+1	; 0x01
    306e:	9a 81       	ldd	r25, Y+2	; 0x02
    3070:	ab 81       	ldd	r26, Y+3	; 0x03
    3072:	bc 81       	ldd	r27, Y+4	; 0x04
    3074:	bc 01       	movw	r22, r24
    3076:	cd 01       	movw	r24, r26
    3078:	26 96       	adiw	r28, 0x06	; 6
    307a:	0f b6       	in	r0, 0x3f	; 63
    307c:	f8 94       	cli
    307e:	de bf       	out	0x3e, r29	; 62
    3080:	0f be       	out	0x3f, r0	; 63
    3082:	cd bf       	out	0x3d, r28	; 61
    3084:	df 91       	pop	r29
    3086:	cf 91       	pop	r28
    3088:	1f 91       	pop	r17
    308a:	0f 91       	pop	r16
    308c:	ff 90       	pop	r15
    308e:	08 95       	ret

00003090 <_ZN6DS32313dowEjhh>:

uint8_t DS3231::dow(uint16_t y, uint8_t m, uint8_t d)
{
    3090:	cf 93       	push	r28
    3092:	df 93       	push	r29
    3094:	cd b7       	in	r28, 0x3d	; 61
    3096:	de b7       	in	r29, 0x3e	; 62
    3098:	2a 97       	sbiw	r28, 0x0a	; 10
    309a:	0f b6       	in	r0, 0x3f	; 63
    309c:	f8 94       	cli
    309e:	de bf       	out	0x3e, r29	; 62
    30a0:	0f be       	out	0x3f, r0	; 63
    30a2:	cd bf       	out	0x3d, r28	; 61
    30a4:	9e 83       	std	Y+6, r25	; 0x06
    30a6:	8d 83       	std	Y+5, r24	; 0x05
    30a8:	78 87       	std	Y+8, r23	; 0x08
    30aa:	6f 83       	std	Y+7, r22	; 0x07
    30ac:	49 87       	std	Y+9, r20	; 0x09
    30ae:	2a 87       	std	Y+10, r18	; 0x0a
    uint8_t dow;

    y -= m < 3;
    30b0:	81 e0       	ldi	r24, 0x01	; 1
    30b2:	99 85       	ldd	r25, Y+9	; 0x09
    30b4:	93 30       	cpi	r25, 0x03	; 3
    30b6:	08 f0       	brcs	.+2      	; 0x30ba <_ZN6DS32313dowEjhh+0x2a>
    30b8:	80 e0       	ldi	r24, 0x00	; 0
    30ba:	88 2f       	mov	r24, r24
    30bc:	90 e0       	ldi	r25, 0x00	; 0
    30be:	2f 81       	ldd	r18, Y+7	; 0x07
    30c0:	38 85       	ldd	r19, Y+8	; 0x08
    30c2:	a9 01       	movw	r20, r18
    30c4:	48 1b       	sub	r20, r24
    30c6:	59 0b       	sbc	r21, r25
    30c8:	ca 01       	movw	r24, r20
    30ca:	98 87       	std	Y+8, r25	; 0x08
    30cc:	8f 83       	std	Y+7, r24	; 0x07
    dow = ((y + y/4 - y/100 + y/400 + pgm_read_byte(dowArray+(m-1)) + d) % 7);
    30ce:	8f 81       	ldd	r24, Y+7	; 0x07
    30d0:	98 85       	ldd	r25, Y+8	; 0x08
    30d2:	9c 01       	movw	r18, r24
    30d4:	36 95       	lsr	r19
    30d6:	27 95       	ror	r18
    30d8:	36 95       	lsr	r19
    30da:	27 95       	ror	r18
    30dc:	8f 81       	ldd	r24, Y+7	; 0x07
    30de:	98 85       	ldd	r25, Y+8	; 0x08
    30e0:	a9 01       	movw	r20, r18
    30e2:	48 0f       	add	r20, r24
    30e4:	59 1f       	adc	r21, r25
    30e6:	8f 81       	ldd	r24, Y+7	; 0x07
    30e8:	98 85       	ldd	r25, Y+8	; 0x08
    30ea:	96 95       	lsr	r25
    30ec:	87 95       	ror	r24
    30ee:	96 95       	lsr	r25
    30f0:	87 95       	ror	r24
    30f2:	9c 01       	movw	r18, r24
    30f4:	ab e7       	ldi	r26, 0x7B	; 123
    30f6:	b4 e1       	ldi	r27, 0x14	; 20
    30f8:	0e 94 63 4c 	call	0x98c6	; 0x98c6 <__umulhisi3>
    30fc:	96 95       	lsr	r25
    30fe:	87 95       	ror	r24
    3100:	48 1b       	sub	r20, r24
    3102:	59 0b       	sbc	r21, r25
    3104:	8f 81       	ldd	r24, Y+7	; 0x07
    3106:	98 85       	ldd	r25, Y+8	; 0x08
    3108:	92 95       	swap	r25
    310a:	82 95       	swap	r24
    310c:	8f 70       	andi	r24, 0x0F	; 15
    310e:	89 27       	eor	r24, r25
    3110:	9f 70       	andi	r25, 0x0F	; 15
    3112:	89 27       	eor	r24, r25
    3114:	9c 01       	movw	r18, r24
    3116:	ae e3       	ldi	r26, 0x3E	; 62
    3118:	ba e0       	ldi	r27, 0x0A	; 10
    311a:	0e 94 63 4c 	call	0x98c6	; 0x98c6 <__umulhisi3>
    311e:	9a 01       	movw	r18, r20
    3120:	28 0f       	add	r18, r24
    3122:	39 1f       	adc	r19, r25
    3124:	89 85       	ldd	r24, Y+9	; 0x09
    3126:	88 2f       	mov	r24, r24
    3128:	90 e0       	ldi	r25, 0x00	; 0
    312a:	01 97       	sbiw	r24, 0x01	; 1
    312c:	8c 52       	subi	r24, 0x2C	; 44
    312e:	9c 4f       	sbci	r25, 0xFC	; 252
    3130:	9a 83       	std	Y+2, r25	; 0x02
    3132:	89 83       	std	Y+1, r24	; 0x01
    3134:	89 81       	ldd	r24, Y+1	; 0x01
    3136:	9a 81       	ldd	r25, Y+2	; 0x02
    3138:	fc 01       	movw	r30, r24
    313a:	84 91       	lpm	r24, Z
    313c:	8b 83       	std	Y+3, r24	; 0x03
    313e:	8b 81       	ldd	r24, Y+3	; 0x03
    3140:	88 2f       	mov	r24, r24
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	28 0f       	add	r18, r24
    3146:	39 1f       	adc	r19, r25
    3148:	8a 85       	ldd	r24, Y+10	; 0x0a
    314a:	88 2f       	mov	r24, r24
    314c:	90 e0       	ldi	r25, 0x00	; 0
    314e:	a9 01       	movw	r20, r18
    3150:	48 0f       	add	r20, r24
    3152:	59 1f       	adc	r21, r25
    3154:	9a 01       	movw	r18, r20
    3156:	a3 e9       	ldi	r26, 0x93	; 147
    3158:	b4 e2       	ldi	r27, 0x24	; 36
    315a:	0e 94 63 4c 	call	0x98c6	; 0x98c6 <__umulhisi3>
    315e:	9a 01       	movw	r18, r20
    3160:	28 1b       	sub	r18, r24
    3162:	39 0b       	sbc	r19, r25
    3164:	36 95       	lsr	r19
    3166:	27 95       	ror	r18
    3168:	82 0f       	add	r24, r18
    316a:	93 1f       	adc	r25, r19
    316c:	9c 01       	movw	r18, r24
    316e:	36 95       	lsr	r19
    3170:	27 95       	ror	r18
    3172:	36 95       	lsr	r19
    3174:	27 95       	ror	r18
    3176:	c9 01       	movw	r24, r18
    3178:	88 0f       	add	r24, r24
    317a:	99 1f       	adc	r25, r25
    317c:	88 0f       	add	r24, r24
    317e:	99 1f       	adc	r25, r25
    3180:	88 0f       	add	r24, r24
    3182:	99 1f       	adc	r25, r25
    3184:	82 1b       	sub	r24, r18
    3186:	93 0b       	sbc	r25, r19
    3188:	9a 01       	movw	r18, r20
    318a:	28 1b       	sub	r18, r24
    318c:	39 0b       	sbc	r19, r25
    318e:	2c 83       	std	Y+4, r18	; 0x04

    if (dow == 0)
    3190:	8c 81       	ldd	r24, Y+4	; 0x04
    3192:	88 23       	and	r24, r24
    3194:	11 f4       	brne	.+4      	; 0x319a <_ZN6DS32313dowEjhh+0x10a>
    {
        return 7;
    3196:	87 e0       	ldi	r24, 0x07	; 7
    3198:	01 c0       	rjmp	.+2      	; 0x319c <_ZN6DS32313dowEjhh+0x10c>
    }

    return dow;
    319a:	8c 81       	ldd	r24, Y+4	; 0x04
}
    319c:	2a 96       	adiw	r28, 0x0a	; 10
    319e:	0f b6       	in	r0, 0x3f	; 63
    31a0:	f8 94       	cli
    31a2:	de bf       	out	0x3e, r29	; 62
    31a4:	0f be       	out	0x3f, r0	; 63
    31a6:	cd bf       	out	0x3d, r28	; 61
    31a8:	df 91       	pop	r29
    31aa:	cf 91       	pop	r28
    31ac:	08 95       	ret

000031ae <_ZN6DS323114writeRegister8Ehh>:

void DS3231::writeRegister8(uint8_t reg, uint8_t value)
{
    31ae:	cf 93       	push	r28
    31b0:	df 93       	push	r29
    31b2:	00 d0       	rcall	.+0      	; 0x31b4 <_ZN6DS323114writeRegister8Ehh+0x6>
    31b4:	1f 92       	push	r1
    31b6:	cd b7       	in	r28, 0x3d	; 61
    31b8:	de b7       	in	r29, 0x3e	; 62
    31ba:	9a 83       	std	Y+2, r25	; 0x02
    31bc:	89 83       	std	Y+1, r24	; 0x01
    31be:	6b 83       	std	Y+3, r22	; 0x03
    31c0:	4c 83       	std	Y+4, r20	; 0x04
    Wire.beginTransmission(DS3231_ADDRESS);
    31c2:	68 e6       	ldi	r22, 0x68	; 104
    31c4:	70 e0       	ldi	r23, 0x00	; 0
    31c6:	87 ee       	ldi	r24, 0xE7	; 231
    31c8:	93 e0       	ldi	r25, 0x03	; 3
    31ca:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    #if ARDUINO >= 100
        Wire.write(reg);
    31ce:	6b 81       	ldd	r22, Y+3	; 0x03
    31d0:	87 ee       	ldi	r24, 0xE7	; 231
    31d2:	93 e0       	ldi	r25, 0x03	; 3
    31d4:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
        Wire.write(value);
    31d8:	6c 81       	ldd	r22, Y+4	; 0x04
    31da:	87 ee       	ldi	r24, 0xE7	; 231
    31dc:	93 e0       	ldi	r25, 0x03	; 3
    31de:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    #else
        Wire.send(reg);
        Wire.send(value);
    #endif
    Wire.endTransmission();
    31e2:	87 ee       	ldi	r24, 0xE7	; 231
    31e4:	93 e0       	ldi	r25, 0x03	; 3
    31e6:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
}
    31ea:	00 00       	nop
    31ec:	0f 90       	pop	r0
    31ee:	0f 90       	pop	r0
    31f0:	0f 90       	pop	r0
    31f2:	0f 90       	pop	r0
    31f4:	df 91       	pop	r29
    31f6:	cf 91       	pop	r28
    31f8:	08 95       	ret

000031fa <_ZN6DS323113readRegister8Eh>:

uint8_t DS3231::readRegister8(uint8_t reg)
{
    31fa:	cf 93       	push	r28
    31fc:	df 93       	push	r29
    31fe:	00 d0       	rcall	.+0      	; 0x3200 <_ZN6DS323113readRegister8Eh+0x6>
    3200:	1f 92       	push	r1
    3202:	cd b7       	in	r28, 0x3d	; 61
    3204:	de b7       	in	r29, 0x3e	; 62
    3206:	9b 83       	std	Y+3, r25	; 0x03
    3208:	8a 83       	std	Y+2, r24	; 0x02
    320a:	6c 83       	std	Y+4, r22	; 0x04
    uint8_t value;
    Wire.beginTransmission(DS3231_ADDRESS);
    320c:	68 e6       	ldi	r22, 0x68	; 104
    320e:	70 e0       	ldi	r23, 0x00	; 0
    3210:	87 ee       	ldi	r24, 0xE7	; 231
    3212:	93 e0       	ldi	r25, 0x03	; 3
    3214:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    #if ARDUINO >= 100
        Wire.write(reg);
    3218:	6c 81       	ldd	r22, Y+4	; 0x04
    321a:	87 ee       	ldi	r24, 0xE7	; 231
    321c:	93 e0       	ldi	r25, 0x03	; 3
    321e:	0e 94 dd 3d 	call	0x7bba	; 0x7bba <_ZN7TwoWire5writeEh>
    #else
        Wire.send(reg);
    #endif
    Wire.endTransmission();
    3222:	87 ee       	ldi	r24, 0xE7	; 231
    3224:	93 e0       	ldi	r25, 0x03	; 3
    3226:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>

    Wire.requestFrom(DS3231_ADDRESS, 1);
    322a:	41 e0       	ldi	r20, 0x01	; 1
    322c:	50 e0       	ldi	r21, 0x00	; 0
    322e:	68 e6       	ldi	r22, 0x68	; 104
    3230:	70 e0       	ldi	r23, 0x00	; 0
    3232:	87 ee       	ldi	r24, 0xE7	; 231
    3234:	93 e0       	ldi	r25, 0x03	; 3
    3236:	0e 94 5c 3d 	call	0x7ab8	; 0x7ab8 <_ZN7TwoWire11requestFromEii>
    while(!Wire.available()) {};
    323a:	87 ee       	ldi	r24, 0xE7	; 231
    323c:	93 e0       	ldi	r25, 0x03	; 3
    323e:	0e 94 5c 3e 	call	0x7cb8	; 0x7cb8 <_ZN7TwoWire9availableEv>
    3242:	21 e0       	ldi	r18, 0x01	; 1
    3244:	89 2b       	or	r24, r25
    3246:	09 f0       	breq	.+2      	; 0x324a <_ZN6DS323113readRegister8Eh+0x50>
    3248:	20 e0       	ldi	r18, 0x00	; 0
    324a:	22 23       	and	r18, r18
    324c:	09 f0       	breq	.+2      	; 0x3250 <_ZN6DS323113readRegister8Eh+0x56>
    324e:	f5 cf       	rjmp	.-22     	; 0x323a <_ZN6DS323113readRegister8Eh+0x40>
    #if ARDUINO >= 100
        value = Wire.read();
    3250:	87 ee       	ldi	r24, 0xE7	; 231
    3252:	93 e0       	ldi	r25, 0x03	; 3
    3254:	0e 94 75 3e 	call	0x7cea	; 0x7cea <_ZN7TwoWire4readEv>
    3258:	89 83       	std	Y+1, r24	; 0x01
    #else
        value = Wire.receive();
    #endif;
    Wire.endTransmission();
    325a:	87 ee       	ldi	r24, 0xE7	; 231
    325c:	93 e0       	ldi	r25, 0x03	; 3
    325e:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>

    return value;
    3262:	89 81       	ldd	r24, Y+1	; 0x01
}
    3264:	0f 90       	pop	r0
    3266:	0f 90       	pop	r0
    3268:	0f 90       	pop	r0
    326a:	0f 90       	pop	r0
    326c:	df 91       	pop	r29
    326e:	cf 91       	pop	r28
    3270:	08 95       	ret

00003272 <_ZN8SPIClass16beginTransactionE11SPISettings>:
  // https://github.com/arduino/Arduino/pull/2449

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    3272:	cf 93       	push	r28
    3274:	df 93       	push	r29
    3276:	00 d0       	rcall	.+0      	; 0x3278 <_ZN8SPIClass16beginTransactionE11SPISettings+0x6>
    3278:	cd b7       	in	r28, 0x3d	; 61
    327a:	de b7       	in	r29, 0x3e	; 62
    327c:	9b 83       	std	Y+3, r25	; 0x03
    327e:	8a 83       	std	Y+2, r24	; 0x02
    if (interruptMode > 0) {
    3280:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <_ZN8SPIClass13interruptModeE>
    3284:	88 23       	and	r24, r24
    3286:	31 f1       	breq	.+76     	; 0x32d4 <_ZN8SPIClass16beginTransactionE11SPISettings+0x62>
      uint8_t sreg = SREG;
    3288:	8f e5       	ldi	r24, 0x5F	; 95
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	fc 01       	movw	r30, r24
    328e:	80 81       	ld	r24, Z
    3290:	89 83       	std	Y+1, r24	; 0x01
      noInterrupts();
    3292:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    3294:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <_ZN8SPIClass13interruptModeE>
    3298:	81 30       	cpi	r24, 0x01	; 1
    329a:	c9 f4       	brne	.+50     	; 0x32ce <_ZN8SPIClass16beginTransactionE11SPISettings+0x5c>
        interruptSave = SPI_AVR_EIMSK;
    329c:	8d e3       	ldi	r24, 0x3D	; 61
    329e:	90 e0       	ldi	r25, 0x00	; 0
    32a0:	fc 01       	movw	r30, r24
    32a2:	80 81       	ld	r24, Z
    32a4:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
    32a8:	8d e3       	ldi	r24, 0x3D	; 61
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	2d e3       	ldi	r18, 0x3D	; 61
    32ae:	30 e0       	ldi	r19, 0x00	; 0
    32b0:	f9 01       	movw	r30, r18
    32b2:	20 81       	ld	r18, Z
    32b4:	32 2f       	mov	r19, r18
    32b6:	20 91 f5 03 	lds	r18, 0x03F5	; 0x8003f5 <_ZN8SPIClass13interruptMaskE>
    32ba:	20 95       	com	r18
    32bc:	23 23       	and	r18, r19
    32be:	fc 01       	movw	r30, r24
    32c0:	20 83       	st	Z, r18
        SREG = sreg;
    32c2:	8f e5       	ldi	r24, 0x5F	; 95
    32c4:	90 e0       	ldi	r25, 0x00	; 0
    32c6:	29 81       	ldd	r18, Y+1	; 0x01
    32c8:	fc 01       	movw	r30, r24
    32ca:	20 83       	st	Z, r18
    32cc:	03 c0       	rjmp	.+6      	; 0x32d4 <_ZN8SPIClass16beginTransactionE11SPISettings+0x62>
      } else
      #endif
      {
        interruptSave = sreg;
    32ce:	89 81       	ldd	r24, Y+1	; 0x01
    32d0:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
    32d4:	8c e4       	ldi	r24, 0x4C	; 76
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	2a 81       	ldd	r18, Y+2	; 0x02
    32da:	fc 01       	movw	r30, r24
    32dc:	20 83       	st	Z, r18
    SPSR = settings.spsr;
    32de:	8d e4       	ldi	r24, 0x4D	; 77
    32e0:	90 e0       	ldi	r25, 0x00	; 0
    32e2:	2b 81       	ldd	r18, Y+3	; 0x03
    32e4:	fc 01       	movw	r30, r24
    32e6:	20 83       	st	Z, r18
  }
    32e8:	00 00       	nop
    32ea:	0f 90       	pop	r0
    32ec:	0f 90       	pop	r0
    32ee:	0f 90       	pop	r0
    32f0:	df 91       	pop	r29
    32f2:	cf 91       	pop	r28
    32f4:	08 95       	ret

000032f6 <_ZN8SPIClass14endTransactionEv>:
    while (!(SPSR & _BV(SPIF))) ;
    *p = SPDR;
  }
  // After performing a group of transfers and releasing the chip select
  // signal, this function allows others to access the SPI bus
  inline static void endTransaction(void) {
    32f6:	cf 93       	push	r28
    32f8:	df 93       	push	r29
    32fa:	1f 92       	push	r1
    32fc:	cd b7       	in	r28, 0x3d	; 61
    32fe:	de b7       	in	r29, 0x3e	; 62
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
    3300:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <_ZN8SPIClass13interruptModeE>
    3304:	88 23       	and	r24, r24
    3306:	e1 f0       	breq	.+56     	; 0x3340 <_ZN8SPIClass14endTransactionEv+0x4a>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
    3308:	8f e5       	ldi	r24, 0x5F	; 95
    330a:	90 e0       	ldi	r25, 0x00	; 0
    330c:	fc 01       	movw	r30, r24
    330e:	80 81       	ld	r24, Z
    3310:	89 83       	std	Y+1, r24	; 0x01
      #endif
      noInterrupts();
    3312:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    3314:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <_ZN8SPIClass13interruptModeE>
    3318:	81 30       	cpi	r24, 0x01	; 1
    331a:	61 f4       	brne	.+24     	; 0x3334 <_ZN8SPIClass14endTransactionEv+0x3e>
        SPI_AVR_EIMSK = interruptSave;
    331c:	8d e3       	ldi	r24, 0x3D	; 61
    331e:	90 e0       	ldi	r25, 0x00	; 0
    3320:	20 91 f6 03 	lds	r18, 0x03F6	; 0x8003f6 <_ZN8SPIClass13interruptSaveE>
    3324:	fc 01       	movw	r30, r24
    3326:	20 83       	st	Z, r18
        SREG = sreg;
    3328:	8f e5       	ldi	r24, 0x5F	; 95
    332a:	90 e0       	ldi	r25, 0x00	; 0
    332c:	29 81       	ldd	r18, Y+1	; 0x01
    332e:	fc 01       	movw	r30, r24
    3330:	20 83       	st	Z, r18
      #endif
      {
        SREG = interruptSave;
      }
    }
  }
    3332:	06 c0       	rjmp	.+12     	; 0x3340 <_ZN8SPIClass14endTransactionEv+0x4a>
        SPI_AVR_EIMSK = interruptSave;
        SREG = sreg;
      } else
      #endif
      {
        SREG = interruptSave;
    3334:	8f e5       	ldi	r24, 0x5F	; 95
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	20 91 f6 03 	lds	r18, 0x03F6	; 0x8003f6 <_ZN8SPIClass13interruptSaveE>
    333c:	fc 01       	movw	r30, r24
    333e:	20 83       	st	Z, r18
      }
    }
  }
    3340:	00 00       	nop
    3342:	0f 90       	pop	r0
    3344:	df 91       	pop	r29
    3346:	cf 91       	pop	r28
    3348:	08 95       	ret

0000334a <_ZN5PrintC1Ev>:
  }
  if (maxy >= miny) {
    *y1 = miny;
    *h = maxy - miny + 1;
  }
}
    334a:	cf 93       	push	r28
    334c:	df 93       	push	r29
    334e:	1f 92       	push	r1
    3350:	1f 92       	push	r1
    3352:	cd b7       	in	r28, 0x3d	; 61
    3354:	de b7       	in	r29, 0x3e	; 62
    3356:	9a 83       	std	Y+2, r25	; 0x02
    3358:	89 83       	std	Y+1, r24	; 0x01
    335a:	2c ea       	ldi	r18, 0xAC	; 172
    335c:	32 e0       	ldi	r19, 0x02	; 2
    335e:	89 81       	ldd	r24, Y+1	; 0x01
    3360:	9a 81       	ldd	r25, Y+2	; 0x02
    3362:	fc 01       	movw	r30, r24
    3364:	31 83       	std	Z+1, r19	; 0x01
    3366:	20 83       	st	Z, r18
    3368:	89 81       	ldd	r24, Y+1	; 0x01
    336a:	9a 81       	ldd	r25, Y+2	; 0x02
    336c:	fc 01       	movw	r30, r24
    336e:	13 82       	std	Z+3, r1	; 0x03
    3370:	12 82       	std	Z+2, r1	; 0x02
    3372:	00 00       	nop
    3374:	0f 90       	pop	r0
    3376:	0f 90       	pop	r0
    3378:	df 91       	pop	r29
    337a:	cf 91       	pop	r28
    337c:	08 95       	ret

0000337e <_ZNK12Adafruit_GFX11getRotationEv>:
    337e:	cf 93       	push	r28
    3380:	df 93       	push	r29
    3382:	1f 92       	push	r1
    3384:	1f 92       	push	r1
    3386:	cd b7       	in	r28, 0x3d	; 61
    3388:	de b7       	in	r29, 0x3e	; 62
    338a:	9a 83       	std	Y+2, r25	; 0x02
    338c:	89 83       	std	Y+1, r24	; 0x01
    338e:	89 81       	ldd	r24, Y+1	; 0x01
    3390:	9a 81       	ldd	r25, Y+2	; 0x02
    3392:	fc 01       	movw	r30, r24
    3394:	86 89       	ldd	r24, Z+22	; 0x16
    3396:	0f 90       	pop	r0
    3398:	0f 90       	pop	r0
    339a:	df 91       	pop	r29
    339c:	cf 91       	pop	r28
    339e:	08 95       	ret

000033a0 <_Z18pgm_read_glyph_ptrPK7GFXfonth>:
    33a0:	cf 93       	push	r28
    33a2:	df 93       	push	r29
    33a4:	cd b7       	in	r28, 0x3d	; 61
    33a6:	de b7       	in	r29, 0x3e	; 62
    33a8:	27 97       	sbiw	r28, 0x07	; 7
    33aa:	0f b6       	in	r0, 0x3f	; 63
    33ac:	f8 94       	cli
    33ae:	de bf       	out	0x3e, r29	; 62
    33b0:	0f be       	out	0x3f, r0	; 63
    33b2:	cd bf       	out	0x3d, r28	; 61
    33b4:	9e 83       	std	Y+6, r25	; 0x06
    33b6:	8d 83       	std	Y+5, r24	; 0x05
    33b8:	6f 83       	std	Y+7, r22	; 0x07
    33ba:	8f 81       	ldd	r24, Y+7	; 0x07
    33bc:	28 2f       	mov	r18, r24
    33be:	30 e0       	ldi	r19, 0x00	; 0
    33c0:	c9 01       	movw	r24, r18
    33c2:	88 0f       	add	r24, r24
    33c4:	99 1f       	adc	r25, r25
    33c6:	88 0f       	add	r24, r24
    33c8:	99 1f       	adc	r25, r25
    33ca:	88 0f       	add	r24, r24
    33cc:	99 1f       	adc	r25, r25
    33ce:	ac 01       	movw	r20, r24
    33d0:	42 1b       	sub	r20, r18
    33d2:	53 0b       	sbc	r21, r19
    33d4:	9a 01       	movw	r18, r20
    33d6:	8d 81       	ldd	r24, Y+5	; 0x05
    33d8:	9e 81       	ldd	r25, Y+6	; 0x06
    33da:	02 96       	adiw	r24, 0x02	; 2
    33dc:	9a 83       	std	Y+2, r25	; 0x02
    33de:	89 83       	std	Y+1, r24	; 0x01
    33e0:	89 81       	ldd	r24, Y+1	; 0x01
    33e2:	9a 81       	ldd	r25, Y+2	; 0x02
    33e4:	fc 01       	movw	r30, r24
    33e6:	45 91       	lpm	r20, Z+
    33e8:	54 91       	lpm	r21, Z
    33ea:	cf 01       	movw	r24, r30
    33ec:	5c 83       	std	Y+4, r21	; 0x04
    33ee:	4b 83       	std	Y+3, r20	; 0x03
    33f0:	9a 83       	std	Y+2, r25	; 0x02
    33f2:	89 83       	std	Y+1, r24	; 0x01
    33f4:	8b 81       	ldd	r24, Y+3	; 0x03
    33f6:	9c 81       	ldd	r25, Y+4	; 0x04
    33f8:	82 0f       	add	r24, r18
    33fa:	93 1f       	adc	r25, r19
    33fc:	27 96       	adiw	r28, 0x07	; 7
    33fe:	0f b6       	in	r0, 0x3f	; 63
    3400:	f8 94       	cli
    3402:	de bf       	out	0x3e, r29	; 62
    3404:	0f be       	out	0x3f, r0	; 63
    3406:	cd bf       	out	0x3d, r28	; 61
    3408:	df 91       	pop	r29
    340a:	cf 91       	pop	r28
    340c:	08 95       	ret

0000340e <_Z19pgm_read_bitmap_ptrPK7GFXfont>:
    340e:	cf 93       	push	r28
    3410:	df 93       	push	r29
    3412:	00 d0       	rcall	.+0      	; 0x3414 <_Z19pgm_read_bitmap_ptrPK7GFXfont+0x6>
    3414:	00 d0       	rcall	.+0      	; 0x3416 <_Z19pgm_read_bitmap_ptrPK7GFXfont+0x8>
    3416:	cd b7       	in	r28, 0x3d	; 61
    3418:	de b7       	in	r29, 0x3e	; 62
    341a:	9e 83       	std	Y+6, r25	; 0x06
    341c:	8d 83       	std	Y+5, r24	; 0x05
    341e:	8d 81       	ldd	r24, Y+5	; 0x05
    3420:	9e 81       	ldd	r25, Y+6	; 0x06
    3422:	9a 83       	std	Y+2, r25	; 0x02
    3424:	89 83       	std	Y+1, r24	; 0x01
    3426:	89 81       	ldd	r24, Y+1	; 0x01
    3428:	9a 81       	ldd	r25, Y+2	; 0x02
    342a:	fc 01       	movw	r30, r24
    342c:	25 91       	lpm	r18, Z+
    342e:	34 91       	lpm	r19, Z
    3430:	cf 01       	movw	r24, r30
    3432:	3c 83       	std	Y+4, r19	; 0x04
    3434:	2b 83       	std	Y+3, r18	; 0x03
    3436:	9a 83       	std	Y+2, r25	; 0x02
    3438:	89 83       	std	Y+1, r24	; 0x01
    343a:	8b 81       	ldd	r24, Y+3	; 0x03
    343c:	9c 81       	ldd	r25, Y+4	; 0x04
    343e:	26 96       	adiw	r28, 0x06	; 6
    3440:	0f b6       	in	r0, 0x3f	; 63
    3442:	f8 94       	cli
    3444:	de bf       	out	0x3e, r29	; 62
    3446:	0f be       	out	0x3f, r0	; 63
    3448:	cd bf       	out	0x3d, r28	; 61
    344a:	df 91       	pop	r29
    344c:	cf 91       	pop	r28
    344e:	08 95       	ret

00003450 <_ZN12Adafruit_GFXC1Eii>:
    3450:	cf 93       	push	r28
    3452:	df 93       	push	r29
    3454:	00 d0       	rcall	.+0      	; 0x3456 <_ZN12Adafruit_GFXC1Eii+0x6>
    3456:	00 d0       	rcall	.+0      	; 0x3458 <_ZN12Adafruit_GFXC1Eii+0x8>
    3458:	cd b7       	in	r28, 0x3d	; 61
    345a:	de b7       	in	r29, 0x3e	; 62
    345c:	9a 83       	std	Y+2, r25	; 0x02
    345e:	89 83       	std	Y+1, r24	; 0x01
    3460:	7c 83       	std	Y+4, r23	; 0x04
    3462:	6b 83       	std	Y+3, r22	; 0x03
    3464:	5e 83       	std	Y+6, r21	; 0x06
    3466:	4d 83       	std	Y+5, r20	; 0x05
    3468:	89 81       	ldd	r24, Y+1	; 0x01
    346a:	9a 81       	ldd	r25, Y+2	; 0x02
    346c:	6e df       	rcall	.-292    	; 0x334a <_ZN5PrintC1Ev>
    346e:	2f e0       	ldi	r18, 0x0F	; 15
    3470:	32 e0       	ldi	r19, 0x02	; 2
    3472:	89 81       	ldd	r24, Y+1	; 0x01
    3474:	9a 81       	ldd	r25, Y+2	; 0x02
    3476:	fc 01       	movw	r30, r24
    3478:	31 83       	std	Z+1, r19	; 0x01
    347a:	20 83       	st	Z, r18
    347c:	89 81       	ldd	r24, Y+1	; 0x01
    347e:	9a 81       	ldd	r25, Y+2	; 0x02
    3480:	2b 81       	ldd	r18, Y+3	; 0x03
    3482:	3c 81       	ldd	r19, Y+4	; 0x04
    3484:	fc 01       	movw	r30, r24
    3486:	35 83       	std	Z+5, r19	; 0x05
    3488:	24 83       	std	Z+4, r18	; 0x04
    348a:	89 81       	ldd	r24, Y+1	; 0x01
    348c:	9a 81       	ldd	r25, Y+2	; 0x02
    348e:	2d 81       	ldd	r18, Y+5	; 0x05
    3490:	3e 81       	ldd	r19, Y+6	; 0x06
    3492:	fc 01       	movw	r30, r24
    3494:	37 83       	std	Z+7, r19	; 0x07
    3496:	26 83       	std	Z+6, r18	; 0x06
    3498:	89 81       	ldd	r24, Y+1	; 0x01
    349a:	9a 81       	ldd	r25, Y+2	; 0x02
    349c:	fc 01       	movw	r30, r24
    349e:	24 81       	ldd	r18, Z+4	; 0x04
    34a0:	35 81       	ldd	r19, Z+5	; 0x05
    34a2:	89 81       	ldd	r24, Y+1	; 0x01
    34a4:	9a 81       	ldd	r25, Y+2	; 0x02
    34a6:	fc 01       	movw	r30, r24
    34a8:	31 87       	std	Z+9, r19	; 0x09
    34aa:	20 87       	std	Z+8, r18	; 0x08
    34ac:	89 81       	ldd	r24, Y+1	; 0x01
    34ae:	9a 81       	ldd	r25, Y+2	; 0x02
    34b0:	fc 01       	movw	r30, r24
    34b2:	26 81       	ldd	r18, Z+6	; 0x06
    34b4:	37 81       	ldd	r19, Z+7	; 0x07
    34b6:	89 81       	ldd	r24, Y+1	; 0x01
    34b8:	9a 81       	ldd	r25, Y+2	; 0x02
    34ba:	fc 01       	movw	r30, r24
    34bc:	33 87       	std	Z+11, r19	; 0x0b
    34be:	22 87       	std	Z+10, r18	; 0x0a
    34c0:	89 81       	ldd	r24, Y+1	; 0x01
    34c2:	9a 81       	ldd	r25, Y+2	; 0x02
    34c4:	fc 01       	movw	r30, r24
    34c6:	16 8a       	std	Z+22, r1	; 0x16
    34c8:	89 81       	ldd	r24, Y+1	; 0x01
    34ca:	9a 81       	ldd	r25, Y+2	; 0x02
    34cc:	fc 01       	movw	r30, r24
    34ce:	15 86       	std	Z+13, r1	; 0x0d
    34d0:	14 86       	std	Z+12, r1	; 0x0c
    34d2:	89 81       	ldd	r24, Y+1	; 0x01
    34d4:	9a 81       	ldd	r25, Y+2	; 0x02
    34d6:	fc 01       	movw	r30, r24
    34d8:	24 85       	ldd	r18, Z+12	; 0x0c
    34da:	35 85       	ldd	r19, Z+13	; 0x0d
    34dc:	89 81       	ldd	r24, Y+1	; 0x01
    34de:	9a 81       	ldd	r25, Y+2	; 0x02
    34e0:	fc 01       	movw	r30, r24
    34e2:	37 87       	std	Z+15, r19	; 0x0f
    34e4:	26 87       	std	Z+14, r18	; 0x0e
    34e6:	89 81       	ldd	r24, Y+1	; 0x01
    34e8:	9a 81       	ldd	r25, Y+2	; 0x02
    34ea:	21 e0       	ldi	r18, 0x01	; 1
    34ec:	fc 01       	movw	r30, r24
    34ee:	25 8b       	std	Z+21, r18	; 0x15
    34f0:	89 81       	ldd	r24, Y+1	; 0x01
    34f2:	9a 81       	ldd	r25, Y+2	; 0x02
    34f4:	fc 01       	movw	r30, r24
    34f6:	25 89       	ldd	r18, Z+21	; 0x15
    34f8:	89 81       	ldd	r24, Y+1	; 0x01
    34fa:	9a 81       	ldd	r25, Y+2	; 0x02
    34fc:	fc 01       	movw	r30, r24
    34fe:	24 8b       	std	Z+20, r18	; 0x14
    3500:	89 81       	ldd	r24, Y+1	; 0x01
    3502:	9a 81       	ldd	r25, Y+2	; 0x02
    3504:	2f ef       	ldi	r18, 0xFF	; 255
    3506:	3f ef       	ldi	r19, 0xFF	; 255
    3508:	fc 01       	movw	r30, r24
    350a:	33 8b       	std	Z+19, r19	; 0x13
    350c:	22 8b       	std	Z+18, r18	; 0x12
    350e:	89 81       	ldd	r24, Y+1	; 0x01
    3510:	9a 81       	ldd	r25, Y+2	; 0x02
    3512:	fc 01       	movw	r30, r24
    3514:	22 89       	ldd	r18, Z+18	; 0x12
    3516:	33 89       	ldd	r19, Z+19	; 0x13
    3518:	89 81       	ldd	r24, Y+1	; 0x01
    351a:	9a 81       	ldd	r25, Y+2	; 0x02
    351c:	fc 01       	movw	r30, r24
    351e:	31 8b       	std	Z+17, r19	; 0x11
    3520:	20 8b       	std	Z+16, r18	; 0x10
    3522:	89 81       	ldd	r24, Y+1	; 0x01
    3524:	9a 81       	ldd	r25, Y+2	; 0x02
    3526:	21 e0       	ldi	r18, 0x01	; 1
    3528:	fc 01       	movw	r30, r24
    352a:	27 8b       	std	Z+23, r18	; 0x17
    352c:	89 81       	ldd	r24, Y+1	; 0x01
    352e:	9a 81       	ldd	r25, Y+2	; 0x02
    3530:	fc 01       	movw	r30, r24
    3532:	10 8e       	std	Z+24, r1	; 0x18
    3534:	89 81       	ldd	r24, Y+1	; 0x01
    3536:	9a 81       	ldd	r25, Y+2	; 0x02
    3538:	fc 01       	movw	r30, r24
    353a:	12 8e       	std	Z+26, r1	; 0x1a
    353c:	11 8e       	std	Z+25, r1	; 0x19
    353e:	00 00       	nop
    3540:	26 96       	adiw	r28, 0x06	; 6
    3542:	0f b6       	in	r0, 0x3f	; 63
    3544:	f8 94       	cli
    3546:	de bf       	out	0x3e, r29	; 62
    3548:	0f be       	out	0x3f, r0	; 63
    354a:	cd bf       	out	0x3d, r28	; 61
    354c:	df 91       	pop	r29
    354e:	cf 91       	pop	r28
    3550:	08 95       	ret

00003552 <_ZN12Adafruit_GFX9writeLineEiiiij>:
    3552:	ef 92       	push	r14
    3554:	ff 92       	push	r15
    3556:	0f 93       	push	r16
    3558:	1f 93       	push	r17
    355a:	cf 93       	push	r28
    355c:	df 93       	push	r29
    355e:	cd b7       	in	r28, 0x3d	; 61
    3560:	de b7       	in	r29, 0x3e	; 62
    3562:	6e 97       	sbiw	r28, 0x1e	; 30
    3564:	0f b6       	in	r0, 0x3f	; 63
    3566:	f8 94       	cli
    3568:	de bf       	out	0x3e, r29	; 62
    356a:	0f be       	out	0x3f, r0	; 63
    356c:	cd bf       	out	0x3d, r28	; 61
    356e:	9c 8b       	std	Y+20, r25	; 0x14
    3570:	8b 8b       	std	Y+19, r24	; 0x13
    3572:	7e 8b       	std	Y+22, r23	; 0x16
    3574:	6d 8b       	std	Y+21, r22	; 0x15
    3576:	58 8f       	std	Y+24, r21	; 0x18
    3578:	4f 8b       	std	Y+23, r20	; 0x17
    357a:	3a 8f       	std	Y+26, r19	; 0x1a
    357c:	29 8f       	std	Y+25, r18	; 0x19
    357e:	1c 8f       	std	Y+28, r17	; 0x1c
    3580:	0b 8f       	std	Y+27, r16	; 0x1b
    3582:	fe 8e       	std	Y+30, r15	; 0x1e
    3584:	ed 8e       	std	Y+29, r14	; 0x1d
    3586:	2b 8d       	ldd	r18, Y+27	; 0x1b
    3588:	3c 8d       	ldd	r19, Y+28	; 0x1c
    358a:	8f 89       	ldd	r24, Y+23	; 0x17
    358c:	98 8d       	ldd	r25, Y+24	; 0x18
    358e:	a9 01       	movw	r20, r18
    3590:	48 1b       	sub	r20, r24
    3592:	59 0b       	sbc	r21, r25
    3594:	ca 01       	movw	r24, r20
    3596:	99 23       	and	r25, r25
    3598:	1c f4       	brge	.+6      	; 0x35a0 <_ZN12Adafruit_GFX9writeLineEiiiij+0x4e>
    359a:	91 95       	neg	r25
    359c:	81 95       	neg	r24
    359e:	91 09       	sbc	r25, r1
    35a0:	ac 01       	movw	r20, r24
    35a2:	29 8d       	ldd	r18, Y+25	; 0x19
    35a4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    35a6:	8d 89       	ldd	r24, Y+21	; 0x15
    35a8:	9e 89       	ldd	r25, Y+22	; 0x16
    35aa:	b9 01       	movw	r22, r18
    35ac:	68 1b       	sub	r22, r24
    35ae:	79 0b       	sbc	r23, r25
    35b0:	cb 01       	movw	r24, r22
    35b2:	99 23       	and	r25, r25
    35b4:	1c f4       	brge	.+6      	; 0x35bc <_ZN12Adafruit_GFX9writeLineEiiiij+0x6a>
    35b6:	91 95       	neg	r25
    35b8:	81 95       	neg	r24
    35ba:	91 09       	sbc	r25, r1
    35bc:	21 e0       	ldi	r18, 0x01	; 1
    35be:	84 17       	cp	r24, r20
    35c0:	95 07       	cpc	r25, r21
    35c2:	0c f0       	brlt	.+2      	; 0x35c6 <_ZN12Adafruit_GFX9writeLineEiiiij+0x74>
    35c4:	20 e0       	ldi	r18, 0x00	; 0
    35c6:	82 2f       	mov	r24, r18
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	9e 83       	std	Y+6, r25	; 0x06
    35cc:	8d 83       	std	Y+5, r24	; 0x05
    35ce:	8d 81       	ldd	r24, Y+5	; 0x05
    35d0:	9e 81       	ldd	r25, Y+6	; 0x06
    35d2:	89 2b       	or	r24, r25
    35d4:	c1 f0       	breq	.+48     	; 0x3606 <_ZN12Adafruit_GFX9writeLineEiiiij+0xb4>
    35d6:	8d 89       	ldd	r24, Y+21	; 0x15
    35d8:	9e 89       	ldd	r25, Y+22	; 0x16
    35da:	98 87       	std	Y+8, r25	; 0x08
    35dc:	8f 83       	std	Y+7, r24	; 0x07
    35de:	8f 89       	ldd	r24, Y+23	; 0x17
    35e0:	98 8d       	ldd	r25, Y+24	; 0x18
    35e2:	9e 8b       	std	Y+22, r25	; 0x16
    35e4:	8d 8b       	std	Y+21, r24	; 0x15
    35e6:	8f 81       	ldd	r24, Y+7	; 0x07
    35e8:	98 85       	ldd	r25, Y+8	; 0x08
    35ea:	98 8f       	std	Y+24, r25	; 0x18
    35ec:	8f 8b       	std	Y+23, r24	; 0x17
    35ee:	89 8d       	ldd	r24, Y+25	; 0x19
    35f0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    35f2:	9a 87       	std	Y+10, r25	; 0x0a
    35f4:	89 87       	std	Y+9, r24	; 0x09
    35f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35fa:	9a 8f       	std	Y+26, r25	; 0x1a
    35fc:	89 8f       	std	Y+25, r24	; 0x19
    35fe:	89 85       	ldd	r24, Y+9	; 0x09
    3600:	9a 85       	ldd	r25, Y+10	; 0x0a
    3602:	9c 8f       	std	Y+28, r25	; 0x1c
    3604:	8b 8f       	std	Y+27, r24	; 0x1b
    3606:	2d 89       	ldd	r18, Y+21	; 0x15
    3608:	3e 89       	ldd	r19, Y+22	; 0x16
    360a:	89 8d       	ldd	r24, Y+25	; 0x19
    360c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    360e:	82 17       	cp	r24, r18
    3610:	93 07       	cpc	r25, r19
    3612:	c4 f4       	brge	.+48     	; 0x3644 <_ZN12Adafruit_GFX9writeLineEiiiij+0xf2>
    3614:	8d 89       	ldd	r24, Y+21	; 0x15
    3616:	9e 89       	ldd	r25, Y+22	; 0x16
    3618:	9c 87       	std	Y+12, r25	; 0x0c
    361a:	8b 87       	std	Y+11, r24	; 0x0b
    361c:	89 8d       	ldd	r24, Y+25	; 0x19
    361e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3620:	9e 8b       	std	Y+22, r25	; 0x16
    3622:	8d 8b       	std	Y+21, r24	; 0x15
    3624:	8b 85       	ldd	r24, Y+11	; 0x0b
    3626:	9c 85       	ldd	r25, Y+12	; 0x0c
    3628:	9a 8f       	std	Y+26, r25	; 0x1a
    362a:	89 8f       	std	Y+25, r24	; 0x19
    362c:	8f 89       	ldd	r24, Y+23	; 0x17
    362e:	98 8d       	ldd	r25, Y+24	; 0x18
    3630:	9e 87       	std	Y+14, r25	; 0x0e
    3632:	8d 87       	std	Y+13, r24	; 0x0d
    3634:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3636:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3638:	98 8f       	std	Y+24, r25	; 0x18
    363a:	8f 8b       	std	Y+23, r24	; 0x17
    363c:	8d 85       	ldd	r24, Y+13	; 0x0d
    363e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3640:	9c 8f       	std	Y+28, r25	; 0x1c
    3642:	8b 8f       	std	Y+27, r24	; 0x1b
    3644:	29 8d       	ldd	r18, Y+25	; 0x19
    3646:	3a 8d       	ldd	r19, Y+26	; 0x1a
    3648:	8d 89       	ldd	r24, Y+21	; 0x15
    364a:	9e 89       	ldd	r25, Y+22	; 0x16
    364c:	d9 01       	movw	r26, r18
    364e:	a8 1b       	sub	r26, r24
    3650:	b9 0b       	sbc	r27, r25
    3652:	cd 01       	movw	r24, r26
    3654:	98 8b       	std	Y+16, r25	; 0x10
    3656:	8f 87       	std	Y+15, r24	; 0x0f
    3658:	2b 8d       	ldd	r18, Y+27	; 0x1b
    365a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    365c:	8f 89       	ldd	r24, Y+23	; 0x17
    365e:	98 8d       	ldd	r25, Y+24	; 0x18
    3660:	f9 01       	movw	r30, r18
    3662:	e8 1b       	sub	r30, r24
    3664:	f9 0b       	sbc	r31, r25
    3666:	cf 01       	movw	r24, r30
    3668:	99 23       	and	r25, r25
    366a:	1c f4       	brge	.+6      	; 0x3672 <_ZN12Adafruit_GFX9writeLineEiiiij+0x120>
    366c:	91 95       	neg	r25
    366e:	81 95       	neg	r24
    3670:	91 09       	sbc	r25, r1
    3672:	9a 8b       	std	Y+18, r25	; 0x12
    3674:	89 8b       	std	Y+17, r24	; 0x11
    3676:	8f 85       	ldd	r24, Y+15	; 0x0f
    3678:	98 89       	ldd	r25, Y+16	; 0x10
    367a:	99 23       	and	r25, r25
    367c:	0c f4       	brge	.+2      	; 0x3680 <_ZN12Adafruit_GFX9writeLineEiiiij+0x12e>
    367e:	01 96       	adiw	r24, 0x01	; 1
    3680:	95 95       	asr	r25
    3682:	87 95       	ror	r24
    3684:	9a 83       	std	Y+2, r25	; 0x02
    3686:	89 83       	std	Y+1, r24	; 0x01
    3688:	2f 89       	ldd	r18, Y+23	; 0x17
    368a:	38 8d       	ldd	r19, Y+24	; 0x18
    368c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    368e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3690:	28 17       	cp	r18, r24
    3692:	39 07       	cpc	r19, r25
    3694:	2c f4       	brge	.+10     	; 0x36a0 <_ZN12Adafruit_GFX9writeLineEiiiij+0x14e>
    3696:	81 e0       	ldi	r24, 0x01	; 1
    3698:	90 e0       	ldi	r25, 0x00	; 0
    369a:	9c 83       	std	Y+4, r25	; 0x04
    369c:	8b 83       	std	Y+3, r24	; 0x03
    369e:	04 c0       	rjmp	.+8      	; 0x36a8 <_ZN12Adafruit_GFX9writeLineEiiiij+0x156>
    36a0:	8f ef       	ldi	r24, 0xFF	; 255
    36a2:	9f ef       	ldi	r25, 0xFF	; 255
    36a4:	9c 83       	std	Y+4, r25	; 0x04
    36a6:	8b 83       	std	Y+3, r24	; 0x03
    36a8:	2d 89       	ldd	r18, Y+21	; 0x15
    36aa:	3e 89       	ldd	r19, Y+22	; 0x16
    36ac:	89 8d       	ldd	r24, Y+25	; 0x19
    36ae:	9a 8d       	ldd	r25, Y+26	; 0x1a
    36b0:	82 17       	cp	r24, r18
    36b2:	93 07       	cpc	r25, r19
    36b4:	0c f4       	brge	.+2      	; 0x36b8 <_ZN12Adafruit_GFX9writeLineEiiiij+0x166>
    36b6:	4d c0       	rjmp	.+154    	; 0x3752 <_ZN12Adafruit_GFX9writeLineEiiiij+0x200>
    36b8:	8d 81       	ldd	r24, Y+5	; 0x05
    36ba:	9e 81       	ldd	r25, Y+6	; 0x06
    36bc:	89 2b       	or	r24, r25
    36be:	99 f0       	breq	.+38     	; 0x36e6 <_ZN12Adafruit_GFX9writeLineEiiiij+0x194>
    36c0:	8b 89       	ldd	r24, Y+19	; 0x13
    36c2:	9c 89       	ldd	r25, Y+20	; 0x14
    36c4:	dc 01       	movw	r26, r24
    36c6:	8d 91       	ld	r24, X+
    36c8:	9c 91       	ld	r25, X
    36ca:	0c 96       	adiw	r24, 0x0c	; 12
    36cc:	dc 01       	movw	r26, r24
    36ce:	ed 91       	ld	r30, X+
    36d0:	fc 91       	ld	r31, X
    36d2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    36d4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    36d6:	4d 89       	ldd	r20, Y+21	; 0x15
    36d8:	5e 89       	ldd	r21, Y+22	; 0x16
    36da:	6f 89       	ldd	r22, Y+23	; 0x17
    36dc:	78 8d       	ldd	r23, Y+24	; 0x18
    36de:	8b 89       	ldd	r24, Y+19	; 0x13
    36e0:	9c 89       	ldd	r25, Y+20	; 0x14
    36e2:	19 95       	eicall
    36e4:	12 c0       	rjmp	.+36     	; 0x370a <_ZN12Adafruit_GFX9writeLineEiiiij+0x1b8>
    36e6:	8b 89       	ldd	r24, Y+19	; 0x13
    36e8:	9c 89       	ldd	r25, Y+20	; 0x14
    36ea:	fc 01       	movw	r30, r24
    36ec:	80 81       	ld	r24, Z
    36ee:	91 81       	ldd	r25, Z+1	; 0x01
    36f0:	0c 96       	adiw	r24, 0x0c	; 12
    36f2:	dc 01       	movw	r26, r24
    36f4:	ed 91       	ld	r30, X+
    36f6:	fc 91       	ld	r31, X
    36f8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    36fa:	3e 8d       	ldd	r19, Y+30	; 0x1e
    36fc:	4f 89       	ldd	r20, Y+23	; 0x17
    36fe:	58 8d       	ldd	r21, Y+24	; 0x18
    3700:	6d 89       	ldd	r22, Y+21	; 0x15
    3702:	7e 89       	ldd	r23, Y+22	; 0x16
    3704:	8b 89       	ldd	r24, Y+19	; 0x13
    3706:	9c 89       	ldd	r25, Y+20	; 0x14
    3708:	19 95       	eicall
    370a:	29 81       	ldd	r18, Y+1	; 0x01
    370c:	3a 81       	ldd	r19, Y+2	; 0x02
    370e:	89 89       	ldd	r24, Y+17	; 0x11
    3710:	9a 89       	ldd	r25, Y+18	; 0x12
    3712:	f9 01       	movw	r30, r18
    3714:	e8 1b       	sub	r30, r24
    3716:	f9 0b       	sbc	r31, r25
    3718:	cf 01       	movw	r24, r30
    371a:	9a 83       	std	Y+2, r25	; 0x02
    371c:	89 83       	std	Y+1, r24	; 0x01
    371e:	89 81       	ldd	r24, Y+1	; 0x01
    3720:	9a 81       	ldd	r25, Y+2	; 0x02
    3722:	99 23       	and	r25, r25
    3724:	84 f4       	brge	.+32     	; 0x3746 <_ZN12Adafruit_GFX9writeLineEiiiij+0x1f4>
    3726:	2f 89       	ldd	r18, Y+23	; 0x17
    3728:	38 8d       	ldd	r19, Y+24	; 0x18
    372a:	8b 81       	ldd	r24, Y+3	; 0x03
    372c:	9c 81       	ldd	r25, Y+4	; 0x04
    372e:	82 0f       	add	r24, r18
    3730:	93 1f       	adc	r25, r19
    3732:	98 8f       	std	Y+24, r25	; 0x18
    3734:	8f 8b       	std	Y+23, r24	; 0x17
    3736:	29 81       	ldd	r18, Y+1	; 0x01
    3738:	3a 81       	ldd	r19, Y+2	; 0x02
    373a:	8f 85       	ldd	r24, Y+15	; 0x0f
    373c:	98 89       	ldd	r25, Y+16	; 0x10
    373e:	82 0f       	add	r24, r18
    3740:	93 1f       	adc	r25, r19
    3742:	9a 83       	std	Y+2, r25	; 0x02
    3744:	89 83       	std	Y+1, r24	; 0x01
    3746:	8d 89       	ldd	r24, Y+21	; 0x15
    3748:	9e 89       	ldd	r25, Y+22	; 0x16
    374a:	01 96       	adiw	r24, 0x01	; 1
    374c:	9e 8b       	std	Y+22, r25	; 0x16
    374e:	8d 8b       	std	Y+21, r24	; 0x15
    3750:	ab cf       	rjmp	.-170    	; 0x36a8 <_ZN12Adafruit_GFX9writeLineEiiiij+0x156>
    3752:	00 00       	nop
    3754:	6e 96       	adiw	r28, 0x1e	; 30
    3756:	0f b6       	in	r0, 0x3f	; 63
    3758:	f8 94       	cli
    375a:	de bf       	out	0x3e, r29	; 62
    375c:	0f be       	out	0x3f, r0	; 63
    375e:	cd bf       	out	0x3d, r28	; 61
    3760:	df 91       	pop	r29
    3762:	cf 91       	pop	r28
    3764:	1f 91       	pop	r17
    3766:	0f 91       	pop	r16
    3768:	ff 90       	pop	r15
    376a:	ef 90       	pop	r14
    376c:	08 95       	ret

0000376e <_ZN12Adafruit_GFX10startWriteEv>:
    376e:	cf 93       	push	r28
    3770:	df 93       	push	r29
    3772:	1f 92       	push	r1
    3774:	1f 92       	push	r1
    3776:	cd b7       	in	r28, 0x3d	; 61
    3778:	de b7       	in	r29, 0x3e	; 62
    377a:	9a 83       	std	Y+2, r25	; 0x02
    377c:	89 83       	std	Y+1, r24	; 0x01
    377e:	00 00       	nop
    3780:	0f 90       	pop	r0
    3782:	0f 90       	pop	r0
    3784:	df 91       	pop	r29
    3786:	cf 91       	pop	r28
    3788:	08 95       	ret

0000378a <_ZN12Adafruit_GFX10writePixelEiij>:
    378a:	cf 93       	push	r28
    378c:	df 93       	push	r29
    378e:	cd b7       	in	r28, 0x3d	; 61
    3790:	de b7       	in	r29, 0x3e	; 62
    3792:	28 97       	sbiw	r28, 0x08	; 8
    3794:	0f b6       	in	r0, 0x3f	; 63
    3796:	f8 94       	cli
    3798:	de bf       	out	0x3e, r29	; 62
    379a:	0f be       	out	0x3f, r0	; 63
    379c:	cd bf       	out	0x3d, r28	; 61
    379e:	9a 83       	std	Y+2, r25	; 0x02
    37a0:	89 83       	std	Y+1, r24	; 0x01
    37a2:	7c 83       	std	Y+4, r23	; 0x04
    37a4:	6b 83       	std	Y+3, r22	; 0x03
    37a6:	5e 83       	std	Y+6, r21	; 0x06
    37a8:	4d 83       	std	Y+5, r20	; 0x05
    37aa:	38 87       	std	Y+8, r19	; 0x08
    37ac:	2f 83       	std	Y+7, r18	; 0x07
    37ae:	89 81       	ldd	r24, Y+1	; 0x01
    37b0:	9a 81       	ldd	r25, Y+2	; 0x02
    37b2:	dc 01       	movw	r26, r24
    37b4:	8d 91       	ld	r24, X+
    37b6:	9c 91       	ld	r25, X
    37b8:	08 96       	adiw	r24, 0x08	; 8
    37ba:	dc 01       	movw	r26, r24
    37bc:	ed 91       	ld	r30, X+
    37be:	fc 91       	ld	r31, X
    37c0:	2f 81       	ldd	r18, Y+7	; 0x07
    37c2:	38 85       	ldd	r19, Y+8	; 0x08
    37c4:	4d 81       	ldd	r20, Y+5	; 0x05
    37c6:	5e 81       	ldd	r21, Y+6	; 0x06
    37c8:	6b 81       	ldd	r22, Y+3	; 0x03
    37ca:	7c 81       	ldd	r23, Y+4	; 0x04
    37cc:	89 81       	ldd	r24, Y+1	; 0x01
    37ce:	9a 81       	ldd	r25, Y+2	; 0x02
    37d0:	19 95       	eicall
    37d2:	00 00       	nop
    37d4:	28 96       	adiw	r28, 0x08	; 8
    37d6:	0f b6       	in	r0, 0x3f	; 63
    37d8:	f8 94       	cli
    37da:	de bf       	out	0x3e, r29	; 62
    37dc:	0f be       	out	0x3f, r0	; 63
    37de:	cd bf       	out	0x3d, r28	; 61
    37e0:	df 91       	pop	r29
    37e2:	cf 91       	pop	r28
    37e4:	08 95       	ret

000037e6 <_ZN12Adafruit_GFX14writeFastVLineEiiij>:
    37e6:	0f 93       	push	r16
    37e8:	1f 93       	push	r17
    37ea:	cf 93       	push	r28
    37ec:	df 93       	push	r29
    37ee:	cd b7       	in	r28, 0x3d	; 61
    37f0:	de b7       	in	r29, 0x3e	; 62
    37f2:	2a 97       	sbiw	r28, 0x0a	; 10
    37f4:	0f b6       	in	r0, 0x3f	; 63
    37f6:	f8 94       	cli
    37f8:	de bf       	out	0x3e, r29	; 62
    37fa:	0f be       	out	0x3f, r0	; 63
    37fc:	cd bf       	out	0x3d, r28	; 61
    37fe:	9a 83       	std	Y+2, r25	; 0x02
    3800:	89 83       	std	Y+1, r24	; 0x01
    3802:	7c 83       	std	Y+4, r23	; 0x04
    3804:	6b 83       	std	Y+3, r22	; 0x03
    3806:	5e 83       	std	Y+6, r21	; 0x06
    3808:	4d 83       	std	Y+5, r20	; 0x05
    380a:	38 87       	std	Y+8, r19	; 0x08
    380c:	2f 83       	std	Y+7, r18	; 0x07
    380e:	1a 87       	std	Y+10, r17	; 0x0a
    3810:	09 87       	std	Y+9, r16	; 0x09
    3812:	89 81       	ldd	r24, Y+1	; 0x01
    3814:	9a 81       	ldd	r25, Y+2	; 0x02
    3816:	dc 01       	movw	r26, r24
    3818:	8d 91       	ld	r24, X+
    381a:	9c 91       	ld	r25, X
    381c:	4c 96       	adiw	r24, 0x1c	; 28
    381e:	dc 01       	movw	r26, r24
    3820:	ed 91       	ld	r30, X+
    3822:	fc 91       	ld	r31, X
    3824:	a9 85       	ldd	r26, Y+9	; 0x09
    3826:	ba 85       	ldd	r27, Y+10	; 0x0a
    3828:	2f 81       	ldd	r18, Y+7	; 0x07
    382a:	38 85       	ldd	r19, Y+8	; 0x08
    382c:	4d 81       	ldd	r20, Y+5	; 0x05
    382e:	5e 81       	ldd	r21, Y+6	; 0x06
    3830:	6b 81       	ldd	r22, Y+3	; 0x03
    3832:	7c 81       	ldd	r23, Y+4	; 0x04
    3834:	89 81       	ldd	r24, Y+1	; 0x01
    3836:	9a 81       	ldd	r25, Y+2	; 0x02
    3838:	8d 01       	movw	r16, r26
    383a:	19 95       	eicall
    383c:	00 00       	nop
    383e:	2a 96       	adiw	r28, 0x0a	; 10
    3840:	0f b6       	in	r0, 0x3f	; 63
    3842:	f8 94       	cli
    3844:	de bf       	out	0x3e, r29	; 62
    3846:	0f be       	out	0x3f, r0	; 63
    3848:	cd bf       	out	0x3d, r28	; 61
    384a:	df 91       	pop	r29
    384c:	cf 91       	pop	r28
    384e:	1f 91       	pop	r17
    3850:	0f 91       	pop	r16
    3852:	08 95       	ret

00003854 <_ZN12Adafruit_GFX14writeFastHLineEiiij>:
    3854:	0f 93       	push	r16
    3856:	1f 93       	push	r17
    3858:	cf 93       	push	r28
    385a:	df 93       	push	r29
    385c:	cd b7       	in	r28, 0x3d	; 61
    385e:	de b7       	in	r29, 0x3e	; 62
    3860:	2a 97       	sbiw	r28, 0x0a	; 10
    3862:	0f b6       	in	r0, 0x3f	; 63
    3864:	f8 94       	cli
    3866:	de bf       	out	0x3e, r29	; 62
    3868:	0f be       	out	0x3f, r0	; 63
    386a:	cd bf       	out	0x3d, r28	; 61
    386c:	9a 83       	std	Y+2, r25	; 0x02
    386e:	89 83       	std	Y+1, r24	; 0x01
    3870:	7c 83       	std	Y+4, r23	; 0x04
    3872:	6b 83       	std	Y+3, r22	; 0x03
    3874:	5e 83       	std	Y+6, r21	; 0x06
    3876:	4d 83       	std	Y+5, r20	; 0x05
    3878:	38 87       	std	Y+8, r19	; 0x08
    387a:	2f 83       	std	Y+7, r18	; 0x07
    387c:	1a 87       	std	Y+10, r17	; 0x0a
    387e:	09 87       	std	Y+9, r16	; 0x09
    3880:	89 81       	ldd	r24, Y+1	; 0x01
    3882:	9a 81       	ldd	r25, Y+2	; 0x02
    3884:	dc 01       	movw	r26, r24
    3886:	8d 91       	ld	r24, X+
    3888:	9c 91       	ld	r25, X
    388a:	4e 96       	adiw	r24, 0x1e	; 30
    388c:	dc 01       	movw	r26, r24
    388e:	ed 91       	ld	r30, X+
    3890:	fc 91       	ld	r31, X
    3892:	a9 85       	ldd	r26, Y+9	; 0x09
    3894:	ba 85       	ldd	r27, Y+10	; 0x0a
    3896:	2f 81       	ldd	r18, Y+7	; 0x07
    3898:	38 85       	ldd	r19, Y+8	; 0x08
    389a:	4d 81       	ldd	r20, Y+5	; 0x05
    389c:	5e 81       	ldd	r21, Y+6	; 0x06
    389e:	6b 81       	ldd	r22, Y+3	; 0x03
    38a0:	7c 81       	ldd	r23, Y+4	; 0x04
    38a2:	89 81       	ldd	r24, Y+1	; 0x01
    38a4:	9a 81       	ldd	r25, Y+2	; 0x02
    38a6:	8d 01       	movw	r16, r26
    38a8:	19 95       	eicall
    38aa:	00 00       	nop
    38ac:	2a 96       	adiw	r28, 0x0a	; 10
    38ae:	0f b6       	in	r0, 0x3f	; 63
    38b0:	f8 94       	cli
    38b2:	de bf       	out	0x3e, r29	; 62
    38b4:	0f be       	out	0x3f, r0	; 63
    38b6:	cd bf       	out	0x3d, r28	; 61
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	08 95       	ret

000038c2 <_ZN12Adafruit_GFX13writeFillRectEiiiij>:
    38c2:	ef 92       	push	r14
    38c4:	ff 92       	push	r15
    38c6:	0f 93       	push	r16
    38c8:	1f 93       	push	r17
    38ca:	cf 93       	push	r28
    38cc:	df 93       	push	r29
    38ce:	cd b7       	in	r28, 0x3d	; 61
    38d0:	de b7       	in	r29, 0x3e	; 62
    38d2:	2c 97       	sbiw	r28, 0x0c	; 12
    38d4:	0f b6       	in	r0, 0x3f	; 63
    38d6:	f8 94       	cli
    38d8:	de bf       	out	0x3e, r29	; 62
    38da:	0f be       	out	0x3f, r0	; 63
    38dc:	cd bf       	out	0x3d, r28	; 61
    38de:	9a 83       	std	Y+2, r25	; 0x02
    38e0:	89 83       	std	Y+1, r24	; 0x01
    38e2:	7c 83       	std	Y+4, r23	; 0x04
    38e4:	6b 83       	std	Y+3, r22	; 0x03
    38e6:	5e 83       	std	Y+6, r21	; 0x06
    38e8:	4d 83       	std	Y+5, r20	; 0x05
    38ea:	38 87       	std	Y+8, r19	; 0x08
    38ec:	2f 83       	std	Y+7, r18	; 0x07
    38ee:	1a 87       	std	Y+10, r17	; 0x0a
    38f0:	09 87       	std	Y+9, r16	; 0x09
    38f2:	fc 86       	std	Y+12, r15	; 0x0c
    38f4:	eb 86       	std	Y+11, r14	; 0x0b
    38f6:	89 81       	ldd	r24, Y+1	; 0x01
    38f8:	9a 81       	ldd	r25, Y+2	; 0x02
    38fa:	dc 01       	movw	r26, r24
    38fc:	8d 91       	ld	r24, X+
    38fe:	9c 91       	ld	r25, X
    3900:	80 96       	adiw	r24, 0x20	; 32
    3902:	dc 01       	movw	r26, r24
    3904:	ed 91       	ld	r30, X+
    3906:	fc 91       	ld	r31, X
    3908:	0b 85       	ldd	r16, Y+11	; 0x0b
    390a:	1c 85       	ldd	r17, Y+12	; 0x0c
    390c:	a9 85       	ldd	r26, Y+9	; 0x09
    390e:	ba 85       	ldd	r27, Y+10	; 0x0a
    3910:	2f 81       	ldd	r18, Y+7	; 0x07
    3912:	38 85       	ldd	r19, Y+8	; 0x08
    3914:	4d 81       	ldd	r20, Y+5	; 0x05
    3916:	5e 81       	ldd	r21, Y+6	; 0x06
    3918:	6b 81       	ldd	r22, Y+3	; 0x03
    391a:	7c 81       	ldd	r23, Y+4	; 0x04
    391c:	89 81       	ldd	r24, Y+1	; 0x01
    391e:	9a 81       	ldd	r25, Y+2	; 0x02
    3920:	78 01       	movw	r14, r16
    3922:	8d 01       	movw	r16, r26
    3924:	19 95       	eicall
    3926:	00 00       	nop
    3928:	2c 96       	adiw	r28, 0x0c	; 12
    392a:	0f b6       	in	r0, 0x3f	; 63
    392c:	f8 94       	cli
    392e:	de bf       	out	0x3e, r29	; 62
    3930:	0f be       	out	0x3f, r0	; 63
    3932:	cd bf       	out	0x3d, r28	; 61
    3934:	df 91       	pop	r29
    3936:	cf 91       	pop	r28
    3938:	1f 91       	pop	r17
    393a:	0f 91       	pop	r16
    393c:	ff 90       	pop	r15
    393e:	ef 90       	pop	r14
    3940:	08 95       	ret

00003942 <_ZN12Adafruit_GFX8endWriteEv>:
    3942:	cf 93       	push	r28
    3944:	df 93       	push	r29
    3946:	1f 92       	push	r1
    3948:	1f 92       	push	r1
    394a:	cd b7       	in	r28, 0x3d	; 61
    394c:	de b7       	in	r29, 0x3e	; 62
    394e:	9a 83       	std	Y+2, r25	; 0x02
    3950:	89 83       	std	Y+1, r24	; 0x01
    3952:	00 00       	nop
    3954:	0f 90       	pop	r0
    3956:	0f 90       	pop	r0
    3958:	df 91       	pop	r29
    395a:	cf 91       	pop	r28
    395c:	08 95       	ret

0000395e <_ZN12Adafruit_GFX13drawFastVLineEiiij>:
    395e:	ef 92       	push	r14
    3960:	ff 92       	push	r15
    3962:	0f 93       	push	r16
    3964:	1f 93       	push	r17
    3966:	cf 93       	push	r28
    3968:	df 93       	push	r29
    396a:	cd b7       	in	r28, 0x3d	; 61
    396c:	de b7       	in	r29, 0x3e	; 62
    396e:	2a 97       	sbiw	r28, 0x0a	; 10
    3970:	0f b6       	in	r0, 0x3f	; 63
    3972:	f8 94       	cli
    3974:	de bf       	out	0x3e, r29	; 62
    3976:	0f be       	out	0x3f, r0	; 63
    3978:	cd bf       	out	0x3d, r28	; 61
    397a:	9a 83       	std	Y+2, r25	; 0x02
    397c:	89 83       	std	Y+1, r24	; 0x01
    397e:	7c 83       	std	Y+4, r23	; 0x04
    3980:	6b 83       	std	Y+3, r22	; 0x03
    3982:	5e 83       	std	Y+6, r21	; 0x06
    3984:	4d 83       	std	Y+5, r20	; 0x05
    3986:	38 87       	std	Y+8, r19	; 0x08
    3988:	2f 83       	std	Y+7, r18	; 0x07
    398a:	1a 87       	std	Y+10, r17	; 0x0a
    398c:	09 87       	std	Y+9, r16	; 0x09
    398e:	89 81       	ldd	r24, Y+1	; 0x01
    3990:	9a 81       	ldd	r25, Y+2	; 0x02
    3992:	dc 01       	movw	r26, r24
    3994:	8d 91       	ld	r24, X+
    3996:	9c 91       	ld	r25, X
    3998:	0a 96       	adiw	r24, 0x0a	; 10
    399a:	fc 01       	movw	r30, r24
    399c:	20 81       	ld	r18, Z
    399e:	31 81       	ldd	r19, Z+1	; 0x01
    39a0:	89 81       	ldd	r24, Y+1	; 0x01
    39a2:	9a 81       	ldd	r25, Y+2	; 0x02
    39a4:	f9 01       	movw	r30, r18
    39a6:	19 95       	eicall
    39a8:	89 81       	ldd	r24, Y+1	; 0x01
    39aa:	9a 81       	ldd	r25, Y+2	; 0x02
    39ac:	dc 01       	movw	r26, r24
    39ae:	8d 91       	ld	r24, X+
    39b0:	9c 91       	ld	r25, X
    39b2:	44 96       	adiw	r24, 0x14	; 20
    39b4:	dc 01       	movw	r26, r24
    39b6:	ed 91       	ld	r30, X+
    39b8:	fc 91       	ld	r31, X
    39ba:	2d 81       	ldd	r18, Y+5	; 0x05
    39bc:	3e 81       	ldd	r19, Y+6	; 0x06
    39be:	8f 81       	ldd	r24, Y+7	; 0x07
    39c0:	98 85       	ldd	r25, Y+8	; 0x08
    39c2:	82 0f       	add	r24, r18
    39c4:	93 1f       	adc	r25, r19
    39c6:	dc 01       	movw	r26, r24
    39c8:	11 97       	sbiw	r26, 0x01	; 1
    39ca:	09 85       	ldd	r16, Y+9	; 0x09
    39cc:	1a 85       	ldd	r17, Y+10	; 0x0a
    39ce:	2b 81       	ldd	r18, Y+3	; 0x03
    39d0:	3c 81       	ldd	r19, Y+4	; 0x04
    39d2:	4d 81       	ldd	r20, Y+5	; 0x05
    39d4:	5e 81       	ldd	r21, Y+6	; 0x06
    39d6:	6b 81       	ldd	r22, Y+3	; 0x03
    39d8:	7c 81       	ldd	r23, Y+4	; 0x04
    39da:	89 81       	ldd	r24, Y+1	; 0x01
    39dc:	9a 81       	ldd	r25, Y+2	; 0x02
    39de:	78 01       	movw	r14, r16
    39e0:	8d 01       	movw	r16, r26
    39e2:	19 95       	eicall
    39e4:	89 81       	ldd	r24, Y+1	; 0x01
    39e6:	9a 81       	ldd	r25, Y+2	; 0x02
    39e8:	fc 01       	movw	r30, r24
    39ea:	80 81       	ld	r24, Z
    39ec:	91 81       	ldd	r25, Z+1	; 0x01
    39ee:	46 96       	adiw	r24, 0x16	; 22
    39f0:	dc 01       	movw	r26, r24
    39f2:	2d 91       	ld	r18, X+
    39f4:	3c 91       	ld	r19, X
    39f6:	89 81       	ldd	r24, Y+1	; 0x01
    39f8:	9a 81       	ldd	r25, Y+2	; 0x02
    39fa:	f9 01       	movw	r30, r18
    39fc:	19 95       	eicall
    39fe:	00 00       	nop
    3a00:	2a 96       	adiw	r28, 0x0a	; 10
    3a02:	0f b6       	in	r0, 0x3f	; 63
    3a04:	f8 94       	cli
    3a06:	de bf       	out	0x3e, r29	; 62
    3a08:	0f be       	out	0x3f, r0	; 63
    3a0a:	cd bf       	out	0x3d, r28	; 61
    3a0c:	df 91       	pop	r29
    3a0e:	cf 91       	pop	r28
    3a10:	1f 91       	pop	r17
    3a12:	0f 91       	pop	r16
    3a14:	ff 90       	pop	r15
    3a16:	ef 90       	pop	r14
    3a18:	08 95       	ret

00003a1a <_ZN12Adafruit_GFX13drawFastHLineEiiij>:
    3a1a:	ef 92       	push	r14
    3a1c:	ff 92       	push	r15
    3a1e:	0f 93       	push	r16
    3a20:	1f 93       	push	r17
    3a22:	cf 93       	push	r28
    3a24:	df 93       	push	r29
    3a26:	cd b7       	in	r28, 0x3d	; 61
    3a28:	de b7       	in	r29, 0x3e	; 62
    3a2a:	2a 97       	sbiw	r28, 0x0a	; 10
    3a2c:	0f b6       	in	r0, 0x3f	; 63
    3a2e:	f8 94       	cli
    3a30:	de bf       	out	0x3e, r29	; 62
    3a32:	0f be       	out	0x3f, r0	; 63
    3a34:	cd bf       	out	0x3d, r28	; 61
    3a36:	9a 83       	std	Y+2, r25	; 0x02
    3a38:	89 83       	std	Y+1, r24	; 0x01
    3a3a:	7c 83       	std	Y+4, r23	; 0x04
    3a3c:	6b 83       	std	Y+3, r22	; 0x03
    3a3e:	5e 83       	std	Y+6, r21	; 0x06
    3a40:	4d 83       	std	Y+5, r20	; 0x05
    3a42:	38 87       	std	Y+8, r19	; 0x08
    3a44:	2f 83       	std	Y+7, r18	; 0x07
    3a46:	1a 87       	std	Y+10, r17	; 0x0a
    3a48:	09 87       	std	Y+9, r16	; 0x09
    3a4a:	89 81       	ldd	r24, Y+1	; 0x01
    3a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a4e:	dc 01       	movw	r26, r24
    3a50:	8d 91       	ld	r24, X+
    3a52:	9c 91       	ld	r25, X
    3a54:	0a 96       	adiw	r24, 0x0a	; 10
    3a56:	fc 01       	movw	r30, r24
    3a58:	20 81       	ld	r18, Z
    3a5a:	31 81       	ldd	r19, Z+1	; 0x01
    3a5c:	89 81       	ldd	r24, Y+1	; 0x01
    3a5e:	9a 81       	ldd	r25, Y+2	; 0x02
    3a60:	f9 01       	movw	r30, r18
    3a62:	19 95       	eicall
    3a64:	89 81       	ldd	r24, Y+1	; 0x01
    3a66:	9a 81       	ldd	r25, Y+2	; 0x02
    3a68:	dc 01       	movw	r26, r24
    3a6a:	8d 91       	ld	r24, X+
    3a6c:	9c 91       	ld	r25, X
    3a6e:	44 96       	adiw	r24, 0x14	; 20
    3a70:	dc 01       	movw	r26, r24
    3a72:	ed 91       	ld	r30, X+
    3a74:	fc 91       	ld	r31, X
    3a76:	2b 81       	ldd	r18, Y+3	; 0x03
    3a78:	3c 81       	ldd	r19, Y+4	; 0x04
    3a7a:	8f 81       	ldd	r24, Y+7	; 0x07
    3a7c:	98 85       	ldd	r25, Y+8	; 0x08
    3a7e:	82 0f       	add	r24, r18
    3a80:	93 1f       	adc	r25, r19
    3a82:	9c 01       	movw	r18, r24
    3a84:	21 50       	subi	r18, 0x01	; 1
    3a86:	31 09       	sbc	r19, r1
    3a88:	09 85       	ldd	r16, Y+9	; 0x09
    3a8a:	1a 85       	ldd	r17, Y+10	; 0x0a
    3a8c:	ad 81       	ldd	r26, Y+5	; 0x05
    3a8e:	be 81       	ldd	r27, Y+6	; 0x06
    3a90:	4d 81       	ldd	r20, Y+5	; 0x05
    3a92:	5e 81       	ldd	r21, Y+6	; 0x06
    3a94:	6b 81       	ldd	r22, Y+3	; 0x03
    3a96:	7c 81       	ldd	r23, Y+4	; 0x04
    3a98:	89 81       	ldd	r24, Y+1	; 0x01
    3a9a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a9c:	78 01       	movw	r14, r16
    3a9e:	8d 01       	movw	r16, r26
    3aa0:	19 95       	eicall
    3aa2:	89 81       	ldd	r24, Y+1	; 0x01
    3aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    3aa6:	fc 01       	movw	r30, r24
    3aa8:	80 81       	ld	r24, Z
    3aaa:	91 81       	ldd	r25, Z+1	; 0x01
    3aac:	46 96       	adiw	r24, 0x16	; 22
    3aae:	dc 01       	movw	r26, r24
    3ab0:	2d 91       	ld	r18, X+
    3ab2:	3c 91       	ld	r19, X
    3ab4:	89 81       	ldd	r24, Y+1	; 0x01
    3ab6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ab8:	f9 01       	movw	r30, r18
    3aba:	19 95       	eicall
    3abc:	00 00       	nop
    3abe:	2a 96       	adiw	r28, 0x0a	; 10
    3ac0:	0f b6       	in	r0, 0x3f	; 63
    3ac2:	f8 94       	cli
    3ac4:	de bf       	out	0x3e, r29	; 62
    3ac6:	0f be       	out	0x3f, r0	; 63
    3ac8:	cd bf       	out	0x3d, r28	; 61
    3aca:	df 91       	pop	r29
    3acc:	cf 91       	pop	r28
    3ace:	1f 91       	pop	r17
    3ad0:	0f 91       	pop	r16
    3ad2:	ff 90       	pop	r15
    3ad4:	ef 90       	pop	r14
    3ad6:	08 95       	ret

00003ad8 <_ZN12Adafruit_GFX8fillRectEiiiij>:
    3ad8:	ef 92       	push	r14
    3ada:	ff 92       	push	r15
    3adc:	0f 93       	push	r16
    3ade:	1f 93       	push	r17
    3ae0:	cf 93       	push	r28
    3ae2:	df 93       	push	r29
    3ae4:	cd b7       	in	r28, 0x3d	; 61
    3ae6:	de b7       	in	r29, 0x3e	; 62
    3ae8:	2e 97       	sbiw	r28, 0x0e	; 14
    3aea:	0f b6       	in	r0, 0x3f	; 63
    3aec:	f8 94       	cli
    3aee:	de bf       	out	0x3e, r29	; 62
    3af0:	0f be       	out	0x3f, r0	; 63
    3af2:	cd bf       	out	0x3d, r28	; 61
    3af4:	9c 83       	std	Y+4, r25	; 0x04
    3af6:	8b 83       	std	Y+3, r24	; 0x03
    3af8:	7e 83       	std	Y+6, r23	; 0x06
    3afa:	6d 83       	std	Y+5, r22	; 0x05
    3afc:	58 87       	std	Y+8, r21	; 0x08
    3afe:	4f 83       	std	Y+7, r20	; 0x07
    3b00:	3a 87       	std	Y+10, r19	; 0x0a
    3b02:	29 87       	std	Y+9, r18	; 0x09
    3b04:	1c 87       	std	Y+12, r17	; 0x0c
    3b06:	0b 87       	std	Y+11, r16	; 0x0b
    3b08:	fe 86       	std	Y+14, r15	; 0x0e
    3b0a:	ed 86       	std	Y+13, r14	; 0x0d
    3b0c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b0e:	9c 81       	ldd	r25, Y+4	; 0x04
    3b10:	dc 01       	movw	r26, r24
    3b12:	8d 91       	ld	r24, X+
    3b14:	9c 91       	ld	r25, X
    3b16:	0a 96       	adiw	r24, 0x0a	; 10
    3b18:	fc 01       	movw	r30, r24
    3b1a:	20 81       	ld	r18, Z
    3b1c:	31 81       	ldd	r19, Z+1	; 0x01
    3b1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3b20:	9c 81       	ldd	r25, Y+4	; 0x04
    3b22:	f9 01       	movw	r30, r18
    3b24:	19 95       	eicall
    3b26:	8d 81       	ldd	r24, Y+5	; 0x05
    3b28:	9e 81       	ldd	r25, Y+6	; 0x06
    3b2a:	9a 83       	std	Y+2, r25	; 0x02
    3b2c:	89 83       	std	Y+1, r24	; 0x01
    3b2e:	2d 81       	ldd	r18, Y+5	; 0x05
    3b30:	3e 81       	ldd	r19, Y+6	; 0x06
    3b32:	89 85       	ldd	r24, Y+9	; 0x09
    3b34:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b36:	28 0f       	add	r18, r24
    3b38:	39 1f       	adc	r19, r25
    3b3a:	89 81       	ldd	r24, Y+1	; 0x01
    3b3c:	9a 81       	ldd	r25, Y+2	; 0x02
    3b3e:	82 17       	cp	r24, r18
    3b40:	93 07       	cpc	r25, r19
    3b42:	dc f4       	brge	.+54     	; 0x3b7a <_ZN12Adafruit_GFX8fillRectEiiiij+0xa2>
    3b44:	8b 81       	ldd	r24, Y+3	; 0x03
    3b46:	9c 81       	ldd	r25, Y+4	; 0x04
    3b48:	dc 01       	movw	r26, r24
    3b4a:	8d 91       	ld	r24, X+
    3b4c:	9c 91       	ld	r25, X
    3b4e:	40 96       	adiw	r24, 0x10	; 16
    3b50:	dc 01       	movw	r26, r24
    3b52:	ed 91       	ld	r30, X+
    3b54:	fc 91       	ld	r31, X
    3b56:	ad 85       	ldd	r26, Y+13	; 0x0d
    3b58:	be 85       	ldd	r27, Y+14	; 0x0e
    3b5a:	2b 85       	ldd	r18, Y+11	; 0x0b
    3b5c:	3c 85       	ldd	r19, Y+12	; 0x0c
    3b5e:	4f 81       	ldd	r20, Y+7	; 0x07
    3b60:	58 85       	ldd	r21, Y+8	; 0x08
    3b62:	69 81       	ldd	r22, Y+1	; 0x01
    3b64:	7a 81       	ldd	r23, Y+2	; 0x02
    3b66:	8b 81       	ldd	r24, Y+3	; 0x03
    3b68:	9c 81       	ldd	r25, Y+4	; 0x04
    3b6a:	8d 01       	movw	r16, r26
    3b6c:	19 95       	eicall
    3b6e:	89 81       	ldd	r24, Y+1	; 0x01
    3b70:	9a 81       	ldd	r25, Y+2	; 0x02
    3b72:	01 96       	adiw	r24, 0x01	; 1
    3b74:	9a 83       	std	Y+2, r25	; 0x02
    3b76:	89 83       	std	Y+1, r24	; 0x01
    3b78:	da cf       	rjmp	.-76     	; 0x3b2e <_ZN12Adafruit_GFX8fillRectEiiiij+0x56>
    3b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b7c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b7e:	fc 01       	movw	r30, r24
    3b80:	80 81       	ld	r24, Z
    3b82:	91 81       	ldd	r25, Z+1	; 0x01
    3b84:	46 96       	adiw	r24, 0x16	; 22
    3b86:	dc 01       	movw	r26, r24
    3b88:	2d 91       	ld	r18, X+
    3b8a:	3c 91       	ld	r19, X
    3b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    3b90:	f9 01       	movw	r30, r18
    3b92:	19 95       	eicall
    3b94:	00 00       	nop
    3b96:	2e 96       	adiw	r28, 0x0e	; 14
    3b98:	0f b6       	in	r0, 0x3f	; 63
    3b9a:	f8 94       	cli
    3b9c:	de bf       	out	0x3e, r29	; 62
    3b9e:	0f be       	out	0x3f, r0	; 63
    3ba0:	cd bf       	out	0x3d, r28	; 61
    3ba2:	df 91       	pop	r29
    3ba4:	cf 91       	pop	r28
    3ba6:	1f 91       	pop	r17
    3ba8:	0f 91       	pop	r16
    3baa:	ff 90       	pop	r15
    3bac:	ef 90       	pop	r14
    3bae:	08 95       	ret

00003bb0 <_ZN12Adafruit_GFX10fillScreenEj>:
    3bb0:	ef 92       	push	r14
    3bb2:	ff 92       	push	r15
    3bb4:	0f 93       	push	r16
    3bb6:	1f 93       	push	r17
    3bb8:	cf 93       	push	r28
    3bba:	df 93       	push	r29
    3bbc:	00 d0       	rcall	.+0      	; 0x3bbe <_ZN12Adafruit_GFX10fillScreenEj+0xe>
    3bbe:	1f 92       	push	r1
    3bc0:	cd b7       	in	r28, 0x3d	; 61
    3bc2:	de b7       	in	r29, 0x3e	; 62
    3bc4:	9a 83       	std	Y+2, r25	; 0x02
    3bc6:	89 83       	std	Y+1, r24	; 0x01
    3bc8:	7c 83       	std	Y+4, r23	; 0x04
    3bca:	6b 83       	std	Y+3, r22	; 0x03
    3bcc:	89 81       	ldd	r24, Y+1	; 0x01
    3bce:	9a 81       	ldd	r25, Y+2	; 0x02
    3bd0:	dc 01       	movw	r26, r24
    3bd2:	8d 91       	ld	r24, X+
    3bd4:	9c 91       	ld	r25, X
    3bd6:	80 96       	adiw	r24, 0x20	; 32
    3bd8:	dc 01       	movw	r26, r24
    3bda:	ed 91       	ld	r30, X+
    3bdc:	fc 91       	ld	r31, X
    3bde:	89 81       	ldd	r24, Y+1	; 0x01
    3be0:	9a 81       	ldd	r25, Y+2	; 0x02
    3be2:	dc 01       	movw	r26, r24
    3be4:	1a 96       	adiw	r26, 0x0a	; 10
    3be6:	4d 91       	ld	r20, X+
    3be8:	5c 91       	ld	r21, X
    3bea:	1b 97       	sbiw	r26, 0x0b	; 11
    3bec:	89 81       	ldd	r24, Y+1	; 0x01
    3bee:	9a 81       	ldd	r25, Y+2	; 0x02
    3bf0:	dc 01       	movw	r26, r24
    3bf2:	18 96       	adiw	r26, 0x08	; 8
    3bf4:	2d 91       	ld	r18, X+
    3bf6:	3c 91       	ld	r19, X
    3bf8:	19 97       	sbiw	r26, 0x09	; 9
    3bfa:	6b 81       	ldd	r22, Y+3	; 0x03
    3bfc:	7c 81       	ldd	r23, Y+4	; 0x04
    3bfe:	89 81       	ldd	r24, Y+1	; 0x01
    3c00:	9a 81       	ldd	r25, Y+2	; 0x02
    3c02:	7b 01       	movw	r14, r22
    3c04:	8a 01       	movw	r16, r20
    3c06:	40 e0       	ldi	r20, 0x00	; 0
    3c08:	50 e0       	ldi	r21, 0x00	; 0
    3c0a:	60 e0       	ldi	r22, 0x00	; 0
    3c0c:	70 e0       	ldi	r23, 0x00	; 0
    3c0e:	19 95       	eicall
    3c10:	00 00       	nop
    3c12:	0f 90       	pop	r0
    3c14:	0f 90       	pop	r0
    3c16:	0f 90       	pop	r0
    3c18:	0f 90       	pop	r0
    3c1a:	df 91       	pop	r29
    3c1c:	cf 91       	pop	r28
    3c1e:	1f 91       	pop	r17
    3c20:	0f 91       	pop	r16
    3c22:	ff 90       	pop	r15
    3c24:	ef 90       	pop	r14
    3c26:	08 95       	ret

00003c28 <_ZN12Adafruit_GFX8drawLineEiiiij>:
    3c28:	ef 92       	push	r14
    3c2a:	ff 92       	push	r15
    3c2c:	0f 93       	push	r16
    3c2e:	1f 93       	push	r17
    3c30:	cf 93       	push	r28
    3c32:	df 93       	push	r29
    3c34:	cd b7       	in	r28, 0x3d	; 61
    3c36:	de b7       	in	r29, 0x3e	; 62
    3c38:	60 97       	sbiw	r28, 0x10	; 16
    3c3a:	0f b6       	in	r0, 0x3f	; 63
    3c3c:	f8 94       	cli
    3c3e:	de bf       	out	0x3e, r29	; 62
    3c40:	0f be       	out	0x3f, r0	; 63
    3c42:	cd bf       	out	0x3d, r28	; 61
    3c44:	9e 83       	std	Y+6, r25	; 0x06
    3c46:	8d 83       	std	Y+5, r24	; 0x05
    3c48:	78 87       	std	Y+8, r23	; 0x08
    3c4a:	6f 83       	std	Y+7, r22	; 0x07
    3c4c:	5a 87       	std	Y+10, r21	; 0x0a
    3c4e:	49 87       	std	Y+9, r20	; 0x09
    3c50:	3c 87       	std	Y+12, r19	; 0x0c
    3c52:	2b 87       	std	Y+11, r18	; 0x0b
    3c54:	1e 87       	std	Y+14, r17	; 0x0e
    3c56:	0d 87       	std	Y+13, r16	; 0x0d
    3c58:	f8 8a       	std	Y+16, r15	; 0x10
    3c5a:	ef 86       	std	Y+15, r14	; 0x0f
    3c5c:	2f 81       	ldd	r18, Y+7	; 0x07
    3c5e:	38 85       	ldd	r19, Y+8	; 0x08
    3c60:	8b 85       	ldd	r24, Y+11	; 0x0b
    3c62:	9c 85       	ldd	r25, Y+12	; 0x0c
    3c64:	28 17       	cp	r18, r24
    3c66:	39 07       	cpc	r19, r25
    3c68:	91 f5       	brne	.+100    	; 0x3cce <_ZN12Adafruit_GFX8drawLineEiiiij+0xa6>
    3c6a:	29 85       	ldd	r18, Y+9	; 0x09
    3c6c:	3a 85       	ldd	r19, Y+10	; 0x0a
    3c6e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c70:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c72:	82 17       	cp	r24, r18
    3c74:	93 07       	cpc	r25, r19
    3c76:	64 f4       	brge	.+24     	; 0x3c90 <_ZN12Adafruit_GFX8drawLineEiiiij+0x68>
    3c78:	89 85       	ldd	r24, Y+9	; 0x09
    3c7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c7c:	9a 83       	std	Y+2, r25	; 0x02
    3c7e:	89 83       	std	Y+1, r24	; 0x01
    3c80:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c82:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c84:	9a 87       	std	Y+10, r25	; 0x0a
    3c86:	89 87       	std	Y+9, r24	; 0x09
    3c88:	89 81       	ldd	r24, Y+1	; 0x01
    3c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c8c:	9e 87       	std	Y+14, r25	; 0x0e
    3c8e:	8d 87       	std	Y+13, r24	; 0x0d
    3c90:	8d 81       	ldd	r24, Y+5	; 0x05
    3c92:	9e 81       	ldd	r25, Y+6	; 0x06
    3c94:	dc 01       	movw	r26, r24
    3c96:	8d 91       	ld	r24, X+
    3c98:	9c 91       	ld	r25, X
    3c9a:	4c 96       	adiw	r24, 0x1c	; 28
    3c9c:	dc 01       	movw	r26, r24
    3c9e:	ed 91       	ld	r30, X+
    3ca0:	fc 91       	ld	r31, X
    3ca2:	2d 85       	ldd	r18, Y+13	; 0x0d
    3ca4:	3e 85       	ldd	r19, Y+14	; 0x0e
    3ca6:	89 85       	ldd	r24, Y+9	; 0x09
    3ca8:	9a 85       	ldd	r25, Y+10	; 0x0a
    3caa:	a9 01       	movw	r20, r18
    3cac:	48 1b       	sub	r20, r24
    3cae:	59 0b       	sbc	r21, r25
    3cb0:	ca 01       	movw	r24, r20
    3cb2:	9c 01       	movw	r18, r24
    3cb4:	2f 5f       	subi	r18, 0xFF	; 255
    3cb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3cb8:	af 85       	ldd	r26, Y+15	; 0x0f
    3cba:	b8 89       	ldd	r27, Y+16	; 0x10
    3cbc:	49 85       	ldd	r20, Y+9	; 0x09
    3cbe:	5a 85       	ldd	r21, Y+10	; 0x0a
    3cc0:	6f 81       	ldd	r22, Y+7	; 0x07
    3cc2:	78 85       	ldd	r23, Y+8	; 0x08
    3cc4:	8d 81       	ldd	r24, Y+5	; 0x05
    3cc6:	9e 81       	ldd	r25, Y+6	; 0x06
    3cc8:	8d 01       	movw	r16, r26
    3cca:	19 95       	eicall
    3ccc:	6b c0       	rjmp	.+214    	; 0x3da4 <_ZN12Adafruit_GFX8drawLineEiiiij+0x17c>
    3cce:	29 85       	ldd	r18, Y+9	; 0x09
    3cd0:	3a 85       	ldd	r19, Y+10	; 0x0a
    3cd2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cd4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cd6:	28 17       	cp	r18, r24
    3cd8:	39 07       	cpc	r19, r25
    3cda:	91 f5       	brne	.+100    	; 0x3d40 <_ZN12Adafruit_GFX8drawLineEiiiij+0x118>
    3cdc:	2f 81       	ldd	r18, Y+7	; 0x07
    3cde:	38 85       	ldd	r19, Y+8	; 0x08
    3ce0:	8b 85       	ldd	r24, Y+11	; 0x0b
    3ce2:	9c 85       	ldd	r25, Y+12	; 0x0c
    3ce4:	82 17       	cp	r24, r18
    3ce6:	93 07       	cpc	r25, r19
    3ce8:	64 f4       	brge	.+24     	; 0x3d02 <_ZN12Adafruit_GFX8drawLineEiiiij+0xda>
    3cea:	8f 81       	ldd	r24, Y+7	; 0x07
    3cec:	98 85       	ldd	r25, Y+8	; 0x08
    3cee:	9c 83       	std	Y+4, r25	; 0x04
    3cf0:	8b 83       	std	Y+3, r24	; 0x03
    3cf2:	8b 85       	ldd	r24, Y+11	; 0x0b
    3cf4:	9c 85       	ldd	r25, Y+12	; 0x0c
    3cf6:	98 87       	std	Y+8, r25	; 0x08
    3cf8:	8f 83       	std	Y+7, r24	; 0x07
    3cfa:	8b 81       	ldd	r24, Y+3	; 0x03
    3cfc:	9c 81       	ldd	r25, Y+4	; 0x04
    3cfe:	9c 87       	std	Y+12, r25	; 0x0c
    3d00:	8b 87       	std	Y+11, r24	; 0x0b
    3d02:	8d 81       	ldd	r24, Y+5	; 0x05
    3d04:	9e 81       	ldd	r25, Y+6	; 0x06
    3d06:	dc 01       	movw	r26, r24
    3d08:	8d 91       	ld	r24, X+
    3d0a:	9c 91       	ld	r25, X
    3d0c:	4e 96       	adiw	r24, 0x1e	; 30
    3d0e:	dc 01       	movw	r26, r24
    3d10:	ed 91       	ld	r30, X+
    3d12:	fc 91       	ld	r31, X
    3d14:	2b 85       	ldd	r18, Y+11	; 0x0b
    3d16:	3c 85       	ldd	r19, Y+12	; 0x0c
    3d18:	8f 81       	ldd	r24, Y+7	; 0x07
    3d1a:	98 85       	ldd	r25, Y+8	; 0x08
    3d1c:	a9 01       	movw	r20, r18
    3d1e:	48 1b       	sub	r20, r24
    3d20:	59 0b       	sbc	r21, r25
    3d22:	ca 01       	movw	r24, r20
    3d24:	9c 01       	movw	r18, r24
    3d26:	2f 5f       	subi	r18, 0xFF	; 255
    3d28:	3f 4f       	sbci	r19, 0xFF	; 255
    3d2a:	af 85       	ldd	r26, Y+15	; 0x0f
    3d2c:	b8 89       	ldd	r27, Y+16	; 0x10
    3d2e:	49 85       	ldd	r20, Y+9	; 0x09
    3d30:	5a 85       	ldd	r21, Y+10	; 0x0a
    3d32:	6f 81       	ldd	r22, Y+7	; 0x07
    3d34:	78 85       	ldd	r23, Y+8	; 0x08
    3d36:	8d 81       	ldd	r24, Y+5	; 0x05
    3d38:	9e 81       	ldd	r25, Y+6	; 0x06
    3d3a:	8d 01       	movw	r16, r26
    3d3c:	19 95       	eicall
    3d3e:	32 c0       	rjmp	.+100    	; 0x3da4 <_ZN12Adafruit_GFX8drawLineEiiiij+0x17c>
    3d40:	8d 81       	ldd	r24, Y+5	; 0x05
    3d42:	9e 81       	ldd	r25, Y+6	; 0x06
    3d44:	dc 01       	movw	r26, r24
    3d46:	8d 91       	ld	r24, X+
    3d48:	9c 91       	ld	r25, X
    3d4a:	0a 96       	adiw	r24, 0x0a	; 10
    3d4c:	fc 01       	movw	r30, r24
    3d4e:	20 81       	ld	r18, Z
    3d50:	31 81       	ldd	r19, Z+1	; 0x01
    3d52:	8d 81       	ldd	r24, Y+5	; 0x05
    3d54:	9e 81       	ldd	r25, Y+6	; 0x06
    3d56:	f9 01       	movw	r30, r18
    3d58:	19 95       	eicall
    3d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d5c:	9e 81       	ldd	r25, Y+6	; 0x06
    3d5e:	dc 01       	movw	r26, r24
    3d60:	8d 91       	ld	r24, X+
    3d62:	9c 91       	ld	r25, X
    3d64:	44 96       	adiw	r24, 0x14	; 20
    3d66:	dc 01       	movw	r26, r24
    3d68:	ed 91       	ld	r30, X+
    3d6a:	fc 91       	ld	r31, X
    3d6c:	0f 85       	ldd	r16, Y+15	; 0x0f
    3d6e:	18 89       	ldd	r17, Y+16	; 0x10
    3d70:	ad 85       	ldd	r26, Y+13	; 0x0d
    3d72:	be 85       	ldd	r27, Y+14	; 0x0e
    3d74:	2b 85       	ldd	r18, Y+11	; 0x0b
    3d76:	3c 85       	ldd	r19, Y+12	; 0x0c
    3d78:	49 85       	ldd	r20, Y+9	; 0x09
    3d7a:	5a 85       	ldd	r21, Y+10	; 0x0a
    3d7c:	6f 81       	ldd	r22, Y+7	; 0x07
    3d7e:	78 85       	ldd	r23, Y+8	; 0x08
    3d80:	8d 81       	ldd	r24, Y+5	; 0x05
    3d82:	9e 81       	ldd	r25, Y+6	; 0x06
    3d84:	78 01       	movw	r14, r16
    3d86:	8d 01       	movw	r16, r26
    3d88:	19 95       	eicall
    3d8a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d8c:	9e 81       	ldd	r25, Y+6	; 0x06
    3d8e:	fc 01       	movw	r30, r24
    3d90:	80 81       	ld	r24, Z
    3d92:	91 81       	ldd	r25, Z+1	; 0x01
    3d94:	46 96       	adiw	r24, 0x16	; 22
    3d96:	dc 01       	movw	r26, r24
    3d98:	2d 91       	ld	r18, X+
    3d9a:	3c 91       	ld	r19, X
    3d9c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d9e:	9e 81       	ldd	r25, Y+6	; 0x06
    3da0:	f9 01       	movw	r30, r18
    3da2:	19 95       	eicall
    3da4:	00 00       	nop
    3da6:	60 96       	adiw	r28, 0x10	; 16
    3da8:	0f b6       	in	r0, 0x3f	; 63
    3daa:	f8 94       	cli
    3dac:	de bf       	out	0x3e, r29	; 62
    3dae:	0f be       	out	0x3f, r0	; 63
    3db0:	cd bf       	out	0x3d, r28	; 61
    3db2:	df 91       	pop	r29
    3db4:	cf 91       	pop	r28
    3db6:	1f 91       	pop	r17
    3db8:	0f 91       	pop	r16
    3dba:	ff 90       	pop	r15
    3dbc:	ef 90       	pop	r14
    3dbe:	08 95       	ret

00003dc0 <_ZN12Adafruit_GFX8drawRectEiiiij>:
    3dc0:	ef 92       	push	r14
    3dc2:	ff 92       	push	r15
    3dc4:	0f 93       	push	r16
    3dc6:	1f 93       	push	r17
    3dc8:	cf 93       	push	r28
    3dca:	df 93       	push	r29
    3dcc:	cd b7       	in	r28, 0x3d	; 61
    3dce:	de b7       	in	r29, 0x3e	; 62
    3dd0:	2c 97       	sbiw	r28, 0x0c	; 12
    3dd2:	0f b6       	in	r0, 0x3f	; 63
    3dd4:	f8 94       	cli
    3dd6:	de bf       	out	0x3e, r29	; 62
    3dd8:	0f be       	out	0x3f, r0	; 63
    3dda:	cd bf       	out	0x3d, r28	; 61
    3ddc:	9a 83       	std	Y+2, r25	; 0x02
    3dde:	89 83       	std	Y+1, r24	; 0x01
    3de0:	7c 83       	std	Y+4, r23	; 0x04
    3de2:	6b 83       	std	Y+3, r22	; 0x03
    3de4:	5e 83       	std	Y+6, r21	; 0x06
    3de6:	4d 83       	std	Y+5, r20	; 0x05
    3de8:	38 87       	std	Y+8, r19	; 0x08
    3dea:	2f 83       	std	Y+7, r18	; 0x07
    3dec:	1a 87       	std	Y+10, r17	; 0x0a
    3dee:	09 87       	std	Y+9, r16	; 0x09
    3df0:	fc 86       	std	Y+12, r15	; 0x0c
    3df2:	eb 86       	std	Y+11, r14	; 0x0b
    3df4:	89 81       	ldd	r24, Y+1	; 0x01
    3df6:	9a 81       	ldd	r25, Y+2	; 0x02
    3df8:	dc 01       	movw	r26, r24
    3dfa:	8d 91       	ld	r24, X+
    3dfc:	9c 91       	ld	r25, X
    3dfe:	0a 96       	adiw	r24, 0x0a	; 10
    3e00:	fc 01       	movw	r30, r24
    3e02:	20 81       	ld	r18, Z
    3e04:	31 81       	ldd	r19, Z+1	; 0x01
    3e06:	89 81       	ldd	r24, Y+1	; 0x01
    3e08:	9a 81       	ldd	r25, Y+2	; 0x02
    3e0a:	f9 01       	movw	r30, r18
    3e0c:	19 95       	eicall
    3e0e:	89 81       	ldd	r24, Y+1	; 0x01
    3e10:	9a 81       	ldd	r25, Y+2	; 0x02
    3e12:	dc 01       	movw	r26, r24
    3e14:	8d 91       	ld	r24, X+
    3e16:	9c 91       	ld	r25, X
    3e18:	42 96       	adiw	r24, 0x12	; 18
    3e1a:	dc 01       	movw	r26, r24
    3e1c:	ed 91       	ld	r30, X+
    3e1e:	fc 91       	ld	r31, X
    3e20:	ab 85       	ldd	r26, Y+11	; 0x0b
    3e22:	bc 85       	ldd	r27, Y+12	; 0x0c
    3e24:	2f 81       	ldd	r18, Y+7	; 0x07
    3e26:	38 85       	ldd	r19, Y+8	; 0x08
    3e28:	4d 81       	ldd	r20, Y+5	; 0x05
    3e2a:	5e 81       	ldd	r21, Y+6	; 0x06
    3e2c:	6b 81       	ldd	r22, Y+3	; 0x03
    3e2e:	7c 81       	ldd	r23, Y+4	; 0x04
    3e30:	89 81       	ldd	r24, Y+1	; 0x01
    3e32:	9a 81       	ldd	r25, Y+2	; 0x02
    3e34:	8d 01       	movw	r16, r26
    3e36:	19 95       	eicall
    3e38:	89 81       	ldd	r24, Y+1	; 0x01
    3e3a:	9a 81       	ldd	r25, Y+2	; 0x02
    3e3c:	fc 01       	movw	r30, r24
    3e3e:	80 81       	ld	r24, Z
    3e40:	91 81       	ldd	r25, Z+1	; 0x01
    3e42:	42 96       	adiw	r24, 0x12	; 18
    3e44:	dc 01       	movw	r26, r24
    3e46:	ed 91       	ld	r30, X+
    3e48:	fc 91       	ld	r31, X
    3e4a:	2d 81       	ldd	r18, Y+5	; 0x05
    3e4c:	3e 81       	ldd	r19, Y+6	; 0x06
    3e4e:	89 85       	ldd	r24, Y+9	; 0x09
    3e50:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e52:	82 0f       	add	r24, r18
    3e54:	93 1f       	adc	r25, r19
    3e56:	ac 01       	movw	r20, r24
    3e58:	41 50       	subi	r20, 0x01	; 1
    3e5a:	51 09       	sbc	r21, r1
    3e5c:	ab 85       	ldd	r26, Y+11	; 0x0b
    3e5e:	bc 85       	ldd	r27, Y+12	; 0x0c
    3e60:	2f 81       	ldd	r18, Y+7	; 0x07
    3e62:	38 85       	ldd	r19, Y+8	; 0x08
    3e64:	6b 81       	ldd	r22, Y+3	; 0x03
    3e66:	7c 81       	ldd	r23, Y+4	; 0x04
    3e68:	89 81       	ldd	r24, Y+1	; 0x01
    3e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    3e6c:	8d 01       	movw	r16, r26
    3e6e:	19 95       	eicall
    3e70:	89 81       	ldd	r24, Y+1	; 0x01
    3e72:	9a 81       	ldd	r25, Y+2	; 0x02
    3e74:	fc 01       	movw	r30, r24
    3e76:	80 81       	ld	r24, Z
    3e78:	91 81       	ldd	r25, Z+1	; 0x01
    3e7a:	40 96       	adiw	r24, 0x10	; 16
    3e7c:	dc 01       	movw	r26, r24
    3e7e:	ed 91       	ld	r30, X+
    3e80:	fc 91       	ld	r31, X
    3e82:	ab 85       	ldd	r26, Y+11	; 0x0b
    3e84:	bc 85       	ldd	r27, Y+12	; 0x0c
    3e86:	29 85       	ldd	r18, Y+9	; 0x09
    3e88:	3a 85       	ldd	r19, Y+10	; 0x0a
    3e8a:	4d 81       	ldd	r20, Y+5	; 0x05
    3e8c:	5e 81       	ldd	r21, Y+6	; 0x06
    3e8e:	6b 81       	ldd	r22, Y+3	; 0x03
    3e90:	7c 81       	ldd	r23, Y+4	; 0x04
    3e92:	89 81       	ldd	r24, Y+1	; 0x01
    3e94:	9a 81       	ldd	r25, Y+2	; 0x02
    3e96:	8d 01       	movw	r16, r26
    3e98:	19 95       	eicall
    3e9a:	89 81       	ldd	r24, Y+1	; 0x01
    3e9c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e9e:	fc 01       	movw	r30, r24
    3ea0:	80 81       	ld	r24, Z
    3ea2:	91 81       	ldd	r25, Z+1	; 0x01
    3ea4:	40 96       	adiw	r24, 0x10	; 16
    3ea6:	dc 01       	movw	r26, r24
    3ea8:	ed 91       	ld	r30, X+
    3eaa:	fc 91       	ld	r31, X
    3eac:	2b 81       	ldd	r18, Y+3	; 0x03
    3eae:	3c 81       	ldd	r19, Y+4	; 0x04
    3eb0:	8f 81       	ldd	r24, Y+7	; 0x07
    3eb2:	98 85       	ldd	r25, Y+8	; 0x08
    3eb4:	82 0f       	add	r24, r18
    3eb6:	93 1f       	adc	r25, r19
    3eb8:	bc 01       	movw	r22, r24
    3eba:	61 50       	subi	r22, 0x01	; 1
    3ebc:	71 09       	sbc	r23, r1
    3ebe:	ab 85       	ldd	r26, Y+11	; 0x0b
    3ec0:	bc 85       	ldd	r27, Y+12	; 0x0c
    3ec2:	29 85       	ldd	r18, Y+9	; 0x09
    3ec4:	3a 85       	ldd	r19, Y+10	; 0x0a
    3ec6:	4d 81       	ldd	r20, Y+5	; 0x05
    3ec8:	5e 81       	ldd	r21, Y+6	; 0x06
    3eca:	89 81       	ldd	r24, Y+1	; 0x01
    3ecc:	9a 81       	ldd	r25, Y+2	; 0x02
    3ece:	8d 01       	movw	r16, r26
    3ed0:	19 95       	eicall
    3ed2:	89 81       	ldd	r24, Y+1	; 0x01
    3ed4:	9a 81       	ldd	r25, Y+2	; 0x02
    3ed6:	fc 01       	movw	r30, r24
    3ed8:	80 81       	ld	r24, Z
    3eda:	91 81       	ldd	r25, Z+1	; 0x01
    3edc:	46 96       	adiw	r24, 0x16	; 22
    3ede:	dc 01       	movw	r26, r24
    3ee0:	2d 91       	ld	r18, X+
    3ee2:	3c 91       	ld	r19, X
    3ee4:	89 81       	ldd	r24, Y+1	; 0x01
    3ee6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ee8:	f9 01       	movw	r30, r18
    3eea:	19 95       	eicall
    3eec:	00 00       	nop
    3eee:	2c 96       	adiw	r28, 0x0c	; 12
    3ef0:	0f b6       	in	r0, 0x3f	; 63
    3ef2:	f8 94       	cli
    3ef4:	de bf       	out	0x3e, r29	; 62
    3ef6:	0f be       	out	0x3f, r0	; 63
    3ef8:	cd bf       	out	0x3d, r28	; 61
    3efa:	df 91       	pop	r29
    3efc:	cf 91       	pop	r28
    3efe:	1f 91       	pop	r17
    3f00:	0f 91       	pop	r16
    3f02:	ff 90       	pop	r15
    3f04:	ef 90       	pop	r14
    3f06:	08 95       	ret

00003f08 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>:
    3f08:	cf 92       	push	r12
    3f0a:	df 92       	push	r13
    3f0c:	ef 92       	push	r14
    3f0e:	ff 92       	push	r15
    3f10:	0f 93       	push	r16
    3f12:	1f 93       	push	r17
    3f14:	cf 93       	push	r28
    3f16:	df 93       	push	r29
    3f18:	cd b7       	in	r28, 0x3d	; 61
    3f1a:	de b7       	in	r29, 0x3e	; 62
    3f1c:	68 97       	sbiw	r28, 0x18	; 24
    3f1e:	0f b6       	in	r0, 0x3f	; 63
    3f20:	f8 94       	cli
    3f22:	de bf       	out	0x3e, r29	; 62
    3f24:	0f be       	out	0x3f, r0	; 63
    3f26:	cd bf       	out	0x3d, r28	; 61
    3f28:	9c 87       	std	Y+12, r25	; 0x0c
    3f2a:	8b 87       	std	Y+11, r24	; 0x0b
    3f2c:	7e 87       	std	Y+14, r23	; 0x0e
    3f2e:	6d 87       	std	Y+13, r22	; 0x0d
    3f30:	58 8b       	std	Y+16, r21	; 0x10
    3f32:	4f 87       	std	Y+15, r20	; 0x0f
    3f34:	3a 8b       	std	Y+18, r19	; 0x12
    3f36:	29 8b       	std	Y+17, r18	; 0x11
    3f38:	1c 8b       	std	Y+20, r17	; 0x14
    3f3a:	0b 8b       	std	Y+19, r16	; 0x13
    3f3c:	fe 8a       	std	Y+22, r15	; 0x16
    3f3e:	ed 8a       	std	Y+21, r14	; 0x15
    3f40:	d8 8e       	std	Y+24, r13	; 0x18
    3f42:	cf 8a       	std	Y+23, r12	; 0x17
    3f44:	8b 89       	ldd	r24, Y+19	; 0x13
    3f46:	9c 89       	ldd	r25, Y+20	; 0x14
    3f48:	07 96       	adiw	r24, 0x07	; 7
    3f4a:	99 23       	and	r25, r25
    3f4c:	0c f4       	brge	.+2      	; 0x3f50 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x48>
    3f4e:	07 96       	adiw	r24, 0x07	; 7
    3f50:	95 95       	asr	r25
    3f52:	87 95       	ror	r24
    3f54:	95 95       	asr	r25
    3f56:	87 95       	ror	r24
    3f58:	95 95       	asr	r25
    3f5a:	87 95       	ror	r24
    3f5c:	9f 83       	std	Y+7, r25	; 0x07
    3f5e:	8e 83       	std	Y+6, r24	; 0x06
    3f60:	19 82       	std	Y+1, r1	; 0x01
    3f62:	8b 85       	ldd	r24, Y+11	; 0x0b
    3f64:	9c 85       	ldd	r25, Y+12	; 0x0c
    3f66:	dc 01       	movw	r26, r24
    3f68:	8d 91       	ld	r24, X+
    3f6a:	9c 91       	ld	r25, X
    3f6c:	0a 96       	adiw	r24, 0x0a	; 10
    3f6e:	fc 01       	movw	r30, r24
    3f70:	20 81       	ld	r18, Z
    3f72:	31 81       	ldd	r19, Z+1	; 0x01
    3f74:	8b 85       	ldd	r24, Y+11	; 0x0b
    3f76:	9c 85       	ldd	r25, Y+12	; 0x0c
    3f78:	f9 01       	movw	r30, r18
    3f7a:	19 95       	eicall
    3f7c:	1b 82       	std	Y+3, r1	; 0x03
    3f7e:	1a 82       	std	Y+2, r1	; 0x02
    3f80:	2a 81       	ldd	r18, Y+2	; 0x02
    3f82:	3b 81       	ldd	r19, Y+3	; 0x03
    3f84:	8d 89       	ldd	r24, Y+21	; 0x15
    3f86:	9e 89       	ldd	r25, Y+22	; 0x16
    3f88:	28 17       	cp	r18, r24
    3f8a:	39 07       	cpc	r19, r25
    3f8c:	0c f0       	brlt	.+2      	; 0x3f90 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x88>
    3f8e:	65 c0       	rjmp	.+202    	; 0x405a <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x152>
    3f90:	1d 82       	std	Y+5, r1	; 0x05
    3f92:	1c 82       	std	Y+4, r1	; 0x04
    3f94:	2c 81       	ldd	r18, Y+4	; 0x04
    3f96:	3d 81       	ldd	r19, Y+5	; 0x05
    3f98:	8b 89       	ldd	r24, Y+19	; 0x13
    3f9a:	9c 89       	ldd	r25, Y+20	; 0x14
    3f9c:	28 17       	cp	r18, r24
    3f9e:	39 07       	cpc	r19, r25
    3fa0:	0c f0       	brlt	.+2      	; 0x3fa4 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x9c>
    3fa2:	50 c0       	rjmp	.+160    	; 0x4044 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x13c>
    3fa4:	8c 81       	ldd	r24, Y+4	; 0x04
    3fa6:	9d 81       	ldd	r25, Y+5	; 0x05
    3fa8:	87 70       	andi	r24, 0x07	; 7
    3faa:	99 27       	eor	r25, r25
    3fac:	89 2b       	or	r24, r25
    3fae:	21 f0       	breq	.+8      	; 0x3fb8 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xb0>
    3fb0:	89 81       	ldd	r24, Y+1	; 0x01
    3fb2:	88 0f       	add	r24, r24
    3fb4:	89 83       	std	Y+1, r24	; 0x01
    3fb6:	26 c0       	rjmp	.+76     	; 0x4004 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xfc>
    3fb8:	4a 81       	ldd	r20, Y+2	; 0x02
    3fba:	5b 81       	ldd	r21, Y+3	; 0x03
    3fbc:	8e 81       	ldd	r24, Y+6	; 0x06
    3fbe:	9f 81       	ldd	r25, Y+7	; 0x07
    3fc0:	48 9f       	mul	r20, r24
    3fc2:	90 01       	movw	r18, r0
    3fc4:	49 9f       	mul	r20, r25
    3fc6:	30 0d       	add	r19, r0
    3fc8:	58 9f       	mul	r21, r24
    3fca:	30 0d       	add	r19, r0
    3fcc:	11 24       	eor	r1, r1
    3fce:	8c 81       	ldd	r24, Y+4	; 0x04
    3fd0:	9d 81       	ldd	r25, Y+5	; 0x05
    3fd2:	99 23       	and	r25, r25
    3fd4:	0c f4       	brge	.+2      	; 0x3fd8 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0xd0>
    3fd6:	07 96       	adiw	r24, 0x07	; 7
    3fd8:	95 95       	asr	r25
    3fda:	87 95       	ror	r24
    3fdc:	95 95       	asr	r25
    3fde:	87 95       	ror	r24
    3fe0:	95 95       	asr	r25
    3fe2:	87 95       	ror	r24
    3fe4:	82 0f       	add	r24, r18
    3fe6:	93 1f       	adc	r25, r19
    3fe8:	9c 01       	movw	r18, r24
    3fea:	89 89       	ldd	r24, Y+17	; 0x11
    3fec:	9a 89       	ldd	r25, Y+18	; 0x12
    3fee:	82 0f       	add	r24, r18
    3ff0:	93 1f       	adc	r25, r19
    3ff2:	99 87       	std	Y+9, r25	; 0x09
    3ff4:	88 87       	std	Y+8, r24	; 0x08
    3ff6:	88 85       	ldd	r24, Y+8	; 0x08
    3ff8:	99 85       	ldd	r25, Y+9	; 0x09
    3ffa:	fc 01       	movw	r30, r24
    3ffc:	84 91       	lpm	r24, Z
    3ffe:	8a 87       	std	Y+10, r24	; 0x0a
    4000:	8a 85       	ldd	r24, Y+10	; 0x0a
    4002:	89 83       	std	Y+1, r24	; 0x01
    4004:	89 81       	ldd	r24, Y+1	; 0x01
    4006:	88 23       	and	r24, r24
    4008:	bc f4       	brge	.+46     	; 0x4038 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x130>
    400a:	8b 85       	ldd	r24, Y+11	; 0x0b
    400c:	9c 85       	ldd	r25, Y+12	; 0x0c
    400e:	dc 01       	movw	r26, r24
    4010:	8d 91       	ld	r24, X+
    4012:	9c 91       	ld	r25, X
    4014:	0c 96       	adiw	r24, 0x0c	; 12
    4016:	dc 01       	movw	r26, r24
    4018:	ed 91       	ld	r30, X+
    401a:	fc 91       	ld	r31, X
    401c:	2d 85       	ldd	r18, Y+13	; 0x0d
    401e:	3e 85       	ldd	r19, Y+14	; 0x0e
    4020:	8c 81       	ldd	r24, Y+4	; 0x04
    4022:	9d 81       	ldd	r25, Y+5	; 0x05
    4024:	b9 01       	movw	r22, r18
    4026:	68 0f       	add	r22, r24
    4028:	79 1f       	adc	r23, r25
    402a:	2f 89       	ldd	r18, Y+23	; 0x17
    402c:	38 8d       	ldd	r19, Y+24	; 0x18
    402e:	4f 85       	ldd	r20, Y+15	; 0x0f
    4030:	58 89       	ldd	r21, Y+16	; 0x10
    4032:	8b 85       	ldd	r24, Y+11	; 0x0b
    4034:	9c 85       	ldd	r25, Y+12	; 0x0c
    4036:	19 95       	eicall
    4038:	8c 81       	ldd	r24, Y+4	; 0x04
    403a:	9d 81       	ldd	r25, Y+5	; 0x05
    403c:	01 96       	adiw	r24, 0x01	; 1
    403e:	9d 83       	std	Y+5, r25	; 0x05
    4040:	8c 83       	std	Y+4, r24	; 0x04
    4042:	a8 cf       	rjmp	.-176    	; 0x3f94 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x8c>
    4044:	8a 81       	ldd	r24, Y+2	; 0x02
    4046:	9b 81       	ldd	r25, Y+3	; 0x03
    4048:	01 96       	adiw	r24, 0x01	; 1
    404a:	9b 83       	std	Y+3, r25	; 0x03
    404c:	8a 83       	std	Y+2, r24	; 0x02
    404e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4050:	98 89       	ldd	r25, Y+16	; 0x10
    4052:	01 96       	adiw	r24, 0x01	; 1
    4054:	98 8b       	std	Y+16, r25	; 0x10
    4056:	8f 87       	std	Y+15, r24	; 0x0f
    4058:	93 cf       	rjmp	.-218    	; 0x3f80 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij+0x78>
    405a:	8b 85       	ldd	r24, Y+11	; 0x0b
    405c:	9c 85       	ldd	r25, Y+12	; 0x0c
    405e:	fc 01       	movw	r30, r24
    4060:	80 81       	ld	r24, Z
    4062:	91 81       	ldd	r25, Z+1	; 0x01
    4064:	46 96       	adiw	r24, 0x16	; 22
    4066:	dc 01       	movw	r26, r24
    4068:	2d 91       	ld	r18, X+
    406a:	3c 91       	ld	r19, X
    406c:	8b 85       	ldd	r24, Y+11	; 0x0b
    406e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4070:	f9 01       	movw	r30, r18
    4072:	19 95       	eicall
    4074:	00 00       	nop
    4076:	68 96       	adiw	r28, 0x18	; 24
    4078:	0f b6       	in	r0, 0x3f	; 63
    407a:	f8 94       	cli
    407c:	de bf       	out	0x3e, r29	; 62
    407e:	0f be       	out	0x3f, r0	; 63
    4080:	cd bf       	out	0x3d, r28	; 61
    4082:	df 91       	pop	r29
    4084:	cf 91       	pop	r28
    4086:	1f 91       	pop	r17
    4088:	0f 91       	pop	r16
    408a:	ff 90       	pop	r15
    408c:	ef 90       	pop	r14
    408e:	df 90       	pop	r13
    4090:	cf 90       	pop	r12
    4092:	08 95       	ret

00004094 <_ZN12Adafruit_GFX8drawCharEiihjjhh>:
    4094:	af 92       	push	r10
    4096:	cf 92       	push	r12
    4098:	df 92       	push	r13
    409a:	ef 92       	push	r14
    409c:	ff 92       	push	r15
    409e:	0f 93       	push	r16
    40a0:	1f 93       	push	r17
    40a2:	cf 93       	push	r28
    40a4:	df 93       	push	r29
    40a6:	cd b7       	in	r28, 0x3d	; 61
    40a8:	de b7       	in	r29, 0x3e	; 62
    40aa:	eb 97       	sbiw	r28, 0x3b	; 59
    40ac:	0f b6       	in	r0, 0x3f	; 63
    40ae:	f8 94       	cli
    40b0:	de bf       	out	0x3e, r29	; 62
    40b2:	0f be       	out	0x3f, r0	; 63
    40b4:	cd bf       	out	0x3d, r28	; 61
    40b6:	98 ab       	std	Y+48, r25	; 0x30
    40b8:	8f a7       	std	Y+47, r24	; 0x2f
    40ba:	7a ab       	std	Y+50, r23	; 0x32
    40bc:	69 ab       	std	Y+49, r22	; 0x31
    40be:	5c ab       	std	Y+52, r21	; 0x34
    40c0:	4b ab       	std	Y+51, r20	; 0x33
    40c2:	2d ab       	std	Y+53, r18	; 0x35
    40c4:	1f ab       	std	Y+55, r17	; 0x37
    40c6:	0e ab       	std	Y+54, r16	; 0x36
    40c8:	f9 ae       	std	Y+57, r15	; 0x39
    40ca:	e8 ae       	std	Y+56, r14	; 0x38
    40cc:	ca ae       	std	Y+58, r12	; 0x3a
    40ce:	ab ae       	std	Y+59, r10	; 0x3b
    40d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    40d2:	98 a9       	ldd	r25, Y+48	; 0x30
    40d4:	dc 01       	movw	r26, r24
    40d6:	59 96       	adiw	r26, 0x19	; 25
    40d8:	8d 91       	ld	r24, X+
    40da:	9c 91       	ld	r25, X
    40dc:	5a 97       	sbiw	r26, 0x1a	; 26
    40de:	89 2b       	or	r24, r25
    40e0:	09 f0       	breq	.+2      	; 0x40e4 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50>
    40e2:	c7 c1       	rjmp	.+910    	; 0x4472 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3de>
    40e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    40e6:	98 a9       	ldd	r25, Y+48	; 0x30
    40e8:	fc 01       	movw	r30, r24
    40ea:	20 85       	ldd	r18, Z+8	; 0x08
    40ec:	31 85       	ldd	r19, Z+9	; 0x09
    40ee:	89 a9       	ldd	r24, Y+49	; 0x31
    40f0:	9a a9       	ldd	r25, Y+50	; 0x32
    40f2:	82 17       	cp	r24, r18
    40f4:	93 07       	cpc	r25, r19
    40f6:	0c f0       	brlt	.+2      	; 0x40fa <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x66>
    40f8:	0e c3       	rjmp	.+1564   	; 0x4716 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    40fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    40fc:	98 a9       	ldd	r25, Y+48	; 0x30
    40fe:	dc 01       	movw	r26, r24
    4100:	1a 96       	adiw	r26, 0x0a	; 10
    4102:	2d 91       	ld	r18, X+
    4104:	3c 91       	ld	r19, X
    4106:	1b 97       	sbiw	r26, 0x0b	; 11
    4108:	8b a9       	ldd	r24, Y+51	; 0x33
    410a:	9c a9       	ldd	r25, Y+52	; 0x34
    410c:	82 17       	cp	r24, r18
    410e:	93 07       	cpc	r25, r19
    4110:	0c f0       	brlt	.+2      	; 0x4114 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x80>
    4112:	01 c3       	rjmp	.+1538   	; 0x4716 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    4114:	8a ad       	ldd	r24, Y+58	; 0x3a
    4116:	28 2f       	mov	r18, r24
    4118:	30 e0       	ldi	r19, 0x00	; 0
    411a:	c9 01       	movw	r24, r18
    411c:	88 0f       	add	r24, r24
    411e:	99 1f       	adc	r25, r25
    4120:	82 0f       	add	r24, r18
    4122:	93 1f       	adc	r25, r19
    4124:	88 0f       	add	r24, r24
    4126:	99 1f       	adc	r25, r25
    4128:	9c 01       	movw	r18, r24
    412a:	89 a9       	ldd	r24, Y+49	; 0x31
    412c:	9a a9       	ldd	r25, Y+50	; 0x32
    412e:	82 0f       	add	r24, r18
    4130:	93 1f       	adc	r25, r19
    4132:	01 97       	sbiw	r24, 0x01	; 1
    4134:	99 23       	and	r25, r25
    4136:	0c f4       	brge	.+2      	; 0x413a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xa6>
    4138:	ee c2       	rjmp	.+1500   	; 0x4716 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    413a:	8b ad       	ldd	r24, Y+59	; 0x3b
    413c:	88 2f       	mov	r24, r24
    413e:	90 e0       	ldi	r25, 0x00	; 0
    4140:	9c 01       	movw	r18, r24
    4142:	22 0f       	add	r18, r18
    4144:	33 1f       	adc	r19, r19
    4146:	22 0f       	add	r18, r18
    4148:	33 1f       	adc	r19, r19
    414a:	22 0f       	add	r18, r18
    414c:	33 1f       	adc	r19, r19
    414e:	8b a9       	ldd	r24, Y+51	; 0x33
    4150:	9c a9       	ldd	r25, Y+52	; 0x34
    4152:	82 0f       	add	r24, r18
    4154:	93 1f       	adc	r25, r19
    4156:	01 97       	sbiw	r24, 0x01	; 1
    4158:	99 23       	and	r25, r25
    415a:	0c f4       	brge	.+2      	; 0x415e <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xca>
    415c:	dc c2       	rjmp	.+1464   	; 0x4716 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x682>
    415e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4160:	98 a9       	ldd	r25, Y+48	; 0x30
    4162:	fc 01       	movw	r30, r24
    4164:	90 8d       	ldd	r25, Z+24	; 0x18
    4166:	81 e0       	ldi	r24, 0x01	; 1
    4168:	89 27       	eor	r24, r25
    416a:	88 23       	and	r24, r24
    416c:	31 f0       	breq	.+12     	; 0x417a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xe6>
    416e:	8d a9       	ldd	r24, Y+53	; 0x35
    4170:	80 3b       	cpi	r24, 0xB0	; 176
    4172:	18 f0       	brcs	.+6      	; 0x417a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0xe6>
    4174:	8d a9       	ldd	r24, Y+53	; 0x35
    4176:	8f 5f       	subi	r24, 0xFF	; 255
    4178:	8d ab       	std	Y+53, r24	; 0x35
    417a:	8f a5       	ldd	r24, Y+47	; 0x2f
    417c:	98 a9       	ldd	r25, Y+48	; 0x30
    417e:	dc 01       	movw	r26, r24
    4180:	8d 91       	ld	r24, X+
    4182:	9c 91       	ld	r25, X
    4184:	0a 96       	adiw	r24, 0x0a	; 10
    4186:	fc 01       	movw	r30, r24
    4188:	20 81       	ld	r18, Z
    418a:	31 81       	ldd	r19, Z+1	; 0x01
    418c:	8f a5       	ldd	r24, Y+47	; 0x2f
    418e:	98 a9       	ldd	r25, Y+48	; 0x30
    4190:	f9 01       	movw	r30, r18
    4192:	19 95       	eicall
    4194:	19 82       	std	Y+1, r1	; 0x01
    4196:	89 81       	ldd	r24, Y+1	; 0x01
    4198:	85 30       	cpi	r24, 0x05	; 5
    419a:	0c f0       	brlt	.+2      	; 0x419e <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x10a>
    419c:	07 c1       	rjmp	.+526    	; 0x43ac <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x318>
    419e:	8d a9       	ldd	r24, Y+53	; 0x35
    41a0:	28 2f       	mov	r18, r24
    41a2:	30 e0       	ldi	r19, 0x00	; 0
    41a4:	c9 01       	movw	r24, r18
    41a6:	88 0f       	add	r24, r24
    41a8:	99 1f       	adc	r25, r25
    41aa:	88 0f       	add	r24, r24
    41ac:	99 1f       	adc	r25, r25
    41ae:	28 0f       	add	r18, r24
    41b0:	39 1f       	adc	r19, r25
    41b2:	89 81       	ldd	r24, Y+1	; 0x01
    41b4:	08 2e       	mov	r0, r24
    41b6:	00 0c       	add	r0, r0
    41b8:	99 0b       	sbc	r25, r25
    41ba:	82 0f       	add	r24, r18
    41bc:	93 1f       	adc	r25, r19
    41be:	80 52       	subi	r24, 0x20	; 32
    41c0:	9c 4f       	sbci	r25, 0xFC	; 252
    41c2:	9f 87       	std	Y+15, r25	; 0x0f
    41c4:	8e 87       	std	Y+14, r24	; 0x0e
    41c6:	8e 85       	ldd	r24, Y+14	; 0x0e
    41c8:	9f 85       	ldd	r25, Y+15	; 0x0f
    41ca:	fc 01       	movw	r30, r24
    41cc:	84 91       	lpm	r24, Z
    41ce:	88 8b       	std	Y+16, r24	; 0x10
    41d0:	88 89       	ldd	r24, Y+16	; 0x10
    41d2:	8a 83       	std	Y+2, r24	; 0x02
    41d4:	1b 82       	std	Y+3, r1	; 0x03
    41d6:	8b 81       	ldd	r24, Y+3	; 0x03
    41d8:	88 30       	cpi	r24, 0x08	; 8
    41da:	0c f0       	brlt	.+2      	; 0x41de <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x14a>
    41dc:	e3 c0       	rjmp	.+454    	; 0x43a4 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x310>
    41de:	8a 81       	ldd	r24, Y+2	; 0x02
    41e0:	88 2f       	mov	r24, r24
    41e2:	90 e0       	ldi	r25, 0x00	; 0
    41e4:	81 70       	andi	r24, 0x01	; 1
    41e6:	99 27       	eor	r25, r25
    41e8:	89 2b       	or	r24, r25
    41ea:	09 f4       	brne	.+2      	; 0x41ee <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x15a>
    41ec:	65 c0       	rjmp	.+202    	; 0x42b8 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x224>
    41ee:	8a ad       	ldd	r24, Y+58	; 0x3a
    41f0:	81 30       	cpi	r24, 0x01	; 1
    41f2:	21 f5       	brne	.+72     	; 0x423c <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x1a8>
    41f4:	8b ad       	ldd	r24, Y+59	; 0x3b
    41f6:	81 30       	cpi	r24, 0x01	; 1
    41f8:	09 f5       	brne	.+66     	; 0x423c <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x1a8>
    41fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    41fc:	98 a9       	ldd	r25, Y+48	; 0x30
    41fe:	dc 01       	movw	r26, r24
    4200:	8d 91       	ld	r24, X+
    4202:	9c 91       	ld	r25, X
    4204:	0c 96       	adiw	r24, 0x0c	; 12
    4206:	dc 01       	movw	r26, r24
    4208:	ed 91       	ld	r30, X+
    420a:	fc 91       	ld	r31, X
    420c:	8b 81       	ldd	r24, Y+3	; 0x03
    420e:	28 2f       	mov	r18, r24
    4210:	88 0f       	add	r24, r24
    4212:	33 0b       	sbc	r19, r19
    4214:	8b a9       	ldd	r24, Y+51	; 0x33
    4216:	9c a9       	ldd	r25, Y+52	; 0x34
    4218:	a9 01       	movw	r20, r18
    421a:	48 0f       	add	r20, r24
    421c:	59 1f       	adc	r21, r25
    421e:	89 81       	ldd	r24, Y+1	; 0x01
    4220:	28 2f       	mov	r18, r24
    4222:	88 0f       	add	r24, r24
    4224:	33 0b       	sbc	r19, r19
    4226:	89 a9       	ldd	r24, Y+49	; 0x31
    4228:	9a a9       	ldd	r25, Y+50	; 0x32
    422a:	b9 01       	movw	r22, r18
    422c:	68 0f       	add	r22, r24
    422e:	79 1f       	adc	r23, r25
    4230:	2e a9       	ldd	r18, Y+54	; 0x36
    4232:	3f a9       	ldd	r19, Y+55	; 0x37
    4234:	8f a5       	ldd	r24, Y+47	; 0x2f
    4236:	98 a9       	ldd	r25, Y+48	; 0x30
    4238:	19 95       	eicall
    423a:	aa c0       	rjmp	.+340    	; 0x4390 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    423c:	8f a5       	ldd	r24, Y+47	; 0x2f
    423e:	98 a9       	ldd	r25, Y+48	; 0x30
    4240:	fc 01       	movw	r30, r24
    4242:	80 81       	ld	r24, Z
    4244:	91 81       	ldd	r25, Z+1	; 0x01
    4246:	0e 96       	adiw	r24, 0x0e	; 14
    4248:	dc 01       	movw	r26, r24
    424a:	ed 91       	ld	r30, X+
    424c:	fc 91       	ld	r31, X
    424e:	8b ad       	ldd	r24, Y+59	; 0x3b
    4250:	08 2f       	mov	r16, r24
    4252:	10 e0       	ldi	r17, 0x00	; 0
    4254:	8a ad       	ldd	r24, Y+58	; 0x3a
    4256:	c8 2e       	mov	r12, r24
    4258:	d1 2c       	mov	r13, r1
    425a:	8b 81       	ldd	r24, Y+3	; 0x03
    425c:	48 2f       	mov	r20, r24
    425e:	88 0f       	add	r24, r24
    4260:	55 0b       	sbc	r21, r21
    4262:	8b ad       	ldd	r24, Y+59	; 0x3b
    4264:	88 2f       	mov	r24, r24
    4266:	90 e0       	ldi	r25, 0x00	; 0
    4268:	48 9f       	mul	r20, r24
    426a:	90 01       	movw	r18, r0
    426c:	49 9f       	mul	r20, r25
    426e:	30 0d       	add	r19, r0
    4270:	58 9f       	mul	r21, r24
    4272:	30 0d       	add	r19, r0
    4274:	11 24       	eor	r1, r1
    4276:	8b a9       	ldd	r24, Y+51	; 0x33
    4278:	9c a9       	ldd	r25, Y+52	; 0x34
    427a:	d9 01       	movw	r26, r18
    427c:	a8 0f       	add	r26, r24
    427e:	b9 1f       	adc	r27, r25
    4280:	89 81       	ldd	r24, Y+1	; 0x01
    4282:	48 2f       	mov	r20, r24
    4284:	88 0f       	add	r24, r24
    4286:	55 0b       	sbc	r21, r21
    4288:	8a ad       	ldd	r24, Y+58	; 0x3a
    428a:	88 2f       	mov	r24, r24
    428c:	90 e0       	ldi	r25, 0x00	; 0
    428e:	48 9f       	mul	r20, r24
    4290:	90 01       	movw	r18, r0
    4292:	49 9f       	mul	r20, r25
    4294:	30 0d       	add	r19, r0
    4296:	58 9f       	mul	r21, r24
    4298:	30 0d       	add	r19, r0
    429a:	11 24       	eor	r1, r1
    429c:	89 a9       	ldd	r24, Y+49	; 0x31
    429e:	9a a9       	ldd	r25, Y+50	; 0x32
    42a0:	b9 01       	movw	r22, r18
    42a2:	68 0f       	add	r22, r24
    42a4:	79 1f       	adc	r23, r25
    42a6:	2e a9       	ldd	r18, Y+54	; 0x36
    42a8:	3f a9       	ldd	r19, Y+55	; 0x37
    42aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    42ac:	98 a9       	ldd	r25, Y+48	; 0x30
    42ae:	79 01       	movw	r14, r18
    42b0:	96 01       	movw	r18, r12
    42b2:	ad 01       	movw	r20, r26
    42b4:	19 95       	eicall
    42b6:	6c c0       	rjmp	.+216    	; 0x4390 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    42b8:	28 ad       	ldd	r18, Y+56	; 0x38
    42ba:	39 ad       	ldd	r19, Y+57	; 0x39
    42bc:	8e a9       	ldd	r24, Y+54	; 0x36
    42be:	9f a9       	ldd	r25, Y+55	; 0x37
    42c0:	28 17       	cp	r18, r24
    42c2:	39 07       	cpc	r19, r25
    42c4:	09 f4       	brne	.+2      	; 0x42c8 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x234>
    42c6:	64 c0       	rjmp	.+200    	; 0x4390 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    42c8:	8a ad       	ldd	r24, Y+58	; 0x3a
    42ca:	81 30       	cpi	r24, 0x01	; 1
    42cc:	21 f5       	brne	.+72     	; 0x4316 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x282>
    42ce:	8b ad       	ldd	r24, Y+59	; 0x3b
    42d0:	81 30       	cpi	r24, 0x01	; 1
    42d2:	09 f5       	brne	.+66     	; 0x4316 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x282>
    42d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    42d6:	98 a9       	ldd	r25, Y+48	; 0x30
    42d8:	fc 01       	movw	r30, r24
    42da:	80 81       	ld	r24, Z
    42dc:	91 81       	ldd	r25, Z+1	; 0x01
    42de:	0c 96       	adiw	r24, 0x0c	; 12
    42e0:	dc 01       	movw	r26, r24
    42e2:	ed 91       	ld	r30, X+
    42e4:	fc 91       	ld	r31, X
    42e6:	8b 81       	ldd	r24, Y+3	; 0x03
    42e8:	28 2f       	mov	r18, r24
    42ea:	88 0f       	add	r24, r24
    42ec:	33 0b       	sbc	r19, r19
    42ee:	8b a9       	ldd	r24, Y+51	; 0x33
    42f0:	9c a9       	ldd	r25, Y+52	; 0x34
    42f2:	a9 01       	movw	r20, r18
    42f4:	48 0f       	add	r20, r24
    42f6:	59 1f       	adc	r21, r25
    42f8:	89 81       	ldd	r24, Y+1	; 0x01
    42fa:	28 2f       	mov	r18, r24
    42fc:	88 0f       	add	r24, r24
    42fe:	33 0b       	sbc	r19, r19
    4300:	89 a9       	ldd	r24, Y+49	; 0x31
    4302:	9a a9       	ldd	r25, Y+50	; 0x32
    4304:	b9 01       	movw	r22, r18
    4306:	68 0f       	add	r22, r24
    4308:	79 1f       	adc	r23, r25
    430a:	28 ad       	ldd	r18, Y+56	; 0x38
    430c:	39 ad       	ldd	r19, Y+57	; 0x39
    430e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4310:	98 a9       	ldd	r25, Y+48	; 0x30
    4312:	19 95       	eicall
    4314:	3d c0       	rjmp	.+122    	; 0x4390 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x2fc>
    4316:	8f a5       	ldd	r24, Y+47	; 0x2f
    4318:	98 a9       	ldd	r25, Y+48	; 0x30
    431a:	fc 01       	movw	r30, r24
    431c:	80 81       	ld	r24, Z
    431e:	91 81       	ldd	r25, Z+1	; 0x01
    4320:	0e 96       	adiw	r24, 0x0e	; 14
    4322:	dc 01       	movw	r26, r24
    4324:	ed 91       	ld	r30, X+
    4326:	fc 91       	ld	r31, X
    4328:	8b ad       	ldd	r24, Y+59	; 0x3b
    432a:	08 2f       	mov	r16, r24
    432c:	10 e0       	ldi	r17, 0x00	; 0
    432e:	8a ad       	ldd	r24, Y+58	; 0x3a
    4330:	c8 2e       	mov	r12, r24
    4332:	d1 2c       	mov	r13, r1
    4334:	8b 81       	ldd	r24, Y+3	; 0x03
    4336:	48 2f       	mov	r20, r24
    4338:	88 0f       	add	r24, r24
    433a:	55 0b       	sbc	r21, r21
    433c:	8b ad       	ldd	r24, Y+59	; 0x3b
    433e:	88 2f       	mov	r24, r24
    4340:	90 e0       	ldi	r25, 0x00	; 0
    4342:	48 9f       	mul	r20, r24
    4344:	90 01       	movw	r18, r0
    4346:	49 9f       	mul	r20, r25
    4348:	30 0d       	add	r19, r0
    434a:	58 9f       	mul	r21, r24
    434c:	30 0d       	add	r19, r0
    434e:	11 24       	eor	r1, r1
    4350:	8b a9       	ldd	r24, Y+51	; 0x33
    4352:	9c a9       	ldd	r25, Y+52	; 0x34
    4354:	d9 01       	movw	r26, r18
    4356:	a8 0f       	add	r26, r24
    4358:	b9 1f       	adc	r27, r25
    435a:	89 81       	ldd	r24, Y+1	; 0x01
    435c:	48 2f       	mov	r20, r24
    435e:	88 0f       	add	r24, r24
    4360:	55 0b       	sbc	r21, r21
    4362:	8a ad       	ldd	r24, Y+58	; 0x3a
    4364:	88 2f       	mov	r24, r24
    4366:	90 e0       	ldi	r25, 0x00	; 0
    4368:	48 9f       	mul	r20, r24
    436a:	90 01       	movw	r18, r0
    436c:	49 9f       	mul	r20, r25
    436e:	30 0d       	add	r19, r0
    4370:	58 9f       	mul	r21, r24
    4372:	30 0d       	add	r19, r0
    4374:	11 24       	eor	r1, r1
    4376:	89 a9       	ldd	r24, Y+49	; 0x31
    4378:	9a a9       	ldd	r25, Y+50	; 0x32
    437a:	b9 01       	movw	r22, r18
    437c:	68 0f       	add	r22, r24
    437e:	79 1f       	adc	r23, r25
    4380:	28 ad       	ldd	r18, Y+56	; 0x38
    4382:	39 ad       	ldd	r19, Y+57	; 0x39
    4384:	8f a5       	ldd	r24, Y+47	; 0x2f
    4386:	98 a9       	ldd	r25, Y+48	; 0x30
    4388:	79 01       	movw	r14, r18
    438a:	96 01       	movw	r18, r12
    438c:	ad 01       	movw	r20, r26
    438e:	19 95       	eicall
    4390:	8b 81       	ldd	r24, Y+3	; 0x03
    4392:	8f 5f       	subi	r24, 0xFF	; 255
    4394:	8b 83       	std	Y+3, r24	; 0x03
    4396:	8a 81       	ldd	r24, Y+2	; 0x02
    4398:	88 2f       	mov	r24, r24
    439a:	90 e0       	ldi	r25, 0x00	; 0
    439c:	95 95       	asr	r25
    439e:	87 95       	ror	r24
    43a0:	8a 83       	std	Y+2, r24	; 0x02
    43a2:	19 cf       	rjmp	.-462    	; 0x41d6 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x142>
    43a4:	89 81       	ldd	r24, Y+1	; 0x01
    43a6:	8f 5f       	subi	r24, 0xFF	; 255
    43a8:	89 83       	std	Y+1, r24	; 0x01
    43aa:	f5 ce       	rjmp	.-534    	; 0x4196 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x102>
    43ac:	28 ad       	ldd	r18, Y+56	; 0x38
    43ae:	39 ad       	ldd	r19, Y+57	; 0x39
    43b0:	8e a9       	ldd	r24, Y+54	; 0x36
    43b2:	9f a9       	ldd	r25, Y+55	; 0x37
    43b4:	28 17       	cp	r18, r24
    43b6:	39 07       	cpc	r19, r25
    43b8:	09 f4       	brne	.+2      	; 0x43bc <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x328>
    43ba:	4d c0       	rjmp	.+154    	; 0x4456 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3c2>
    43bc:	8a ad       	ldd	r24, Y+58	; 0x3a
    43be:	81 30       	cpi	r24, 0x01	; 1
    43c0:	e1 f4       	brne	.+56     	; 0x43fa <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x366>
    43c2:	8b ad       	ldd	r24, Y+59	; 0x3b
    43c4:	81 30       	cpi	r24, 0x01	; 1
    43c6:	c9 f4       	brne	.+50     	; 0x43fa <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x366>
    43c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    43ca:	98 a9       	ldd	r25, Y+48	; 0x30
    43cc:	fc 01       	movw	r30, r24
    43ce:	80 81       	ld	r24, Z
    43d0:	91 81       	ldd	r25, Z+1	; 0x01
    43d2:	40 96       	adiw	r24, 0x10	; 16
    43d4:	dc 01       	movw	r26, r24
    43d6:	ed 91       	ld	r30, X+
    43d8:	fc 91       	ld	r31, X
    43da:	89 a9       	ldd	r24, Y+49	; 0x31
    43dc:	9a a9       	ldd	r25, Y+50	; 0x32
    43de:	bc 01       	movw	r22, r24
    43e0:	6b 5f       	subi	r22, 0xFB	; 251
    43e2:	7f 4f       	sbci	r23, 0xFF	; 255
    43e4:	28 ad       	ldd	r18, Y+56	; 0x38
    43e6:	39 ad       	ldd	r19, Y+57	; 0x39
    43e8:	4b a9       	ldd	r20, Y+51	; 0x33
    43ea:	5c a9       	ldd	r21, Y+52	; 0x34
    43ec:	8f a5       	ldd	r24, Y+47	; 0x2f
    43ee:	98 a9       	ldd	r25, Y+48	; 0x30
    43f0:	89 01       	movw	r16, r18
    43f2:	28 e0       	ldi	r18, 0x08	; 8
    43f4:	30 e0       	ldi	r19, 0x00	; 0
    43f6:	19 95       	eicall
    43f8:	2e c0       	rjmp	.+92     	; 0x4456 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x3c2>
    43fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    43fc:	98 a9       	ldd	r25, Y+48	; 0x30
    43fe:	fc 01       	movw	r30, r24
    4400:	80 81       	ld	r24, Z
    4402:	91 81       	ldd	r25, Z+1	; 0x01
    4404:	0e 96       	adiw	r24, 0x0e	; 14
    4406:	dc 01       	movw	r26, r24
    4408:	ed 91       	ld	r30, X+
    440a:	fc 91       	ld	r31, X
    440c:	8b ad       	ldd	r24, Y+59	; 0x3b
    440e:	88 2f       	mov	r24, r24
    4410:	90 e0       	ldi	r25, 0x00	; 0
    4412:	8c 01       	movw	r16, r24
    4414:	00 0f       	add	r16, r16
    4416:	11 1f       	adc	r17, r17
    4418:	00 0f       	add	r16, r16
    441a:	11 1f       	adc	r17, r17
    441c:	00 0f       	add	r16, r16
    441e:	11 1f       	adc	r17, r17
    4420:	8a ad       	ldd	r24, Y+58	; 0x3a
    4422:	a8 2f       	mov	r26, r24
    4424:	b0 e0       	ldi	r27, 0x00	; 0
    4426:	8a ad       	ldd	r24, Y+58	; 0x3a
    4428:	28 2f       	mov	r18, r24
    442a:	30 e0       	ldi	r19, 0x00	; 0
    442c:	c9 01       	movw	r24, r18
    442e:	88 0f       	add	r24, r24
    4430:	99 1f       	adc	r25, r25
    4432:	88 0f       	add	r24, r24
    4434:	99 1f       	adc	r25, r25
    4436:	28 0f       	add	r18, r24
    4438:	39 1f       	adc	r19, r25
    443a:	89 a9       	ldd	r24, Y+49	; 0x31
    443c:	9a a9       	ldd	r25, Y+50	; 0x32
    443e:	b9 01       	movw	r22, r18
    4440:	68 0f       	add	r22, r24
    4442:	79 1f       	adc	r23, r25
    4444:	28 ad       	ldd	r18, Y+56	; 0x38
    4446:	39 ad       	ldd	r19, Y+57	; 0x39
    4448:	4b a9       	ldd	r20, Y+51	; 0x33
    444a:	5c a9       	ldd	r21, Y+52	; 0x34
    444c:	8f a5       	ldd	r24, Y+47	; 0x2f
    444e:	98 a9       	ldd	r25, Y+48	; 0x30
    4450:	79 01       	movw	r14, r18
    4452:	9d 01       	movw	r18, r26
    4454:	19 95       	eicall
    4456:	8f a5       	ldd	r24, Y+47	; 0x2f
    4458:	98 a9       	ldd	r25, Y+48	; 0x30
    445a:	fc 01       	movw	r30, r24
    445c:	80 81       	ld	r24, Z
    445e:	91 81       	ldd	r25, Z+1	; 0x01
    4460:	46 96       	adiw	r24, 0x16	; 22
    4462:	dc 01       	movw	r26, r24
    4464:	2d 91       	ld	r18, X+
    4466:	3c 91       	ld	r19, X
    4468:	8f a5       	ldd	r24, Y+47	; 0x2f
    446a:	98 a9       	ldd	r25, Y+48	; 0x30
    446c:	f9 01       	movw	r30, r18
    446e:	19 95       	eicall
    4470:	53 c1       	rjmp	.+678    	; 0x4718 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x684>
    4472:	8f a5       	ldd	r24, Y+47	; 0x2f
    4474:	98 a9       	ldd	r25, Y+48	; 0x30
    4476:	dc 01       	movw	r26, r24
    4478:	59 96       	adiw	r26, 0x19	; 25
    447a:	8d 91       	ld	r24, X+
    447c:	9c 91       	ld	r25, X
    447e:	5a 97       	sbiw	r26, 0x1a	; 26
    4480:	04 96       	adiw	r24, 0x04	; 4
    4482:	9a 8b       	std	Y+18, r25	; 0x12
    4484:	89 8b       	std	Y+17, r24	; 0x11
    4486:	89 89       	ldd	r24, Y+17	; 0x11
    4488:	9a 89       	ldd	r25, Y+18	; 0x12
    448a:	fc 01       	movw	r30, r24
    448c:	84 91       	lpm	r24, Z
    448e:	8b 8b       	std	Y+19, r24	; 0x13
    4490:	8b 89       	ldd	r24, Y+19	; 0x13
    4492:	9d a9       	ldd	r25, Y+53	; 0x35
    4494:	f9 2f       	mov	r31, r25
    4496:	f8 1b       	sub	r31, r24
    4498:	8f 2f       	mov	r24, r31
    449a:	8d ab       	std	Y+53, r24	; 0x35
    449c:	8f a5       	ldd	r24, Y+47	; 0x2f
    449e:	98 a9       	ldd	r25, Y+48	; 0x30
    44a0:	dc 01       	movw	r26, r24
    44a2:	59 96       	adiw	r26, 0x19	; 25
    44a4:	8d 91       	ld	r24, X+
    44a6:	9c 91       	ld	r25, X
    44a8:	5a 97       	sbiw	r26, 0x1a	; 26
    44aa:	6d a9       	ldd	r22, Y+53	; 0x35
    44ac:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <_Z18pgm_read_glyph_ptrPK7GFXfonth>
    44b0:	9d 8b       	std	Y+21, r25	; 0x15
    44b2:	8c 8b       	std	Y+20, r24	; 0x14
    44b4:	8f a5       	ldd	r24, Y+47	; 0x2f
    44b6:	98 a9       	ldd	r25, Y+48	; 0x30
    44b8:	fc 01       	movw	r30, r24
    44ba:	81 8d       	ldd	r24, Z+25	; 0x19
    44bc:	92 8d       	ldd	r25, Z+26	; 0x1a
    44be:	0e 94 07 1a 	call	0x340e	; 0x340e <_Z19pgm_read_bitmap_ptrPK7GFXfont>
    44c2:	9f 8b       	std	Y+23, r25	; 0x17
    44c4:	8e 8b       	std	Y+22, r24	; 0x16
    44c6:	8c 89       	ldd	r24, Y+20	; 0x14
    44c8:	9d 89       	ldd	r25, Y+21	; 0x15
    44ca:	99 8f       	std	Y+25, r25	; 0x19
    44cc:	88 8f       	std	Y+24, r24	; 0x18
    44ce:	88 8d       	ldd	r24, Y+24	; 0x18
    44d0:	99 8d       	ldd	r25, Y+25	; 0x19
    44d2:	fc 01       	movw	r30, r24
    44d4:	25 91       	lpm	r18, Z+
    44d6:	34 91       	lpm	r19, Z
    44d8:	cf 01       	movw	r24, r30
    44da:	3b 8f       	std	Y+27, r19	; 0x1b
    44dc:	2a 8f       	std	Y+26, r18	; 0x1a
    44de:	99 8f       	std	Y+25, r25	; 0x19
    44e0:	88 8f       	std	Y+24, r24	; 0x18
    44e2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    44e4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    44e6:	9d 83       	std	Y+5, r25	; 0x05
    44e8:	8c 83       	std	Y+4, r24	; 0x04
    44ea:	8c 89       	ldd	r24, Y+20	; 0x14
    44ec:	9d 89       	ldd	r25, Y+21	; 0x15
    44ee:	02 96       	adiw	r24, 0x02	; 2
    44f0:	9d 8f       	std	Y+29, r25	; 0x1d
    44f2:	8c 8f       	std	Y+28, r24	; 0x1c
    44f4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    44f6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    44f8:	fc 01       	movw	r30, r24
    44fa:	84 91       	lpm	r24, Z
    44fc:	8e 8f       	std	Y+30, r24	; 0x1e
    44fe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4500:	8f 8f       	std	Y+31, r24	; 0x1f
    4502:	8c 89       	ldd	r24, Y+20	; 0x14
    4504:	9d 89       	ldd	r25, Y+21	; 0x15
    4506:	03 96       	adiw	r24, 0x03	; 3
    4508:	99 a3       	std	Y+33, r25	; 0x21
    450a:	88 a3       	std	Y+32, r24	; 0x20
    450c:	88 a1       	ldd	r24, Y+32	; 0x20
    450e:	99 a1       	ldd	r25, Y+33	; 0x21
    4510:	fc 01       	movw	r30, r24
    4512:	84 91       	lpm	r24, Z
    4514:	8a a3       	std	Y+34, r24	; 0x22
    4516:	8a a1       	ldd	r24, Y+34	; 0x22
    4518:	8b a3       	std	Y+35, r24	; 0x23
    451a:	8c 89       	ldd	r24, Y+20	; 0x14
    451c:	9d 89       	ldd	r25, Y+21	; 0x15
    451e:	05 96       	adiw	r24, 0x05	; 5
    4520:	9d a3       	std	Y+37, r25	; 0x25
    4522:	8c a3       	std	Y+36, r24	; 0x24
    4524:	8c a1       	ldd	r24, Y+36	; 0x24
    4526:	9d a1       	ldd	r25, Y+37	; 0x25
    4528:	fc 01       	movw	r30, r24
    452a:	84 91       	lpm	r24, Z
    452c:	8e a3       	std	Y+38, r24	; 0x26
    452e:	8e a1       	ldd	r24, Y+38	; 0x26
    4530:	8f a3       	std	Y+39, r24	; 0x27
    4532:	8c 89       	ldd	r24, Y+20	; 0x14
    4534:	9d 89       	ldd	r25, Y+21	; 0x15
    4536:	06 96       	adiw	r24, 0x06	; 6
    4538:	99 a7       	std	Y+41, r25	; 0x29
    453a:	88 a7       	std	Y+40, r24	; 0x28
    453c:	88 a5       	ldd	r24, Y+40	; 0x28
    453e:	99 a5       	ldd	r25, Y+41	; 0x29
    4540:	fc 01       	movw	r30, r24
    4542:	84 91       	lpm	r24, Z
    4544:	8a a7       	std	Y+42, r24	; 0x2a
    4546:	8a a5       	ldd	r24, Y+42	; 0x2a
    4548:	8b a7       	std	Y+43, r24	; 0x2b
    454a:	18 86       	std	Y+8, r1	; 0x08
    454c:	19 86       	std	Y+9, r1	; 0x09
    454e:	1b 86       	std	Y+11, r1	; 0x0b
    4550:	1a 86       	std	Y+10, r1	; 0x0a
    4552:	1d 86       	std	Y+13, r1	; 0x0d
    4554:	1c 86       	std	Y+12, r1	; 0x0c
    4556:	8a ad       	ldd	r24, Y+58	; 0x3a
    4558:	82 30       	cpi	r24, 0x02	; 2
    455a:	18 f4       	brcc	.+6      	; 0x4562 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x4ce>
    455c:	8b ad       	ldd	r24, Y+59	; 0x3b
    455e:	82 30       	cpi	r24, 0x02	; 2
    4560:	60 f0       	brcs	.+24     	; 0x457a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x4e6>
    4562:	8f a1       	ldd	r24, Y+39	; 0x27
    4564:	08 2e       	mov	r0, r24
    4566:	00 0c       	add	r0, r0
    4568:	99 0b       	sbc	r25, r25
    456a:	9b 87       	std	Y+11, r25	; 0x0b
    456c:	8a 87       	std	Y+10, r24	; 0x0a
    456e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4570:	08 2e       	mov	r0, r24
    4572:	00 0c       	add	r0, r0
    4574:	99 0b       	sbc	r25, r25
    4576:	9d 87       	std	Y+13, r25	; 0x0d
    4578:	8c 87       	std	Y+12, r24	; 0x0c
    457a:	8f a5       	ldd	r24, Y+47	; 0x2f
    457c:	98 a9       	ldd	r25, Y+48	; 0x30
    457e:	dc 01       	movw	r26, r24
    4580:	8d 91       	ld	r24, X+
    4582:	9c 91       	ld	r25, X
    4584:	0a 96       	adiw	r24, 0x0a	; 10
    4586:	fc 01       	movw	r30, r24
    4588:	20 81       	ld	r18, Z
    458a:	31 81       	ldd	r19, Z+1	; 0x01
    458c:	8f a5       	ldd	r24, Y+47	; 0x2f
    458e:	98 a9       	ldd	r25, Y+48	; 0x30
    4590:	f9 01       	movw	r30, r18
    4592:	19 95       	eicall
    4594:	1f 82       	std	Y+7, r1	; 0x07
    4596:	9f 81       	ldd	r25, Y+7	; 0x07
    4598:	8b a1       	ldd	r24, Y+35	; 0x23
    459a:	98 17       	cp	r25, r24
    459c:	08 f0       	brcs	.+2      	; 0x45a0 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50c>
    459e:	ad c0       	rjmp	.+346    	; 0x46fa <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x666>
    45a0:	1e 82       	std	Y+6, r1	; 0x06
    45a2:	9e 81       	ldd	r25, Y+6	; 0x06
    45a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    45a6:	98 17       	cp	r25, r24
    45a8:	08 f0       	brcs	.+2      	; 0x45ac <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x518>
    45aa:	a3 c0       	rjmp	.+326    	; 0x46f2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x65e>
    45ac:	89 85       	ldd	r24, Y+9	; 0x09
    45ae:	91 e0       	ldi	r25, 0x01	; 1
    45b0:	98 0f       	add	r25, r24
    45b2:	99 87       	std	Y+9, r25	; 0x09
    45b4:	88 2f       	mov	r24, r24
    45b6:	90 e0       	ldi	r25, 0x00	; 0
    45b8:	87 70       	andi	r24, 0x07	; 7
    45ba:	99 27       	eor	r25, r25
    45bc:	21 e0       	ldi	r18, 0x01	; 1
    45be:	89 2b       	or	r24, r25
    45c0:	09 f0       	breq	.+2      	; 0x45c4 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x530>
    45c2:	20 e0       	ldi	r18, 0x00	; 0
    45c4:	22 23       	and	r18, r18
    45c6:	a1 f0       	breq	.+40     	; 0x45f0 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x55c>
    45c8:	8c 81       	ldd	r24, Y+4	; 0x04
    45ca:	9d 81       	ldd	r25, Y+5	; 0x05
    45cc:	9c 01       	movw	r18, r24
    45ce:	2f 5f       	subi	r18, 0xFF	; 255
    45d0:	3f 4f       	sbci	r19, 0xFF	; 255
    45d2:	3d 83       	std	Y+5, r19	; 0x05
    45d4:	2c 83       	std	Y+4, r18	; 0x04
    45d6:	2e 89       	ldd	r18, Y+22	; 0x16
    45d8:	3f 89       	ldd	r19, Y+23	; 0x17
    45da:	82 0f       	add	r24, r18
    45dc:	93 1f       	adc	r25, r19
    45de:	9d a7       	std	Y+45, r25	; 0x2d
    45e0:	8c a7       	std	Y+44, r24	; 0x2c
    45e2:	8c a5       	ldd	r24, Y+44	; 0x2c
    45e4:	9d a5       	ldd	r25, Y+45	; 0x2d
    45e6:	fc 01       	movw	r30, r24
    45e8:	84 91       	lpm	r24, Z
    45ea:	8e a7       	std	Y+46, r24	; 0x2e
    45ec:	8e a5       	ldd	r24, Y+46	; 0x2e
    45ee:	88 87       	std	Y+8, r24	; 0x08
    45f0:	88 85       	ldd	r24, Y+8	; 0x08
    45f2:	88 23       	and	r24, r24
    45f4:	0c f0       	brlt	.+2      	; 0x45f8 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x564>
    45f6:	76 c0       	rjmp	.+236    	; 0x46e4 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x650>
    45f8:	8a ad       	ldd	r24, Y+58	; 0x3a
    45fa:	81 30       	cpi	r24, 0x01	; 1
    45fc:	71 f5       	brne	.+92     	; 0x465a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x5c6>
    45fe:	8b ad       	ldd	r24, Y+59	; 0x3b
    4600:	81 30       	cpi	r24, 0x01	; 1
    4602:	59 f5       	brne	.+86     	; 0x465a <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x5c6>
    4604:	8f a5       	ldd	r24, Y+47	; 0x2f
    4606:	98 a9       	ldd	r25, Y+48	; 0x30
    4608:	dc 01       	movw	r26, r24
    460a:	8d 91       	ld	r24, X+
    460c:	9c 91       	ld	r25, X
    460e:	0c 96       	adiw	r24, 0x0c	; 12
    4610:	dc 01       	movw	r26, r24
    4612:	ed 91       	ld	r30, X+
    4614:	fc 91       	ld	r31, X
    4616:	8b a5       	ldd	r24, Y+43	; 0x2b
    4618:	28 2f       	mov	r18, r24
    461a:	88 0f       	add	r24, r24
    461c:	33 0b       	sbc	r19, r19
    461e:	8b a9       	ldd	r24, Y+51	; 0x33
    4620:	9c a9       	ldd	r25, Y+52	; 0x34
    4622:	28 0f       	add	r18, r24
    4624:	39 1f       	adc	r19, r25
    4626:	8f 81       	ldd	r24, Y+7	; 0x07
    4628:	88 2f       	mov	r24, r24
    462a:	90 e0       	ldi	r25, 0x00	; 0
    462c:	a9 01       	movw	r20, r18
    462e:	48 0f       	add	r20, r24
    4630:	59 1f       	adc	r21, r25
    4632:	8f a1       	ldd	r24, Y+39	; 0x27
    4634:	28 2f       	mov	r18, r24
    4636:	88 0f       	add	r24, r24
    4638:	33 0b       	sbc	r19, r19
    463a:	89 a9       	ldd	r24, Y+49	; 0x31
    463c:	9a a9       	ldd	r25, Y+50	; 0x32
    463e:	28 0f       	add	r18, r24
    4640:	39 1f       	adc	r19, r25
    4642:	8e 81       	ldd	r24, Y+6	; 0x06
    4644:	88 2f       	mov	r24, r24
    4646:	90 e0       	ldi	r25, 0x00	; 0
    4648:	b9 01       	movw	r22, r18
    464a:	68 0f       	add	r22, r24
    464c:	79 1f       	adc	r23, r25
    464e:	2e a9       	ldd	r18, Y+54	; 0x36
    4650:	3f a9       	ldd	r19, Y+55	; 0x37
    4652:	8f a5       	ldd	r24, Y+47	; 0x2f
    4654:	98 a9       	ldd	r25, Y+48	; 0x30
    4656:	19 95       	eicall
    4658:	45 c0       	rjmp	.+138    	; 0x46e4 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x650>
    465a:	8f a5       	ldd	r24, Y+47	; 0x2f
    465c:	98 a9       	ldd	r25, Y+48	; 0x30
    465e:	fc 01       	movw	r30, r24
    4660:	80 81       	ld	r24, Z
    4662:	91 81       	ldd	r25, Z+1	; 0x01
    4664:	0e 96       	adiw	r24, 0x0e	; 14
    4666:	dc 01       	movw	r26, r24
    4668:	ed 91       	ld	r30, X+
    466a:	fc 91       	ld	r31, X
    466c:	8b ad       	ldd	r24, Y+59	; 0x3b
    466e:	08 2f       	mov	r16, r24
    4670:	10 e0       	ldi	r17, 0x00	; 0
    4672:	8a ad       	ldd	r24, Y+58	; 0x3a
    4674:	c8 2e       	mov	r12, r24
    4676:	d1 2c       	mov	r13, r1
    4678:	8f 81       	ldd	r24, Y+7	; 0x07
    467a:	28 2f       	mov	r18, r24
    467c:	30 e0       	ldi	r19, 0x00	; 0
    467e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4680:	9d 85       	ldd	r25, Y+13	; 0x0d
    4682:	a9 01       	movw	r20, r18
    4684:	48 0f       	add	r20, r24
    4686:	59 1f       	adc	r21, r25
    4688:	8b ad       	ldd	r24, Y+59	; 0x3b
    468a:	88 2f       	mov	r24, r24
    468c:	90 e0       	ldi	r25, 0x00	; 0
    468e:	48 9f       	mul	r20, r24
    4690:	90 01       	movw	r18, r0
    4692:	49 9f       	mul	r20, r25
    4694:	30 0d       	add	r19, r0
    4696:	58 9f       	mul	r21, r24
    4698:	30 0d       	add	r19, r0
    469a:	11 24       	eor	r1, r1
    469c:	8b a9       	ldd	r24, Y+51	; 0x33
    469e:	9c a9       	ldd	r25, Y+52	; 0x34
    46a0:	d9 01       	movw	r26, r18
    46a2:	a8 0f       	add	r26, r24
    46a4:	b9 1f       	adc	r27, r25
    46a6:	8e 81       	ldd	r24, Y+6	; 0x06
    46a8:	28 2f       	mov	r18, r24
    46aa:	30 e0       	ldi	r19, 0x00	; 0
    46ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    46ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    46b0:	a9 01       	movw	r20, r18
    46b2:	48 0f       	add	r20, r24
    46b4:	59 1f       	adc	r21, r25
    46b6:	8a ad       	ldd	r24, Y+58	; 0x3a
    46b8:	88 2f       	mov	r24, r24
    46ba:	90 e0       	ldi	r25, 0x00	; 0
    46bc:	48 9f       	mul	r20, r24
    46be:	90 01       	movw	r18, r0
    46c0:	49 9f       	mul	r20, r25
    46c2:	30 0d       	add	r19, r0
    46c4:	58 9f       	mul	r21, r24
    46c6:	30 0d       	add	r19, r0
    46c8:	11 24       	eor	r1, r1
    46ca:	89 a9       	ldd	r24, Y+49	; 0x31
    46cc:	9a a9       	ldd	r25, Y+50	; 0x32
    46ce:	b9 01       	movw	r22, r18
    46d0:	68 0f       	add	r22, r24
    46d2:	79 1f       	adc	r23, r25
    46d4:	2e a9       	ldd	r18, Y+54	; 0x36
    46d6:	3f a9       	ldd	r19, Y+55	; 0x37
    46d8:	8f a5       	ldd	r24, Y+47	; 0x2f
    46da:	98 a9       	ldd	r25, Y+48	; 0x30
    46dc:	79 01       	movw	r14, r18
    46de:	96 01       	movw	r18, r12
    46e0:	ad 01       	movw	r20, r26
    46e2:	19 95       	eicall
    46e4:	88 85       	ldd	r24, Y+8	; 0x08
    46e6:	88 0f       	add	r24, r24
    46e8:	88 87       	std	Y+8, r24	; 0x08
    46ea:	8e 81       	ldd	r24, Y+6	; 0x06
    46ec:	8f 5f       	subi	r24, 0xFF	; 255
    46ee:	8e 83       	std	Y+6, r24	; 0x06
    46f0:	58 cf       	rjmp	.-336    	; 0x45a2 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x50e>
    46f2:	8f 81       	ldd	r24, Y+7	; 0x07
    46f4:	8f 5f       	subi	r24, 0xFF	; 255
    46f6:	8f 83       	std	Y+7, r24	; 0x07
    46f8:	4e cf       	rjmp	.-356    	; 0x4596 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x502>
    46fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    46fc:	98 a9       	ldd	r25, Y+48	; 0x30
    46fe:	fc 01       	movw	r30, r24
    4700:	80 81       	ld	r24, Z
    4702:	91 81       	ldd	r25, Z+1	; 0x01
    4704:	46 96       	adiw	r24, 0x16	; 22
    4706:	dc 01       	movw	r26, r24
    4708:	2d 91       	ld	r18, X+
    470a:	3c 91       	ld	r19, X
    470c:	8f a5       	ldd	r24, Y+47	; 0x2f
    470e:	98 a9       	ldd	r25, Y+48	; 0x30
    4710:	f9 01       	movw	r30, r18
    4712:	19 95       	eicall
    4714:	01 c0       	rjmp	.+2      	; 0x4718 <_ZN12Adafruit_GFX8drawCharEiihjjhh+0x684>
    4716:	00 00       	nop
    4718:	eb 96       	adiw	r28, 0x3b	; 59
    471a:	0f b6       	in	r0, 0x3f	; 63
    471c:	f8 94       	cli
    471e:	de bf       	out	0x3e, r29	; 62
    4720:	0f be       	out	0x3f, r0	; 63
    4722:	cd bf       	out	0x3d, r28	; 61
    4724:	df 91       	pop	r29
    4726:	cf 91       	pop	r28
    4728:	1f 91       	pop	r17
    472a:	0f 91       	pop	r16
    472c:	ff 90       	pop	r15
    472e:	ef 90       	pop	r14
    4730:	df 90       	pop	r13
    4732:	cf 90       	pop	r12
    4734:	af 90       	pop	r10
    4736:	08 95       	ret

00004738 <_ZN12Adafruit_GFX5writeEh>:
    4738:	af 92       	push	r10
    473a:	cf 92       	push	r12
    473c:	ef 92       	push	r14
    473e:	ff 92       	push	r15
    4740:	0f 93       	push	r16
    4742:	1f 93       	push	r17
    4744:	cf 93       	push	r28
    4746:	df 93       	push	r29
    4748:	cd b7       	in	r28, 0x3d	; 61
    474a:	de b7       	in	r29, 0x3e	; 62
    474c:	a4 97       	sbiw	r28, 0x24	; 36
    474e:	0f b6       	in	r0, 0x3f	; 63
    4750:	f8 94       	cli
    4752:	de bf       	out	0x3e, r29	; 62
    4754:	0f be       	out	0x3f, r0	; 63
    4756:	cd bf       	out	0x3d, r28	; 61
    4758:	99 a3       	std	Y+33, r25	; 0x21
    475a:	88 a3       	std	Y+32, r24	; 0x20
    475c:	6a a3       	std	Y+34, r22	; 0x22
    475e:	88 a1       	ldd	r24, Y+32	; 0x20
    4760:	99 a1       	ldd	r25, Y+33	; 0x21
    4762:	fc 01       	movw	r30, r24
    4764:	81 8d       	ldd	r24, Z+25	; 0x19
    4766:	92 8d       	ldd	r25, Z+26	; 0x1a
    4768:	89 2b       	or	r24, r25
    476a:	09 f0       	breq	.+2      	; 0x476e <_ZN12Adafruit_GFX5writeEh+0x36>
    476c:	a8 c0       	rjmp	.+336    	; 0x48be <_ZN12Adafruit_GFX5writeEh+0x186>
    476e:	8a a1       	ldd	r24, Y+34	; 0x22
    4770:	8a 30       	cpi	r24, 0x0A	; 10
    4772:	f1 f4       	brne	.+60     	; 0x47b0 <_ZN12Adafruit_GFX5writeEh+0x78>
    4774:	88 a1       	ldd	r24, Y+32	; 0x20
    4776:	99 a1       	ldd	r25, Y+33	; 0x21
    4778:	fc 01       	movw	r30, r24
    477a:	15 86       	std	Z+13, r1	; 0x0d
    477c:	14 86       	std	Z+12, r1	; 0x0c
    477e:	88 a1       	ldd	r24, Y+32	; 0x20
    4780:	99 a1       	ldd	r25, Y+33	; 0x21
    4782:	fc 01       	movw	r30, r24
    4784:	26 85       	ldd	r18, Z+14	; 0x0e
    4786:	37 85       	ldd	r19, Z+15	; 0x0f
    4788:	88 a1       	ldd	r24, Y+32	; 0x20
    478a:	99 a1       	ldd	r25, Y+33	; 0x21
    478c:	fc 01       	movw	r30, r24
    478e:	85 89       	ldd	r24, Z+21	; 0x15
    4790:	88 2f       	mov	r24, r24
    4792:	90 e0       	ldi	r25, 0x00	; 0
    4794:	88 0f       	add	r24, r24
    4796:	99 1f       	adc	r25, r25
    4798:	88 0f       	add	r24, r24
    479a:	99 1f       	adc	r25, r25
    479c:	88 0f       	add	r24, r24
    479e:	99 1f       	adc	r25, r25
    47a0:	28 0f       	add	r18, r24
    47a2:	39 1f       	adc	r19, r25
    47a4:	88 a1       	ldd	r24, Y+32	; 0x20
    47a6:	99 a1       	ldd	r25, Y+33	; 0x21
    47a8:	fc 01       	movw	r30, r24
    47aa:	37 87       	std	Z+15, r19	; 0x0f
    47ac:	26 87       	std	Z+14, r18	; 0x0e
    47ae:	cb c1       	rjmp	.+918    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    47b0:	8a a1       	ldd	r24, Y+34	; 0x22
    47b2:	8d 30       	cpi	r24, 0x0D	; 13
    47b4:	09 f4       	brne	.+2      	; 0x47b8 <_ZN12Adafruit_GFX5writeEh+0x80>
    47b6:	c7 c1       	rjmp	.+910    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    47b8:	88 a1       	ldd	r24, Y+32	; 0x20
    47ba:	99 a1       	ldd	r25, Y+33	; 0x21
    47bc:	fc 01       	movw	r30, r24
    47be:	87 89       	ldd	r24, Z+23	; 0x17
    47c0:	88 23       	and	r24, r24
    47c2:	d1 f1       	breq	.+116    	; 0x4838 <_ZN12Adafruit_GFX5writeEh+0x100>
    47c4:	88 a1       	ldd	r24, Y+32	; 0x20
    47c6:	99 a1       	ldd	r25, Y+33	; 0x21
    47c8:	fc 01       	movw	r30, r24
    47ca:	44 85       	ldd	r20, Z+12	; 0x0c
    47cc:	55 85       	ldd	r21, Z+13	; 0x0d
    47ce:	88 a1       	ldd	r24, Y+32	; 0x20
    47d0:	99 a1       	ldd	r25, Y+33	; 0x21
    47d2:	fc 01       	movw	r30, r24
    47d4:	84 89       	ldd	r24, Z+20	; 0x14
    47d6:	28 2f       	mov	r18, r24
    47d8:	30 e0       	ldi	r19, 0x00	; 0
    47da:	c9 01       	movw	r24, r18
    47dc:	88 0f       	add	r24, r24
    47de:	99 1f       	adc	r25, r25
    47e0:	82 0f       	add	r24, r18
    47e2:	93 1f       	adc	r25, r19
    47e4:	88 0f       	add	r24, r24
    47e6:	99 1f       	adc	r25, r25
    47e8:	9a 01       	movw	r18, r20
    47ea:	28 0f       	add	r18, r24
    47ec:	39 1f       	adc	r19, r25
    47ee:	88 a1       	ldd	r24, Y+32	; 0x20
    47f0:	99 a1       	ldd	r25, Y+33	; 0x21
    47f2:	fc 01       	movw	r30, r24
    47f4:	80 85       	ldd	r24, Z+8	; 0x08
    47f6:	91 85       	ldd	r25, Z+9	; 0x09
    47f8:	82 17       	cp	r24, r18
    47fa:	93 07       	cpc	r25, r19
    47fc:	ec f4       	brge	.+58     	; 0x4838 <_ZN12Adafruit_GFX5writeEh+0x100>
    47fe:	88 a1       	ldd	r24, Y+32	; 0x20
    4800:	99 a1       	ldd	r25, Y+33	; 0x21
    4802:	fc 01       	movw	r30, r24
    4804:	15 86       	std	Z+13, r1	; 0x0d
    4806:	14 86       	std	Z+12, r1	; 0x0c
    4808:	88 a1       	ldd	r24, Y+32	; 0x20
    480a:	99 a1       	ldd	r25, Y+33	; 0x21
    480c:	fc 01       	movw	r30, r24
    480e:	26 85       	ldd	r18, Z+14	; 0x0e
    4810:	37 85       	ldd	r19, Z+15	; 0x0f
    4812:	88 a1       	ldd	r24, Y+32	; 0x20
    4814:	99 a1       	ldd	r25, Y+33	; 0x21
    4816:	fc 01       	movw	r30, r24
    4818:	85 89       	ldd	r24, Z+21	; 0x15
    481a:	88 2f       	mov	r24, r24
    481c:	90 e0       	ldi	r25, 0x00	; 0
    481e:	88 0f       	add	r24, r24
    4820:	99 1f       	adc	r25, r25
    4822:	88 0f       	add	r24, r24
    4824:	99 1f       	adc	r25, r25
    4826:	88 0f       	add	r24, r24
    4828:	99 1f       	adc	r25, r25
    482a:	28 0f       	add	r18, r24
    482c:	39 1f       	adc	r19, r25
    482e:	88 a1       	ldd	r24, Y+32	; 0x20
    4830:	99 a1       	ldd	r25, Y+33	; 0x21
    4832:	fc 01       	movw	r30, r24
    4834:	37 87       	std	Z+15, r19	; 0x0f
    4836:	26 87       	std	Z+14, r18	; 0x0e
    4838:	88 a1       	ldd	r24, Y+32	; 0x20
    483a:	99 a1       	ldd	r25, Y+33	; 0x21
    483c:	fc 01       	movw	r30, r24
    483e:	b5 89       	ldd	r27, Z+21	; 0x15
    4840:	88 a1       	ldd	r24, Y+32	; 0x20
    4842:	99 a1       	ldd	r25, Y+33	; 0x21
    4844:	fc 01       	movw	r30, r24
    4846:	a4 89       	ldd	r26, Z+20	; 0x14
    4848:	88 a1       	ldd	r24, Y+32	; 0x20
    484a:	99 a1       	ldd	r25, Y+33	; 0x21
    484c:	fc 01       	movw	r30, r24
    484e:	02 88       	ldd	r0, Z+18	; 0x12
    4850:	f3 89       	ldd	r31, Z+19	; 0x13
    4852:	e0 2d       	mov	r30, r0
    4854:	fc a3       	std	Y+36, r31	; 0x24
    4856:	eb a3       	std	Y+35, r30	; 0x23
    4858:	88 a1       	ldd	r24, Y+32	; 0x20
    485a:	99 a1       	ldd	r25, Y+33	; 0x21
    485c:	fc 01       	movw	r30, r24
    485e:	20 89       	ldd	r18, Z+16	; 0x10
    4860:	31 89       	ldd	r19, Z+17	; 0x11
    4862:	88 a1       	ldd	r24, Y+32	; 0x20
    4864:	99 a1       	ldd	r25, Y+33	; 0x21
    4866:	fc 01       	movw	r30, r24
    4868:	46 85       	ldd	r20, Z+14	; 0x0e
    486a:	57 85       	ldd	r21, Z+15	; 0x0f
    486c:	88 a1       	ldd	r24, Y+32	; 0x20
    486e:	99 a1       	ldd	r25, Y+33	; 0x21
    4870:	fc 01       	movw	r30, r24
    4872:	64 85       	ldd	r22, Z+12	; 0x0c
    4874:	75 85       	ldd	r23, Z+13	; 0x0d
    4876:	88 a1       	ldd	r24, Y+32	; 0x20
    4878:	99 a1       	ldd	r25, Y+33	; 0x21
    487a:	ab 2e       	mov	r10, r27
    487c:	ca 2e       	mov	r12, r26
    487e:	eb a0       	ldd	r14, Y+35	; 0x23
    4880:	fc a0       	ldd	r15, Y+36	; 0x24
    4882:	89 01       	movw	r16, r18
    4884:	2a a1       	ldd	r18, Y+34	; 0x22
    4886:	06 dc       	rcall	.-2036   	; 0x4094 <_ZN12Adafruit_GFX8drawCharEiihjjhh>
    4888:	88 a1       	ldd	r24, Y+32	; 0x20
    488a:	99 a1       	ldd	r25, Y+33	; 0x21
    488c:	fc 01       	movw	r30, r24
    488e:	44 85       	ldd	r20, Z+12	; 0x0c
    4890:	55 85       	ldd	r21, Z+13	; 0x0d
    4892:	88 a1       	ldd	r24, Y+32	; 0x20
    4894:	99 a1       	ldd	r25, Y+33	; 0x21
    4896:	fc 01       	movw	r30, r24
    4898:	84 89       	ldd	r24, Z+20	; 0x14
    489a:	28 2f       	mov	r18, r24
    489c:	30 e0       	ldi	r19, 0x00	; 0
    489e:	c9 01       	movw	r24, r18
    48a0:	88 0f       	add	r24, r24
    48a2:	99 1f       	adc	r25, r25
    48a4:	82 0f       	add	r24, r18
    48a6:	93 1f       	adc	r25, r19
    48a8:	88 0f       	add	r24, r24
    48aa:	99 1f       	adc	r25, r25
    48ac:	9a 01       	movw	r18, r20
    48ae:	28 0f       	add	r18, r24
    48b0:	39 1f       	adc	r19, r25
    48b2:	88 a1       	ldd	r24, Y+32	; 0x20
    48b4:	99 a1       	ldd	r25, Y+33	; 0x21
    48b6:	fc 01       	movw	r30, r24
    48b8:	35 87       	std	Z+13, r19	; 0x0d
    48ba:	24 87       	std	Z+12, r18	; 0x0c
    48bc:	44 c1       	rjmp	.+648    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    48be:	8a a1       	ldd	r24, Y+34	; 0x22
    48c0:	8a 30       	cpi	r24, 0x0A	; 10
    48c2:	79 f5       	brne	.+94     	; 0x4922 <_ZN12Adafruit_GFX5writeEh+0x1ea>
    48c4:	88 a1       	ldd	r24, Y+32	; 0x20
    48c6:	99 a1       	ldd	r25, Y+33	; 0x21
    48c8:	fc 01       	movw	r30, r24
    48ca:	15 86       	std	Z+13, r1	; 0x0d
    48cc:	14 86       	std	Z+12, r1	; 0x0c
    48ce:	88 a1       	ldd	r24, Y+32	; 0x20
    48d0:	99 a1       	ldd	r25, Y+33	; 0x21
    48d2:	fc 01       	movw	r30, r24
    48d4:	85 89       	ldd	r24, Z+21	; 0x15
    48d6:	48 2f       	mov	r20, r24
    48d8:	50 e0       	ldi	r21, 0x00	; 0
    48da:	88 a1       	ldd	r24, Y+32	; 0x20
    48dc:	99 a1       	ldd	r25, Y+33	; 0x21
    48de:	fc 01       	movw	r30, r24
    48e0:	81 8d       	ldd	r24, Z+25	; 0x19
    48e2:	92 8d       	ldd	r25, Z+26	; 0x1a
    48e4:	08 96       	adiw	r24, 0x08	; 8
    48e6:	9a 83       	std	Y+2, r25	; 0x02
    48e8:	89 83       	std	Y+1, r24	; 0x01
    48ea:	89 81       	ldd	r24, Y+1	; 0x01
    48ec:	9a 81       	ldd	r25, Y+2	; 0x02
    48ee:	fc 01       	movw	r30, r24
    48f0:	84 91       	lpm	r24, Z
    48f2:	8b 83       	std	Y+3, r24	; 0x03
    48f4:	8b 81       	ldd	r24, Y+3	; 0x03
    48f6:	28 2f       	mov	r18, r24
    48f8:	30 e0       	ldi	r19, 0x00	; 0
    48fa:	42 9f       	mul	r20, r18
    48fc:	c0 01       	movw	r24, r0
    48fe:	43 9f       	mul	r20, r19
    4900:	90 0d       	add	r25, r0
    4902:	52 9f       	mul	r21, r18
    4904:	90 0d       	add	r25, r0
    4906:	11 24       	eor	r1, r1
    4908:	28 a1       	ldd	r18, Y+32	; 0x20
    490a:	39 a1       	ldd	r19, Y+33	; 0x21
    490c:	f9 01       	movw	r30, r18
    490e:	26 85       	ldd	r18, Z+14	; 0x0e
    4910:	37 85       	ldd	r19, Z+15	; 0x0f
    4912:	28 0f       	add	r18, r24
    4914:	39 1f       	adc	r19, r25
    4916:	88 a1       	ldd	r24, Y+32	; 0x20
    4918:	99 a1       	ldd	r25, Y+33	; 0x21
    491a:	fc 01       	movw	r30, r24
    491c:	37 87       	std	Z+15, r19	; 0x0f
    491e:	26 87       	std	Z+14, r18	; 0x0e
    4920:	12 c1       	rjmp	.+548    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    4922:	8a a1       	ldd	r24, Y+34	; 0x22
    4924:	8d 30       	cpi	r24, 0x0D	; 13
    4926:	09 f4       	brne	.+2      	; 0x492a <_ZN12Adafruit_GFX5writeEh+0x1f2>
    4928:	0e c1       	rjmp	.+540    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    492a:	88 a1       	ldd	r24, Y+32	; 0x20
    492c:	99 a1       	ldd	r25, Y+33	; 0x21
    492e:	fc 01       	movw	r30, r24
    4930:	81 8d       	ldd	r24, Z+25	; 0x19
    4932:	92 8d       	ldd	r25, Z+26	; 0x1a
    4934:	04 96       	adiw	r24, 0x04	; 4
    4936:	9d 83       	std	Y+5, r25	; 0x05
    4938:	8c 83       	std	Y+4, r24	; 0x04
    493a:	8c 81       	ldd	r24, Y+4	; 0x04
    493c:	9d 81       	ldd	r25, Y+5	; 0x05
    493e:	fc 01       	movw	r30, r24
    4940:	84 91       	lpm	r24, Z
    4942:	8e 83       	std	Y+6, r24	; 0x06
    4944:	8e 81       	ldd	r24, Y+6	; 0x06
    4946:	8f 83       	std	Y+7, r24	; 0x07
    4948:	9a a1       	ldd	r25, Y+34	; 0x22
    494a:	8f 81       	ldd	r24, Y+7	; 0x07
    494c:	98 17       	cp	r25, r24
    494e:	98 f0       	brcs	.+38     	; 0x4976 <_ZN12Adafruit_GFX5writeEh+0x23e>
    4950:	88 a1       	ldd	r24, Y+32	; 0x20
    4952:	99 a1       	ldd	r25, Y+33	; 0x21
    4954:	fc 01       	movw	r30, r24
    4956:	81 8d       	ldd	r24, Z+25	; 0x19
    4958:	92 8d       	ldd	r25, Z+26	; 0x1a
    495a:	06 96       	adiw	r24, 0x06	; 6
    495c:	99 87       	std	Y+9, r25	; 0x09
    495e:	88 87       	std	Y+8, r24	; 0x08
    4960:	88 85       	ldd	r24, Y+8	; 0x08
    4962:	99 85       	ldd	r25, Y+9	; 0x09
    4964:	fc 01       	movw	r30, r24
    4966:	84 91       	lpm	r24, Z
    4968:	8a 87       	std	Y+10, r24	; 0x0a
    496a:	9a 85       	ldd	r25, Y+10	; 0x0a
    496c:	8a a1       	ldd	r24, Y+34	; 0x22
    496e:	98 17       	cp	r25, r24
    4970:	10 f0       	brcs	.+4      	; 0x4976 <_ZN12Adafruit_GFX5writeEh+0x23e>
    4972:	81 e0       	ldi	r24, 0x01	; 1
    4974:	01 c0       	rjmp	.+2      	; 0x4978 <_ZN12Adafruit_GFX5writeEh+0x240>
    4976:	80 e0       	ldi	r24, 0x00	; 0
    4978:	88 23       	and	r24, r24
    497a:	09 f4       	brne	.+2      	; 0x497e <_ZN12Adafruit_GFX5writeEh+0x246>
    497c:	e4 c0       	rjmp	.+456    	; 0x4b46 <_ZN12Adafruit_GFX5writeEh+0x40e>
    497e:	9a a1       	ldd	r25, Y+34	; 0x22
    4980:	8f 81       	ldd	r24, Y+7	; 0x07
    4982:	29 2f       	mov	r18, r25
    4984:	28 1b       	sub	r18, r24
    4986:	88 a1       	ldd	r24, Y+32	; 0x20
    4988:	99 a1       	ldd	r25, Y+33	; 0x21
    498a:	fc 01       	movw	r30, r24
    498c:	81 8d       	ldd	r24, Z+25	; 0x19
    498e:	92 8d       	ldd	r25, Z+26	; 0x1a
    4990:	62 2f       	mov	r22, r18
    4992:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <_Z18pgm_read_glyph_ptrPK7GFXfonth>
    4996:	9c 87       	std	Y+12, r25	; 0x0c
    4998:	8b 87       	std	Y+11, r24	; 0x0b
    499a:	8b 85       	ldd	r24, Y+11	; 0x0b
    499c:	9c 85       	ldd	r25, Y+12	; 0x0c
    499e:	02 96       	adiw	r24, 0x02	; 2
    49a0:	9e 87       	std	Y+14, r25	; 0x0e
    49a2:	8d 87       	std	Y+13, r24	; 0x0d
    49a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    49a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    49a8:	fc 01       	movw	r30, r24
    49aa:	84 91       	lpm	r24, Z
    49ac:	8f 87       	std	Y+15, r24	; 0x0f
    49ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    49b0:	88 8b       	std	Y+16, r24	; 0x10
    49b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    49b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    49b6:	03 96       	adiw	r24, 0x03	; 3
    49b8:	9a 8b       	std	Y+18, r25	; 0x12
    49ba:	89 8b       	std	Y+17, r24	; 0x11
    49bc:	89 89       	ldd	r24, Y+17	; 0x11
    49be:	9a 89       	ldd	r25, Y+18	; 0x12
    49c0:	fc 01       	movw	r30, r24
    49c2:	84 91       	lpm	r24, Z
    49c4:	8b 8b       	std	Y+19, r24	; 0x13
    49c6:	8b 89       	ldd	r24, Y+19	; 0x13
    49c8:	8c 8b       	std	Y+20, r24	; 0x14
    49ca:	88 89       	ldd	r24, Y+16	; 0x10
    49cc:	88 23       	and	r24, r24
    49ce:	09 f4       	brne	.+2      	; 0x49d2 <_ZN12Adafruit_GFX5writeEh+0x29a>
    49d0:	94 c0       	rjmp	.+296    	; 0x4afa <_ZN12Adafruit_GFX5writeEh+0x3c2>
    49d2:	8c 89       	ldd	r24, Y+20	; 0x14
    49d4:	88 23       	and	r24, r24
    49d6:	09 f4       	brne	.+2      	; 0x49da <_ZN12Adafruit_GFX5writeEh+0x2a2>
    49d8:	90 c0       	rjmp	.+288    	; 0x4afa <_ZN12Adafruit_GFX5writeEh+0x3c2>
    49da:	8b 85       	ldd	r24, Y+11	; 0x0b
    49dc:	9c 85       	ldd	r25, Y+12	; 0x0c
    49de:	05 96       	adiw	r24, 0x05	; 5
    49e0:	9e 8b       	std	Y+22, r25	; 0x16
    49e2:	8d 8b       	std	Y+21, r24	; 0x15
    49e4:	8d 89       	ldd	r24, Y+21	; 0x15
    49e6:	9e 89       	ldd	r25, Y+22	; 0x16
    49e8:	fc 01       	movw	r30, r24
    49ea:	84 91       	lpm	r24, Z
    49ec:	8f 8b       	std	Y+23, r24	; 0x17
    49ee:	8f 89       	ldd	r24, Y+23	; 0x17
    49f0:	08 2e       	mov	r0, r24
    49f2:	00 0c       	add	r0, r0
    49f4:	99 0b       	sbc	r25, r25
    49f6:	99 8f       	std	Y+25, r25	; 0x19
    49f8:	88 8f       	std	Y+24, r24	; 0x18
    49fa:	88 a1       	ldd	r24, Y+32	; 0x20
    49fc:	99 a1       	ldd	r25, Y+33	; 0x21
    49fe:	fc 01       	movw	r30, r24
    4a00:	87 89       	ldd	r24, Z+23	; 0x17
    4a02:	88 23       	and	r24, r24
    4a04:	09 f4       	brne	.+2      	; 0x4a08 <_ZN12Adafruit_GFX5writeEh+0x2d0>
    4a06:	51 c0       	rjmp	.+162    	; 0x4aaa <_ZN12Adafruit_GFX5writeEh+0x372>
    4a08:	88 a1       	ldd	r24, Y+32	; 0x20
    4a0a:	99 a1       	ldd	r25, Y+33	; 0x21
    4a0c:	fc 01       	movw	r30, r24
    4a0e:	24 85       	ldd	r18, Z+12	; 0x0c
    4a10:	35 85       	ldd	r19, Z+13	; 0x0d
    4a12:	88 a1       	ldd	r24, Y+32	; 0x20
    4a14:	99 a1       	ldd	r25, Y+33	; 0x21
    4a16:	fc 01       	movw	r30, r24
    4a18:	84 89       	ldd	r24, Z+20	; 0x14
    4a1a:	68 2f       	mov	r22, r24
    4a1c:	70 e0       	ldi	r23, 0x00	; 0
    4a1e:	88 89       	ldd	r24, Y+16	; 0x10
    4a20:	48 2f       	mov	r20, r24
    4a22:	50 e0       	ldi	r21, 0x00	; 0
    4a24:	88 8d       	ldd	r24, Y+24	; 0x18
    4a26:	99 8d       	ldd	r25, Y+25	; 0x19
    4a28:	48 0f       	add	r20, r24
    4a2a:	59 1f       	adc	r21, r25
    4a2c:	64 9f       	mul	r22, r20
    4a2e:	c0 01       	movw	r24, r0
    4a30:	65 9f       	mul	r22, r21
    4a32:	90 0d       	add	r25, r0
    4a34:	74 9f       	mul	r23, r20
    4a36:	90 0d       	add	r25, r0
    4a38:	11 24       	eor	r1, r1
    4a3a:	28 0f       	add	r18, r24
    4a3c:	39 1f       	adc	r19, r25
    4a3e:	88 a1       	ldd	r24, Y+32	; 0x20
    4a40:	99 a1       	ldd	r25, Y+33	; 0x21
    4a42:	fc 01       	movw	r30, r24
    4a44:	80 85       	ldd	r24, Z+8	; 0x08
    4a46:	91 85       	ldd	r25, Z+9	; 0x09
    4a48:	82 17       	cp	r24, r18
    4a4a:	93 07       	cpc	r25, r19
    4a4c:	74 f5       	brge	.+92     	; 0x4aaa <_ZN12Adafruit_GFX5writeEh+0x372>
    4a4e:	88 a1       	ldd	r24, Y+32	; 0x20
    4a50:	99 a1       	ldd	r25, Y+33	; 0x21
    4a52:	fc 01       	movw	r30, r24
    4a54:	15 86       	std	Z+13, r1	; 0x0d
    4a56:	14 86       	std	Z+12, r1	; 0x0c
    4a58:	88 a1       	ldd	r24, Y+32	; 0x20
    4a5a:	99 a1       	ldd	r25, Y+33	; 0x21
    4a5c:	fc 01       	movw	r30, r24
    4a5e:	85 89       	ldd	r24, Z+21	; 0x15
    4a60:	48 2f       	mov	r20, r24
    4a62:	50 e0       	ldi	r21, 0x00	; 0
    4a64:	88 a1       	ldd	r24, Y+32	; 0x20
    4a66:	99 a1       	ldd	r25, Y+33	; 0x21
    4a68:	fc 01       	movw	r30, r24
    4a6a:	81 8d       	ldd	r24, Z+25	; 0x19
    4a6c:	92 8d       	ldd	r25, Z+26	; 0x1a
    4a6e:	08 96       	adiw	r24, 0x08	; 8
    4a70:	9b 8f       	std	Y+27, r25	; 0x1b
    4a72:	8a 8f       	std	Y+26, r24	; 0x1a
    4a74:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4a76:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4a78:	fc 01       	movw	r30, r24
    4a7a:	84 91       	lpm	r24, Z
    4a7c:	8c 8f       	std	Y+28, r24	; 0x1c
    4a7e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4a80:	28 2f       	mov	r18, r24
    4a82:	30 e0       	ldi	r19, 0x00	; 0
    4a84:	42 9f       	mul	r20, r18
    4a86:	c0 01       	movw	r24, r0
    4a88:	43 9f       	mul	r20, r19
    4a8a:	90 0d       	add	r25, r0
    4a8c:	52 9f       	mul	r21, r18
    4a8e:	90 0d       	add	r25, r0
    4a90:	11 24       	eor	r1, r1
    4a92:	28 a1       	ldd	r18, Y+32	; 0x20
    4a94:	39 a1       	ldd	r19, Y+33	; 0x21
    4a96:	f9 01       	movw	r30, r18
    4a98:	26 85       	ldd	r18, Z+14	; 0x0e
    4a9a:	37 85       	ldd	r19, Z+15	; 0x0f
    4a9c:	28 0f       	add	r18, r24
    4a9e:	39 1f       	adc	r19, r25
    4aa0:	88 a1       	ldd	r24, Y+32	; 0x20
    4aa2:	99 a1       	ldd	r25, Y+33	; 0x21
    4aa4:	fc 01       	movw	r30, r24
    4aa6:	37 87       	std	Z+15, r19	; 0x0f
    4aa8:	26 87       	std	Z+14, r18	; 0x0e
    4aaa:	88 a1       	ldd	r24, Y+32	; 0x20
    4aac:	99 a1       	ldd	r25, Y+33	; 0x21
    4aae:	fc 01       	movw	r30, r24
    4ab0:	b5 89       	ldd	r27, Z+21	; 0x15
    4ab2:	88 a1       	ldd	r24, Y+32	; 0x20
    4ab4:	99 a1       	ldd	r25, Y+33	; 0x21
    4ab6:	fc 01       	movw	r30, r24
    4ab8:	a4 89       	ldd	r26, Z+20	; 0x14
    4aba:	88 a1       	ldd	r24, Y+32	; 0x20
    4abc:	99 a1       	ldd	r25, Y+33	; 0x21
    4abe:	fc 01       	movw	r30, r24
    4ac0:	02 88       	ldd	r0, Z+18	; 0x12
    4ac2:	f3 89       	ldd	r31, Z+19	; 0x13
    4ac4:	e0 2d       	mov	r30, r0
    4ac6:	fc a3       	std	Y+36, r31	; 0x24
    4ac8:	eb a3       	std	Y+35, r30	; 0x23
    4aca:	88 a1       	ldd	r24, Y+32	; 0x20
    4acc:	99 a1       	ldd	r25, Y+33	; 0x21
    4ace:	fc 01       	movw	r30, r24
    4ad0:	20 89       	ldd	r18, Z+16	; 0x10
    4ad2:	31 89       	ldd	r19, Z+17	; 0x11
    4ad4:	88 a1       	ldd	r24, Y+32	; 0x20
    4ad6:	99 a1       	ldd	r25, Y+33	; 0x21
    4ad8:	fc 01       	movw	r30, r24
    4ada:	46 85       	ldd	r20, Z+14	; 0x0e
    4adc:	57 85       	ldd	r21, Z+15	; 0x0f
    4ade:	88 a1       	ldd	r24, Y+32	; 0x20
    4ae0:	99 a1       	ldd	r25, Y+33	; 0x21
    4ae2:	fc 01       	movw	r30, r24
    4ae4:	64 85       	ldd	r22, Z+12	; 0x0c
    4ae6:	75 85       	ldd	r23, Z+13	; 0x0d
    4ae8:	88 a1       	ldd	r24, Y+32	; 0x20
    4aea:	99 a1       	ldd	r25, Y+33	; 0x21
    4aec:	ab 2e       	mov	r10, r27
    4aee:	ca 2e       	mov	r12, r26
    4af0:	eb a0       	ldd	r14, Y+35	; 0x23
    4af2:	fc a0       	ldd	r15, Y+36	; 0x24
    4af4:	89 01       	movw	r16, r18
    4af6:	2a a1       	ldd	r18, Y+34	; 0x22
    4af8:	cd da       	rcall	.-2662   	; 0x4094 <_ZN12Adafruit_GFX8drawCharEiihjjhh>
    4afa:	8b 85       	ldd	r24, Y+11	; 0x0b
    4afc:	9c 85       	ldd	r25, Y+12	; 0x0c
    4afe:	04 96       	adiw	r24, 0x04	; 4
    4b00:	9e 8f       	std	Y+30, r25	; 0x1e
    4b02:	8d 8f       	std	Y+29, r24	; 0x1d
    4b04:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4b06:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4b08:	fc 01       	movw	r30, r24
    4b0a:	84 91       	lpm	r24, Z
    4b0c:	8f 8f       	std	Y+31, r24	; 0x1f
    4b0e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4b10:	48 2f       	mov	r20, r24
    4b12:	50 e0       	ldi	r21, 0x00	; 0
    4b14:	88 a1       	ldd	r24, Y+32	; 0x20
    4b16:	99 a1       	ldd	r25, Y+33	; 0x21
    4b18:	fc 01       	movw	r30, r24
    4b1a:	84 89       	ldd	r24, Z+20	; 0x14
    4b1c:	28 2f       	mov	r18, r24
    4b1e:	30 e0       	ldi	r19, 0x00	; 0
    4b20:	42 9f       	mul	r20, r18
    4b22:	c0 01       	movw	r24, r0
    4b24:	43 9f       	mul	r20, r19
    4b26:	90 0d       	add	r25, r0
    4b28:	52 9f       	mul	r21, r18
    4b2a:	90 0d       	add	r25, r0
    4b2c:	11 24       	eor	r1, r1
    4b2e:	28 a1       	ldd	r18, Y+32	; 0x20
    4b30:	39 a1       	ldd	r19, Y+33	; 0x21
    4b32:	f9 01       	movw	r30, r18
    4b34:	24 85       	ldd	r18, Z+12	; 0x0c
    4b36:	35 85       	ldd	r19, Z+13	; 0x0d
    4b38:	28 0f       	add	r18, r24
    4b3a:	39 1f       	adc	r19, r25
    4b3c:	88 a1       	ldd	r24, Y+32	; 0x20
    4b3e:	99 a1       	ldd	r25, Y+33	; 0x21
    4b40:	fc 01       	movw	r30, r24
    4b42:	35 87       	std	Z+13, r19	; 0x0d
    4b44:	24 87       	std	Z+12, r18	; 0x0c
    4b46:	81 e0       	ldi	r24, 0x01	; 1
    4b48:	90 e0       	ldi	r25, 0x00	; 0
    4b4a:	a4 96       	adiw	r28, 0x24	; 36
    4b4c:	0f b6       	in	r0, 0x3f	; 63
    4b4e:	f8 94       	cli
    4b50:	de bf       	out	0x3e, r29	; 62
    4b52:	0f be       	out	0x3f, r0	; 63
    4b54:	cd bf       	out	0x3d, r28	; 61
    4b56:	df 91       	pop	r29
    4b58:	cf 91       	pop	r28
    4b5a:	1f 91       	pop	r17
    4b5c:	0f 91       	pop	r16
    4b5e:	ff 90       	pop	r15
    4b60:	ef 90       	pop	r14
    4b62:	cf 90       	pop	r12
    4b64:	af 90       	pop	r10
    4b66:	08 95       	ret

00004b68 <_ZN12Adafruit_GFX11setTextSizeEh>:
    4b68:	cf 93       	push	r28
    4b6a:	df 93       	push	r29
    4b6c:	00 d0       	rcall	.+0      	; 0x4b6e <_ZN12Adafruit_GFX11setTextSizeEh+0x6>
    4b6e:	cd b7       	in	r28, 0x3d	; 61
    4b70:	de b7       	in	r29, 0x3e	; 62
    4b72:	9a 83       	std	Y+2, r25	; 0x02
    4b74:	89 83       	std	Y+1, r24	; 0x01
    4b76:	6b 83       	std	Y+3, r22	; 0x03
    4b78:	89 81       	ldd	r24, Y+1	; 0x01
    4b7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b7c:	4b 81       	ldd	r20, Y+3	; 0x03
    4b7e:	6b 81       	ldd	r22, Y+3	; 0x03
    4b80:	07 d0       	rcall	.+14     	; 0x4b90 <_ZN12Adafruit_GFX11setTextSizeEhh>
    4b82:	00 00       	nop
    4b84:	0f 90       	pop	r0
    4b86:	0f 90       	pop	r0
    4b88:	0f 90       	pop	r0
    4b8a:	df 91       	pop	r29
    4b8c:	cf 91       	pop	r28
    4b8e:	08 95       	ret

00004b90 <_ZN12Adafruit_GFX11setTextSizeEhh>:
    4b90:	cf 93       	push	r28
    4b92:	df 93       	push	r29
    4b94:	00 d0       	rcall	.+0      	; 0x4b96 <_ZN12Adafruit_GFX11setTextSizeEhh+0x6>
    4b96:	1f 92       	push	r1
    4b98:	cd b7       	in	r28, 0x3d	; 61
    4b9a:	de b7       	in	r29, 0x3e	; 62
    4b9c:	9a 83       	std	Y+2, r25	; 0x02
    4b9e:	89 83       	std	Y+1, r24	; 0x01
    4ba0:	6b 83       	std	Y+3, r22	; 0x03
    4ba2:	4c 83       	std	Y+4, r20	; 0x04
    4ba4:	8b 81       	ldd	r24, Y+3	; 0x03
    4ba6:	88 23       	and	r24, r24
    4ba8:	11 f0       	breq	.+4      	; 0x4bae <_ZN12Adafruit_GFX11setTextSizeEhh+0x1e>
    4baa:	2b 81       	ldd	r18, Y+3	; 0x03
    4bac:	01 c0       	rjmp	.+2      	; 0x4bb0 <_ZN12Adafruit_GFX11setTextSizeEhh+0x20>
    4bae:	21 e0       	ldi	r18, 0x01	; 1
    4bb0:	89 81       	ldd	r24, Y+1	; 0x01
    4bb2:	9a 81       	ldd	r25, Y+2	; 0x02
    4bb4:	fc 01       	movw	r30, r24
    4bb6:	24 8b       	std	Z+20, r18	; 0x14
    4bb8:	8c 81       	ldd	r24, Y+4	; 0x04
    4bba:	88 23       	and	r24, r24
    4bbc:	11 f0       	breq	.+4      	; 0x4bc2 <_ZN12Adafruit_GFX11setTextSizeEhh+0x32>
    4bbe:	2c 81       	ldd	r18, Y+4	; 0x04
    4bc0:	01 c0       	rjmp	.+2      	; 0x4bc4 <_ZN12Adafruit_GFX11setTextSizeEhh+0x34>
    4bc2:	21 e0       	ldi	r18, 0x01	; 1
    4bc4:	89 81       	ldd	r24, Y+1	; 0x01
    4bc6:	9a 81       	ldd	r25, Y+2	; 0x02
    4bc8:	fc 01       	movw	r30, r24
    4bca:	25 8b       	std	Z+21, r18	; 0x15
    4bcc:	00 00       	nop
    4bce:	0f 90       	pop	r0
    4bd0:	0f 90       	pop	r0
    4bd2:	0f 90       	pop	r0
    4bd4:	0f 90       	pop	r0
    4bd6:	df 91       	pop	r29
    4bd8:	cf 91       	pop	r28
    4bda:	08 95       	ret

00004bdc <_ZN12Adafruit_GFX11setRotationEh>:
    4bdc:	cf 93       	push	r28
    4bde:	df 93       	push	r29
    4be0:	00 d0       	rcall	.+0      	; 0x4be2 <_ZN12Adafruit_GFX11setRotationEh+0x6>
    4be2:	cd b7       	in	r28, 0x3d	; 61
    4be4:	de b7       	in	r29, 0x3e	; 62
    4be6:	9a 83       	std	Y+2, r25	; 0x02
    4be8:	89 83       	std	Y+1, r24	; 0x01
    4bea:	6b 83       	std	Y+3, r22	; 0x03
    4bec:	8b 81       	ldd	r24, Y+3	; 0x03
    4bee:	28 2f       	mov	r18, r24
    4bf0:	23 70       	andi	r18, 0x03	; 3
    4bf2:	89 81       	ldd	r24, Y+1	; 0x01
    4bf4:	9a 81       	ldd	r25, Y+2	; 0x02
    4bf6:	fc 01       	movw	r30, r24
    4bf8:	26 8b       	std	Z+22, r18	; 0x16
    4bfa:	89 81       	ldd	r24, Y+1	; 0x01
    4bfc:	9a 81       	ldd	r25, Y+2	; 0x02
    4bfe:	fc 01       	movw	r30, r24
    4c00:	86 89       	ldd	r24, Z+22	; 0x16
    4c02:	88 2f       	mov	r24, r24
    4c04:	90 e0       	ldi	r25, 0x00	; 0
    4c06:	81 30       	cpi	r24, 0x01	; 1
    4c08:	91 05       	cpc	r25, r1
    4c0a:	09 f1       	breq	.+66     	; 0x4c4e <_ZN12Adafruit_GFX11setRotationEh+0x72>
    4c0c:	82 30       	cpi	r24, 0x02	; 2
    4c0e:	91 05       	cpc	r25, r1
    4c10:	1c f4       	brge	.+6      	; 0x4c18 <_ZN12Adafruit_GFX11setRotationEh+0x3c>
    4c12:	89 2b       	or	r24, r25
    4c14:	39 f0       	breq	.+14     	; 0x4c24 <_ZN12Adafruit_GFX11setRotationEh+0x48>
    4c16:	30 c0       	rjmp	.+96     	; 0x4c78 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    4c18:	82 30       	cpi	r24, 0x02	; 2
    4c1a:	91 05       	cpc	r25, r1
    4c1c:	19 f0       	breq	.+6      	; 0x4c24 <_ZN12Adafruit_GFX11setRotationEh+0x48>
    4c1e:	03 97       	sbiw	r24, 0x03	; 3
    4c20:	b1 f0       	breq	.+44     	; 0x4c4e <_ZN12Adafruit_GFX11setRotationEh+0x72>
    4c22:	2a c0       	rjmp	.+84     	; 0x4c78 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    4c24:	89 81       	ldd	r24, Y+1	; 0x01
    4c26:	9a 81       	ldd	r25, Y+2	; 0x02
    4c28:	fc 01       	movw	r30, r24
    4c2a:	24 81       	ldd	r18, Z+4	; 0x04
    4c2c:	35 81       	ldd	r19, Z+5	; 0x05
    4c2e:	89 81       	ldd	r24, Y+1	; 0x01
    4c30:	9a 81       	ldd	r25, Y+2	; 0x02
    4c32:	fc 01       	movw	r30, r24
    4c34:	31 87       	std	Z+9, r19	; 0x09
    4c36:	20 87       	std	Z+8, r18	; 0x08
    4c38:	89 81       	ldd	r24, Y+1	; 0x01
    4c3a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c3c:	fc 01       	movw	r30, r24
    4c3e:	26 81       	ldd	r18, Z+6	; 0x06
    4c40:	37 81       	ldd	r19, Z+7	; 0x07
    4c42:	89 81       	ldd	r24, Y+1	; 0x01
    4c44:	9a 81       	ldd	r25, Y+2	; 0x02
    4c46:	fc 01       	movw	r30, r24
    4c48:	33 87       	std	Z+11, r19	; 0x0b
    4c4a:	22 87       	std	Z+10, r18	; 0x0a
    4c4c:	15 c0       	rjmp	.+42     	; 0x4c78 <_ZN12Adafruit_GFX11setRotationEh+0x9c>
    4c4e:	89 81       	ldd	r24, Y+1	; 0x01
    4c50:	9a 81       	ldd	r25, Y+2	; 0x02
    4c52:	fc 01       	movw	r30, r24
    4c54:	26 81       	ldd	r18, Z+6	; 0x06
    4c56:	37 81       	ldd	r19, Z+7	; 0x07
    4c58:	89 81       	ldd	r24, Y+1	; 0x01
    4c5a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c5c:	fc 01       	movw	r30, r24
    4c5e:	31 87       	std	Z+9, r19	; 0x09
    4c60:	20 87       	std	Z+8, r18	; 0x08
    4c62:	89 81       	ldd	r24, Y+1	; 0x01
    4c64:	9a 81       	ldd	r25, Y+2	; 0x02
    4c66:	fc 01       	movw	r30, r24
    4c68:	24 81       	ldd	r18, Z+4	; 0x04
    4c6a:	35 81       	ldd	r19, Z+5	; 0x05
    4c6c:	89 81       	ldd	r24, Y+1	; 0x01
    4c6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c70:	fc 01       	movw	r30, r24
    4c72:	33 87       	std	Z+11, r19	; 0x0b
    4c74:	22 87       	std	Z+10, r18	; 0x0a
    4c76:	00 00       	nop
    4c78:	00 00       	nop
    4c7a:	0f 90       	pop	r0
    4c7c:	0f 90       	pop	r0
    4c7e:	0f 90       	pop	r0
    4c80:	df 91       	pop	r29
    4c82:	cf 91       	pop	r28
    4c84:	08 95       	ret

00004c86 <_ZN12Adafruit_GFX13invertDisplayEb>:
/*!
    @brief      Invert the display (ideally using built-in hardware command)
    @param   i  True if you want to invert, false to make 'normal'
*/
/**************************************************************************/
void Adafruit_GFX::invertDisplay(bool i) {
    4c86:	cf 93       	push	r28
    4c88:	df 93       	push	r29
    4c8a:	00 d0       	rcall	.+0      	; 0x4c8c <_ZN12Adafruit_GFX13invertDisplayEb+0x6>
    4c8c:	cd b7       	in	r28, 0x3d	; 61
    4c8e:	de b7       	in	r29, 0x3e	; 62
    4c90:	9a 83       	std	Y+2, r25	; 0x02
    4c92:	89 83       	std	Y+1, r24	; 0x01
    4c94:	6b 83       	std	Y+3, r22	; 0x03
  // Do nothing, must be subclassed if supported by hardware
  (void)i; // disable -Wunused-parameter warning
}
    4c96:	00 00       	nop
    4c98:	0f 90       	pop	r0
    4c9a:	0f 90       	pop	r0
    4c9c:	0f 90       	pop	r0
    4c9e:	df 91       	pop	r29
    4ca0:	cf 91       	pop	r28
    4ca2:	08 95       	ret

00004ca4 <_ZN8SPIClass8transferEh>:
    SPCR = settings.spcr;
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    4ca4:	cf 93       	push	r28
    4ca6:	df 93       	push	r29
    4ca8:	1f 92       	push	r1
    4caa:	cd b7       	in	r28, 0x3d	; 61
    4cac:	de b7       	in	r29, 0x3e	; 62
    4cae:	89 83       	std	Y+1, r24	; 0x01
    SPDR = data;
    4cb0:	8e e4       	ldi	r24, 0x4E	; 78
    4cb2:	90 e0       	ldi	r25, 0x00	; 0
    4cb4:	29 81       	ldd	r18, Y+1	; 0x01
    4cb6:	fc 01       	movw	r30, r24
    4cb8:	20 83       	st	Z, r18
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
    4cba:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
    4cbc:	8d e4       	ldi	r24, 0x4D	; 77
    4cbe:	90 e0       	ldi	r25, 0x00	; 0
    4cc0:	fc 01       	movw	r30, r24
    4cc2:	80 81       	ld	r24, Z
    4cc4:	80 95       	com	r24
    4cc6:	88 1f       	adc	r24, r24
    4cc8:	88 27       	eor	r24, r24
    4cca:	88 1f       	adc	r24, r24
    4ccc:	88 23       	and	r24, r24
    4cce:	09 f0       	breq	.+2      	; 0x4cd2 <_ZN8SPIClass8transferEh+0x2e>
    4cd0:	f5 cf       	rjmp	.-22     	; 0x4cbc <_ZN8SPIClass8transferEh+0x18>
    return SPDR;
    4cd2:	8e e4       	ldi	r24, 0x4E	; 78
    4cd4:	90 e0       	ldi	r25, 0x00	; 0
    4cd6:	fc 01       	movw	r30, r24
    4cd8:	80 81       	ld	r24, Z
  }
    4cda:	0f 90       	pop	r0
    4cdc:	df 91       	pop	r29
    4cde:	cf 91       	pop	r28
    4ce0:	08 95       	ret

00004ce2 <_ZN11SPISettingsC1Ev>:
*/
void Adafruit_SSD1306::stopscroll(void) {
  TRANSACTION_START
  ssd1306_command1(SSD1306_DEACTIVATE_SCROLL);
  TRANSACTION_END
}
    4ce2:	cf 93       	push	r28
    4ce4:	df 93       	push	r29
    4ce6:	cd b7       	in	r28, 0x3d	; 61
    4ce8:	de b7       	in	r29, 0x3e	; 62
    4cea:	2f 97       	sbiw	r28, 0x0f	; 15
    4cec:	0f b6       	in	r0, 0x3f	; 63
    4cee:	f8 94       	cli
    4cf0:	de bf       	out	0x3e, r29	; 62
    4cf2:	0f be       	out	0x3f, r0	; 63
    4cf4:	cd bf       	out	0x3d, r28	; 61
    4cf6:	9f 87       	std	Y+15, r25	; 0x0f
    4cf8:	8e 87       	std	Y+14, r24	; 0x0e
    4cfa:	8e 85       	ldd	r24, Y+14	; 0x0e
    4cfc:	9f 85       	ldd	r25, Y+15	; 0x0f
    4cfe:	9a 83       	std	Y+2, r25	; 0x02
    4d00:	89 83       	std	Y+1, r24	; 0x01
    4d02:	80 e0       	ldi	r24, 0x00	; 0
    4d04:	99 e0       	ldi	r25, 0x09	; 9
    4d06:	ad e3       	ldi	r26, 0x3D	; 61
    4d08:	b0 e0       	ldi	r27, 0x00	; 0
    4d0a:	8b 83       	std	Y+3, r24	; 0x03
    4d0c:	9c 83       	std	Y+4, r25	; 0x04
    4d0e:	ad 83       	std	Y+5, r26	; 0x05
    4d10:	be 83       	std	Y+6, r27	; 0x06
    4d12:	81 e0       	ldi	r24, 0x01	; 1
    4d14:	8f 83       	std	Y+7, r24	; 0x07
    4d16:	18 86       	std	Y+8, r1	; 0x08
    4d18:	80 e0       	ldi	r24, 0x00	; 0
    4d1a:	92 e1       	ldi	r25, 0x12	; 18
    4d1c:	aa e7       	ldi	r26, 0x7A	; 122
    4d1e:	b0 e0       	ldi	r27, 0x00	; 0
    4d20:	89 87       	std	Y+9, r24	; 0x09
    4d22:	9a 87       	std	Y+10, r25	; 0x0a
    4d24:	ab 87       	std	Y+11, r26	; 0x0b
    4d26:	bc 87       	std	Y+12, r27	; 0x0c
    4d28:	1d 86       	std	Y+13, r1	; 0x0d
    4d2a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d2c:	86 30       	cpi	r24, 0x06	; 6
    4d2e:	e8 f4       	brcc	.+58     	; 0x4d6a <_ZN11SPISettingsC1Ev+0x88>
    4d30:	2b 81       	ldd	r18, Y+3	; 0x03
    4d32:	3c 81       	ldd	r19, Y+4	; 0x04
    4d34:	4d 81       	ldd	r20, Y+5	; 0x05
    4d36:	5e 81       	ldd	r21, Y+6	; 0x06
    4d38:	89 85       	ldd	r24, Y+9	; 0x09
    4d3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d3c:	ab 85       	ldd	r26, Y+11	; 0x0b
    4d3e:	bc 85       	ldd	r27, Y+12	; 0x0c
    4d40:	28 17       	cp	r18, r24
    4d42:	39 07       	cpc	r19, r25
    4d44:	4a 07       	cpc	r20, r26
    4d46:	5b 07       	cpc	r21, r27
    4d48:	80 f4       	brcc	.+32     	; 0x4d6a <_ZN11SPISettingsC1Ev+0x88>
    4d4a:	89 85       	ldd	r24, Y+9	; 0x09
    4d4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4d4e:	ab 85       	ldd	r26, Y+11	; 0x0b
    4d50:	bc 85       	ldd	r27, Y+12	; 0x0c
    4d52:	b6 95       	lsr	r27
    4d54:	a7 95       	ror	r26
    4d56:	97 95       	ror	r25
    4d58:	87 95       	ror	r24
    4d5a:	89 87       	std	Y+9, r24	; 0x09
    4d5c:	9a 87       	std	Y+10, r25	; 0x0a
    4d5e:	ab 87       	std	Y+11, r26	; 0x0b
    4d60:	bc 87       	std	Y+12, r27	; 0x0c
    4d62:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d64:	8f 5f       	subi	r24, 0xFF	; 255
    4d66:	8d 87       	std	Y+13, r24	; 0x0d
    4d68:	e0 cf       	rjmp	.-64     	; 0x4d2a <_ZN11SPISettingsC1Ev+0x48>
    4d6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d6c:	86 30       	cpi	r24, 0x06	; 6
    4d6e:	11 f4       	brne	.+4      	; 0x4d74 <_ZN11SPISettingsC1Ev+0x92>
    4d70:	87 e0       	ldi	r24, 0x07	; 7
    4d72:	8d 87       	std	Y+13, r24	; 0x0d
    4d74:	9d 85       	ldd	r25, Y+13	; 0x0d
    4d76:	81 e0       	ldi	r24, 0x01	; 1
    4d78:	89 27       	eor	r24, r25
    4d7a:	8d 87       	std	Y+13, r24	; 0x0d
    4d7c:	8f 81       	ldd	r24, Y+7	; 0x07
    4d7e:	88 23       	and	r24, r24
    4d80:	11 f4       	brne	.+4      	; 0x4d86 <_ZN11SPISettingsC1Ev+0xa4>
    4d82:	80 e7       	ldi	r24, 0x70	; 112
    4d84:	01 c0       	rjmp	.+2      	; 0x4d88 <_ZN11SPISettingsC1Ev+0xa6>
    4d86:	80 e5       	ldi	r24, 0x50	; 80
    4d88:	98 85       	ldd	r25, Y+8	; 0x08
    4d8a:	9c 70       	andi	r25, 0x0C	; 12
    4d8c:	29 2f       	mov	r18, r25
    4d8e:	28 2b       	or	r18, r24
    4d90:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d92:	88 2f       	mov	r24, r24
    4d94:	90 e0       	ldi	r25, 0x00	; 0
    4d96:	95 95       	asr	r25
    4d98:	87 95       	ror	r24
    4d9a:	83 70       	andi	r24, 0x03	; 3
    4d9c:	82 2b       	or	r24, r18
    4d9e:	28 2f       	mov	r18, r24
    4da0:	89 81       	ldd	r24, Y+1	; 0x01
    4da2:	9a 81       	ldd	r25, Y+2	; 0x02
    4da4:	fc 01       	movw	r30, r24
    4da6:	20 83       	st	Z, r18
    4da8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4daa:	28 2f       	mov	r18, r24
    4dac:	21 70       	andi	r18, 0x01	; 1
    4dae:	89 81       	ldd	r24, Y+1	; 0x01
    4db0:	9a 81       	ldd	r25, Y+2	; 0x02
    4db2:	fc 01       	movw	r30, r24
    4db4:	21 83       	std	Z+1, r18	; 0x01
    4db6:	00 00       	nop
    4db8:	2f 96       	adiw	r28, 0x0f	; 15
    4dba:	0f b6       	in	r0, 0x3f	; 63
    4dbc:	f8 94       	cli
    4dbe:	de bf       	out	0x3e, r29	; 62
    4dc0:	0f be       	out	0x3f, r0	; 63
    4dc2:	cd bf       	out	0x3d, r28	; 61
    4dc4:	df 91       	pop	r29
    4dc6:	cf 91       	pop	r28
    4dc8:	08 95       	ret

00004dca <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm>:
    4dca:	8f 92       	push	r8
    4dcc:	9f 92       	push	r9
    4dce:	af 92       	push	r10
    4dd0:	bf 92       	push	r11
    4dd2:	cf 92       	push	r12
    4dd4:	df 92       	push	r13
    4dd6:	ef 92       	push	r14
    4dd8:	ff 92       	push	r15
    4dda:	0f 93       	push	r16
    4ddc:	cf 93       	push	r28
    4dde:	df 93       	push	r29
    4de0:	cd b7       	in	r28, 0x3d	; 61
    4de2:	de b7       	in	r29, 0x3e	; 62
    4de4:	2f 97       	sbiw	r28, 0x0f	; 15
    4de6:	0f b6       	in	r0, 0x3f	; 63
    4de8:	f8 94       	cli
    4dea:	de bf       	out	0x3e, r29	; 62
    4dec:	0f be       	out	0x3f, r0	; 63
    4dee:	cd bf       	out	0x3d, r28	; 61
    4df0:	9a 83       	std	Y+2, r25	; 0x02
    4df2:	89 83       	std	Y+1, r24	; 0x01
    4df4:	6b 83       	std	Y+3, r22	; 0x03
    4df6:	4c 83       	std	Y+4, r20	; 0x04
    4df8:	3e 83       	std	Y+6, r19	; 0x06
    4dfa:	2d 83       	std	Y+5, r18	; 0x05
    4dfc:	0f 83       	std	Y+7, r16	; 0x07
    4dfe:	c8 86       	std	Y+8, r12	; 0x08
    4e00:	d9 86       	std	Y+9, r13	; 0x09
    4e02:	ea 86       	std	Y+10, r14	; 0x0a
    4e04:	fb 86       	std	Y+11, r15	; 0x0b
    4e06:	8c 86       	std	Y+12, r8	; 0x0c
    4e08:	9d 86       	std	Y+13, r9	; 0x0d
    4e0a:	ae 86       	std	Y+14, r10	; 0x0e
    4e0c:	bf 86       	std	Y+15, r11	; 0x0f
    4e0e:	8c 81       	ldd	r24, Y+4	; 0x04
    4e10:	48 2f       	mov	r20, r24
    4e12:	50 e0       	ldi	r21, 0x00	; 0
    4e14:	8b 81       	ldd	r24, Y+3	; 0x03
    4e16:	28 2f       	mov	r18, r24
    4e18:	30 e0       	ldi	r19, 0x00	; 0
    4e1a:	89 81       	ldd	r24, Y+1	; 0x01
    4e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    4e1e:	b9 01       	movw	r22, r18
    4e20:	0e 94 28 1a 	call	0x3450	; 0x3450 <_ZN12Adafruit_GFXC1Eii>
    4e24:	2b e3       	ldi	r18, 0x3B	; 59
    4e26:	32 e0       	ldi	r19, 0x02	; 2
    4e28:	89 81       	ldd	r24, Y+1	; 0x01
    4e2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	31 83       	std	Z+1, r19	; 0x01
    4e30:	20 83       	st	Z, r18
    4e32:	89 81       	ldd	r24, Y+1	; 0x01
    4e34:	9a 81       	ldd	r25, Y+2	; 0x02
    4e36:	fc 01       	movw	r30, r24
    4e38:	14 8e       	std	Z+28, r1	; 0x1c
    4e3a:	13 8e       	std	Z+27, r1	; 0x1b
    4e3c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e3e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e40:	89 2b       	or	r24, r25
    4e42:	19 f0       	breq	.+6      	; 0x4e4a <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm+0x80>
    4e44:	8d 81       	ldd	r24, Y+5	; 0x05
    4e46:	9e 81       	ldd	r25, Y+6	; 0x06
    4e48:	02 c0       	rjmp	.+4      	; 0x4e4e <_ZN16Adafruit_SSD1306C1EhhP7TwoWireamm+0x84>
    4e4a:	87 ee       	ldi	r24, 0xE7	; 231
    4e4c:	93 e0       	ldi	r25, 0x03	; 3
    4e4e:	29 81       	ldd	r18, Y+1	; 0x01
    4e50:	3a 81       	ldd	r19, Y+2	; 0x02
    4e52:	f9 01       	movw	r30, r18
    4e54:	96 8f       	std	Z+30, r25	; 0x1e
    4e56:	85 8f       	std	Z+29, r24	; 0x1d
    4e58:	89 81       	ldd	r24, Y+1	; 0x01
    4e5a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e5c:	fc 01       	movw	r30, r24
    4e5e:	10 a2       	std	Z+32, r1	; 0x20
    4e60:	17 8e       	std	Z+31, r1	; 0x1f
    4e62:	89 81       	ldd	r24, Y+1	; 0x01
    4e64:	9a 81       	ldd	r25, Y+2	; 0x02
    4e66:	2f ef       	ldi	r18, 0xFF	; 255
    4e68:	fc 01       	movw	r30, r24
    4e6a:	24 a3       	std	Z+36, r18	; 0x24
    4e6c:	89 81       	ldd	r24, Y+1	; 0x01
    4e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e70:	2f ef       	ldi	r18, 0xFF	; 255
    4e72:	fc 01       	movw	r30, r24
    4e74:	25 a3       	std	Z+37, r18	; 0x25
    4e76:	89 81       	ldd	r24, Y+1	; 0x01
    4e78:	9a 81       	ldd	r25, Y+2	; 0x02
    4e7a:	2f ef       	ldi	r18, 0xFF	; 255
    4e7c:	fc 01       	movw	r30, r24
    4e7e:	26 a3       	std	Z+38, r18	; 0x26
    4e80:	89 81       	ldd	r24, Y+1	; 0x01
    4e82:	9a 81       	ldd	r25, Y+2	; 0x02
    4e84:	2f ef       	ldi	r18, 0xFF	; 255
    4e86:	fc 01       	movw	r30, r24
    4e88:	27 a3       	std	Z+39, r18	; 0x27
    4e8a:	89 81       	ldd	r24, Y+1	; 0x01
    4e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    4e8e:	2f 81       	ldd	r18, Y+7	; 0x07
    4e90:	fc 01       	movw	r30, r24
    4e92:	20 a7       	std	Z+40, r18	; 0x28
    4e94:	29 81       	ldd	r18, Y+1	; 0x01
    4e96:	3a 81       	ldd	r19, Y+2	; 0x02
    4e98:	88 85       	ldd	r24, Y+8	; 0x08
    4e9a:	99 85       	ldd	r25, Y+9	; 0x09
    4e9c:	aa 85       	ldd	r26, Y+10	; 0x0a
    4e9e:	bb 85       	ldd	r27, Y+11	; 0x0b
    4ea0:	f9 01       	movw	r30, r18
    4ea2:	85 ab       	std	Z+53, r24	; 0x35
    4ea4:	96 ab       	std	Z+54, r25	; 0x36
    4ea6:	a7 ab       	std	Z+55, r26	; 0x37
    4ea8:	b0 af       	std	Z+56, r27	; 0x38
    4eaa:	29 81       	ldd	r18, Y+1	; 0x01
    4eac:	3a 81       	ldd	r19, Y+2	; 0x02
    4eae:	8c 85       	ldd	r24, Y+12	; 0x0c
    4eb0:	9d 85       	ldd	r25, Y+13	; 0x0d
    4eb2:	ae 85       	ldd	r26, Y+14	; 0x0e
    4eb4:	bf 85       	ldd	r27, Y+15	; 0x0f
    4eb6:	f9 01       	movw	r30, r18
    4eb8:	81 af       	std	Z+57, r24	; 0x39
    4eba:	92 af       	std	Z+58, r25	; 0x3a
    4ebc:	a3 af       	std	Z+59, r26	; 0x3b
    4ebe:	b4 af       	std	Z+60, r27	; 0x3c
    4ec0:	89 81       	ldd	r24, Y+1	; 0x01
    4ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec4:	ce 96       	adiw	r24, 0x3e	; 62
    4ec6:	0d df       	rcall	.-486    	; 0x4ce2 <_ZN11SPISettingsC1Ev>
    4ec8:	00 00       	nop
    4eca:	2f 96       	adiw	r28, 0x0f	; 15
    4ecc:	0f b6       	in	r0, 0x3f	; 63
    4ece:	f8 94       	cli
    4ed0:	de bf       	out	0x3e, r29	; 62
    4ed2:	0f be       	out	0x3f, r0	; 63
    4ed4:	cd bf       	out	0x3d, r28	; 61
    4ed6:	df 91       	pop	r29
    4ed8:	cf 91       	pop	r28
    4eda:	0f 91       	pop	r16
    4edc:	ff 90       	pop	r15
    4ede:	ef 90       	pop	r14
    4ee0:	df 90       	pop	r13
    4ee2:	cf 90       	pop	r12
    4ee4:	bf 90       	pop	r11
    4ee6:	af 90       	pop	r10
    4ee8:	9f 90       	pop	r9
    4eea:	8f 90       	pop	r8
    4eec:	08 95       	ret

00004eee <_ZN16Adafruit_SSD1306D1Ev>:
    4eee:	cf 93       	push	r28
    4ef0:	df 93       	push	r29
    4ef2:	1f 92       	push	r1
    4ef4:	1f 92       	push	r1
    4ef6:	cd b7       	in	r28, 0x3d	; 61
    4ef8:	de b7       	in	r29, 0x3e	; 62
    4efa:	9a 83       	std	Y+2, r25	; 0x02
    4efc:	89 83       	std	Y+1, r24	; 0x01
    4efe:	2b e3       	ldi	r18, 0x3B	; 59
    4f00:	32 e0       	ldi	r19, 0x02	; 2
    4f02:	89 81       	ldd	r24, Y+1	; 0x01
    4f04:	9a 81       	ldd	r25, Y+2	; 0x02
    4f06:	fc 01       	movw	r30, r24
    4f08:	31 83       	std	Z+1, r19	; 0x01
    4f0a:	20 83       	st	Z, r18
    4f0c:	89 81       	ldd	r24, Y+1	; 0x01
    4f0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f10:	fc 01       	movw	r30, r24
    4f12:	87 8d       	ldd	r24, Z+31	; 0x1f
    4f14:	90 a1       	ldd	r25, Z+32	; 0x20
    4f16:	89 2b       	or	r24, r25
    4f18:	61 f0       	breq	.+24     	; 0x4f32 <_ZN16Adafruit_SSD1306D1Ev+0x44>
    4f1a:	89 81       	ldd	r24, Y+1	; 0x01
    4f1c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f1e:	fc 01       	movw	r30, r24
    4f20:	87 8d       	ldd	r24, Z+31	; 0x1f
    4f22:	90 a1       	ldd	r25, Z+32	; 0x20
    4f24:	0e 94 14 4d 	call	0x9a28	; 0x9a28 <free>
    4f28:	89 81       	ldd	r24, Y+1	; 0x01
    4f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f2c:	fc 01       	movw	r30, r24
    4f2e:	10 a2       	std	Z+32, r1	; 0x20
    4f30:	17 8e       	std	Z+31, r1	; 0x1f
    4f32:	00 00       	nop
    4f34:	0f 90       	pop	r0
    4f36:	0f 90       	pop	r0
    4f38:	df 91       	pop	r29
    4f3a:	cf 91       	pop	r28
    4f3c:	08 95       	ret

00004f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>:
    4f3e:	cf 93       	push	r28
    4f40:	df 93       	push	r29
    4f42:	cd b7       	in	r28, 0x3d	; 61
    4f44:	de b7       	in	r29, 0x3e	; 62
    4f46:	27 97       	sbiw	r28, 0x07	; 7
    4f48:	0f b6       	in	r0, 0x3f	; 63
    4f4a:	f8 94       	cli
    4f4c:	de bf       	out	0x3e, r29	; 62
    4f4e:	0f be       	out	0x3f, r0	; 63
    4f50:	cd bf       	out	0x3d, r28	; 61
    4f52:	9e 83       	std	Y+6, r25	; 0x06
    4f54:	8d 83       	std	Y+5, r24	; 0x05
    4f56:	6f 83       	std	Y+7, r22	; 0x07
    4f58:	8d 81       	ldd	r24, Y+5	; 0x05
    4f5a:	9e 81       	ldd	r25, Y+6	; 0x06
    4f5c:	fc 01       	movw	r30, r24
    4f5e:	85 8d       	ldd	r24, Z+29	; 0x1d
    4f60:	96 8d       	ldd	r25, Z+30	; 0x1e
    4f62:	89 2b       	or	r24, r25
    4f64:	e9 f1       	breq	.+122    	; 0x4fe0 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xa2>
    4f66:	8d 81       	ldd	r24, Y+5	; 0x05
    4f68:	9e 81       	ldd	r25, Y+6	; 0x06
    4f6a:	fc 01       	movw	r30, r24
    4f6c:	81 a1       	ldd	r24, Z+33	; 0x21
    4f6e:	28 2f       	mov	r18, r24
    4f70:	88 0f       	add	r24, r24
    4f72:	33 0b       	sbc	r19, r19
    4f74:	8d 81       	ldd	r24, Y+5	; 0x05
    4f76:	9e 81       	ldd	r25, Y+6	; 0x06
    4f78:	fc 01       	movw	r30, r24
    4f7a:	85 8d       	ldd	r24, Z+29	; 0x1d
    4f7c:	96 8d       	ldd	r25, Z+30	; 0x1e
    4f7e:	b9 01       	movw	r22, r18
    4f80:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    4f84:	8d 81       	ldd	r24, Y+5	; 0x05
    4f86:	9e 81       	ldd	r25, Y+6	; 0x06
    4f88:	fc 01       	movw	r30, r24
    4f8a:	85 8d       	ldd	r24, Z+29	; 0x1d
    4f8c:	96 8d       	ldd	r25, Z+30	; 0x1e
    4f8e:	fc 01       	movw	r30, r24
    4f90:	80 81       	ld	r24, Z
    4f92:	91 81       	ldd	r25, Z+1	; 0x01
    4f94:	fc 01       	movw	r30, r24
    4f96:	20 81       	ld	r18, Z
    4f98:	31 81       	ldd	r19, Z+1	; 0x01
    4f9a:	8d 81       	ldd	r24, Y+5	; 0x05
    4f9c:	9e 81       	ldd	r25, Y+6	; 0x06
    4f9e:	fc 01       	movw	r30, r24
    4fa0:	85 8d       	ldd	r24, Z+29	; 0x1d
    4fa2:	96 8d       	ldd	r25, Z+30	; 0x1e
    4fa4:	60 e0       	ldi	r22, 0x00	; 0
    4fa6:	f9 01       	movw	r30, r18
    4fa8:	19 95       	eicall
    4faa:	8d 81       	ldd	r24, Y+5	; 0x05
    4fac:	9e 81       	ldd	r25, Y+6	; 0x06
    4fae:	fc 01       	movw	r30, r24
    4fb0:	85 8d       	ldd	r24, Z+29	; 0x1d
    4fb2:	96 8d       	ldd	r25, Z+30	; 0x1e
    4fb4:	fc 01       	movw	r30, r24
    4fb6:	80 81       	ld	r24, Z
    4fb8:	91 81       	ldd	r25, Z+1	; 0x01
    4fba:	fc 01       	movw	r30, r24
    4fbc:	20 81       	ld	r18, Z
    4fbe:	31 81       	ldd	r19, Z+1	; 0x01
    4fc0:	8d 81       	ldd	r24, Y+5	; 0x05
    4fc2:	9e 81       	ldd	r25, Y+6	; 0x06
    4fc4:	fc 01       	movw	r30, r24
    4fc6:	85 8d       	ldd	r24, Z+29	; 0x1d
    4fc8:	96 8d       	ldd	r25, Z+30	; 0x1e
    4fca:	6f 81       	ldd	r22, Y+7	; 0x07
    4fcc:	f9 01       	movw	r30, r18
    4fce:	19 95       	eicall
    4fd0:	8d 81       	ldd	r24, Y+5	; 0x05
    4fd2:	9e 81       	ldd	r25, Y+6	; 0x06
    4fd4:	fc 01       	movw	r30, r24
    4fd6:	85 8d       	ldd	r24, Z+29	; 0x1d
    4fd8:	96 8d       	ldd	r25, Z+30	; 0x1e
    4fda:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    4fde:	88 c0       	rjmp	.+272    	; 0x50f0 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    4fe0:	8d 81       	ldd	r24, Y+5	; 0x05
    4fe2:	9e 81       	ldd	r25, Y+6	; 0x06
    4fe4:	fc 01       	movw	r30, r24
    4fe6:	85 a5       	ldd	r24, Z+45	; 0x2d
    4fe8:	96 a5       	ldd	r25, Z+46	; 0x2e
    4fea:	2d 81       	ldd	r18, Y+5	; 0x05
    4fec:	3e 81       	ldd	r19, Y+6	; 0x06
    4fee:	f9 01       	movw	r30, r18
    4ff0:	25 a5       	ldd	r18, Z+45	; 0x2d
    4ff2:	36 a5       	ldd	r19, Z+46	; 0x2e
    4ff4:	f9 01       	movw	r30, r18
    4ff6:	20 81       	ld	r18, Z
    4ff8:	42 2f       	mov	r20, r18
    4ffa:	2d 81       	ldd	r18, Y+5	; 0x05
    4ffc:	3e 81       	ldd	r19, Y+6	; 0x06
    4ffe:	f9 01       	movw	r30, r18
    5000:	23 a9       	ldd	r18, Z+51	; 0x33
    5002:	20 95       	com	r18
    5004:	24 23       	and	r18, r20
    5006:	fc 01       	movw	r30, r24
    5008:	20 83       	st	Z, r18
    500a:	8d 81       	ldd	r24, Y+5	; 0x05
    500c:	9e 81       	ldd	r25, Y+6	; 0x06
    500e:	9a 83       	std	Y+2, r25	; 0x02
    5010:	89 83       	std	Y+1, r24	; 0x01
    5012:	8f 81       	ldd	r24, Y+7	; 0x07
    5014:	8b 83       	std	Y+3, r24	; 0x03
    5016:	89 81       	ldd	r24, Y+1	; 0x01
    5018:	9a 81       	ldd	r25, Y+2	; 0x02
    501a:	fc 01       	movw	r30, r24
    501c:	83 8d       	ldd	r24, Z+27	; 0x1b
    501e:	94 8d       	ldd	r25, Z+28	; 0x1c
    5020:	89 2b       	or	r24, r25
    5022:	19 f0       	breq	.+6      	; 0x502a <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xec>
    5024:	8b 81       	ldd	r24, Y+3	; 0x03
    5026:	3e de       	rcall	.-900    	; 0x4ca4 <_ZN8SPIClass8transferEh>
    5028:	63 c0       	rjmp	.+198    	; 0x50f0 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    502a:	80 e8       	ldi	r24, 0x80	; 128
    502c:	8c 83       	std	Y+4, r24	; 0x04
    502e:	8c 81       	ldd	r24, Y+4	; 0x04
    5030:	88 23       	and	r24, r24
    5032:	09 f4       	brne	.+2      	; 0x5036 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xf8>
    5034:	5d c0       	rjmp	.+186    	; 0x50f0 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x1b2>
    5036:	9b 81       	ldd	r25, Y+3	; 0x03
    5038:	8c 81       	ldd	r24, Y+4	; 0x04
    503a:	89 23       	and	r24, r25
    503c:	88 23       	and	r24, r24
    503e:	a1 f0       	breq	.+40     	; 0x5068 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x12a>
    5040:	89 81       	ldd	r24, Y+1	; 0x01
    5042:	9a 81       	ldd	r25, Y+2	; 0x02
    5044:	fc 01       	movw	r30, r24
    5046:	81 a5       	ldd	r24, Z+41	; 0x29
    5048:	92 a5       	ldd	r25, Z+42	; 0x2a
    504a:	29 81       	ldd	r18, Y+1	; 0x01
    504c:	3a 81       	ldd	r19, Y+2	; 0x02
    504e:	f9 01       	movw	r30, r18
    5050:	21 a5       	ldd	r18, Z+41	; 0x29
    5052:	32 a5       	ldd	r19, Z+42	; 0x2a
    5054:	f9 01       	movw	r30, r18
    5056:	40 81       	ld	r20, Z
    5058:	29 81       	ldd	r18, Y+1	; 0x01
    505a:	3a 81       	ldd	r19, Y+2	; 0x02
    505c:	f9 01       	movw	r30, r18
    505e:	21 a9       	ldd	r18, Z+49	; 0x31
    5060:	24 2b       	or	r18, r20
    5062:	fc 01       	movw	r30, r24
    5064:	20 83       	st	Z, r18
    5066:	15 c0       	rjmp	.+42     	; 0x5092 <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0x154>
    5068:	89 81       	ldd	r24, Y+1	; 0x01
    506a:	9a 81       	ldd	r25, Y+2	; 0x02
    506c:	fc 01       	movw	r30, r24
    506e:	81 a5       	ldd	r24, Z+41	; 0x29
    5070:	92 a5       	ldd	r25, Z+42	; 0x2a
    5072:	29 81       	ldd	r18, Y+1	; 0x01
    5074:	3a 81       	ldd	r19, Y+2	; 0x02
    5076:	f9 01       	movw	r30, r18
    5078:	21 a5       	ldd	r18, Z+41	; 0x29
    507a:	32 a5       	ldd	r19, Z+42	; 0x2a
    507c:	f9 01       	movw	r30, r18
    507e:	20 81       	ld	r18, Z
    5080:	42 2f       	mov	r20, r18
    5082:	29 81       	ldd	r18, Y+1	; 0x01
    5084:	3a 81       	ldd	r19, Y+2	; 0x02
    5086:	f9 01       	movw	r30, r18
    5088:	21 a9       	ldd	r18, Z+49	; 0x31
    508a:	20 95       	com	r18
    508c:	24 23       	and	r18, r20
    508e:	fc 01       	movw	r30, r24
    5090:	20 83       	st	Z, r18
    5092:	89 81       	ldd	r24, Y+1	; 0x01
    5094:	9a 81       	ldd	r25, Y+2	; 0x02
    5096:	fc 01       	movw	r30, r24
    5098:	83 a5       	ldd	r24, Z+43	; 0x2b
    509a:	94 a5       	ldd	r25, Z+44	; 0x2c
    509c:	29 81       	ldd	r18, Y+1	; 0x01
    509e:	3a 81       	ldd	r19, Y+2	; 0x02
    50a0:	f9 01       	movw	r30, r18
    50a2:	23 a5       	ldd	r18, Z+43	; 0x2b
    50a4:	34 a5       	ldd	r19, Z+44	; 0x2c
    50a6:	f9 01       	movw	r30, r18
    50a8:	40 81       	ld	r20, Z
    50aa:	29 81       	ldd	r18, Y+1	; 0x01
    50ac:	3a 81       	ldd	r19, Y+2	; 0x02
    50ae:	f9 01       	movw	r30, r18
    50b0:	22 a9       	ldd	r18, Z+50	; 0x32
    50b2:	24 2b       	or	r18, r20
    50b4:	fc 01       	movw	r30, r24
    50b6:	20 83       	st	Z, r18
    50b8:	89 81       	ldd	r24, Y+1	; 0x01
    50ba:	9a 81       	ldd	r25, Y+2	; 0x02
    50bc:	fc 01       	movw	r30, r24
    50be:	83 a5       	ldd	r24, Z+43	; 0x2b
    50c0:	94 a5       	ldd	r25, Z+44	; 0x2c
    50c2:	29 81       	ldd	r18, Y+1	; 0x01
    50c4:	3a 81       	ldd	r19, Y+2	; 0x02
    50c6:	f9 01       	movw	r30, r18
    50c8:	23 a5       	ldd	r18, Z+43	; 0x2b
    50ca:	34 a5       	ldd	r19, Z+44	; 0x2c
    50cc:	f9 01       	movw	r30, r18
    50ce:	20 81       	ld	r18, Z
    50d0:	42 2f       	mov	r20, r18
    50d2:	29 81       	ldd	r18, Y+1	; 0x01
    50d4:	3a 81       	ldd	r19, Y+2	; 0x02
    50d6:	f9 01       	movw	r30, r18
    50d8:	22 a9       	ldd	r18, Z+50	; 0x32
    50da:	20 95       	com	r18
    50dc:	24 23       	and	r18, r20
    50de:	fc 01       	movw	r30, r24
    50e0:	20 83       	st	Z, r18
    50e2:	8c 81       	ldd	r24, Y+4	; 0x04
    50e4:	88 2f       	mov	r24, r24
    50e6:	90 e0       	ldi	r25, 0x00	; 0
    50e8:	95 95       	asr	r25
    50ea:	87 95       	ror	r24
    50ec:	8c 83       	std	Y+4, r24	; 0x04
    50ee:	9f cf       	rjmp	.-194    	; 0x502e <_ZN16Adafruit_SSD130616ssd1306_command1Eh+0xf0>
    50f0:	00 00       	nop
    50f2:	27 96       	adiw	r28, 0x07	; 7
    50f4:	0f b6       	in	r0, 0x3f	; 63
    50f6:	f8 94       	cli
    50f8:	de bf       	out	0x3e, r29	; 62
    50fa:	0f be       	out	0x3f, r0	; 63
    50fc:	cd bf       	out	0x3d, r28	; 61
    50fe:	df 91       	pop	r29
    5100:	cf 91       	pop	r28
    5102:	08 95       	ret

00005104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>:
    5104:	cf 93       	push	r28
    5106:	df 93       	push	r29
    5108:	cd b7       	in	r28, 0x3d	; 61
    510a:	de b7       	in	r29, 0x3e	; 62
    510c:	61 97       	sbiw	r28, 0x11	; 17
    510e:	0f b6       	in	r0, 0x3f	; 63
    5110:	f8 94       	cli
    5112:	de bf       	out	0x3e, r29	; 62
    5114:	0f be       	out	0x3f, r0	; 63
    5116:	cd bf       	out	0x3d, r28	; 61
    5118:	9e 87       	std	Y+14, r25	; 0x0e
    511a:	8d 87       	std	Y+13, r24	; 0x0d
    511c:	78 8b       	std	Y+16, r23	; 0x10
    511e:	6f 87       	std	Y+15, r22	; 0x0f
    5120:	49 8b       	std	Y+17, r20	; 0x11
    5122:	8d 85       	ldd	r24, Y+13	; 0x0d
    5124:	9e 85       	ldd	r25, Y+14	; 0x0e
    5126:	fc 01       	movw	r30, r24
    5128:	85 8d       	ldd	r24, Z+29	; 0x1d
    512a:	96 8d       	ldd	r25, Z+30	; 0x1e
    512c:	89 2b       	or	r24, r25
    512e:	09 f4       	brne	.+2      	; 0x5132 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x2e>
    5130:	92 c0       	rjmp	.+292    	; 0x5256 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x152>
    5132:	8d 85       	ldd	r24, Y+13	; 0x0d
    5134:	9e 85       	ldd	r25, Y+14	; 0x0e
    5136:	fc 01       	movw	r30, r24
    5138:	81 a1       	ldd	r24, Z+33	; 0x21
    513a:	28 2f       	mov	r18, r24
    513c:	88 0f       	add	r24, r24
    513e:	33 0b       	sbc	r19, r19
    5140:	8d 85       	ldd	r24, Y+13	; 0x0d
    5142:	9e 85       	ldd	r25, Y+14	; 0x0e
    5144:	fc 01       	movw	r30, r24
    5146:	85 8d       	ldd	r24, Z+29	; 0x1d
    5148:	96 8d       	ldd	r25, Z+30	; 0x1e
    514a:	b9 01       	movw	r22, r18
    514c:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    5150:	8d 85       	ldd	r24, Y+13	; 0x0d
    5152:	9e 85       	ldd	r25, Y+14	; 0x0e
    5154:	fc 01       	movw	r30, r24
    5156:	85 8d       	ldd	r24, Z+29	; 0x1d
    5158:	96 8d       	ldd	r25, Z+30	; 0x1e
    515a:	fc 01       	movw	r30, r24
    515c:	80 81       	ld	r24, Z
    515e:	91 81       	ldd	r25, Z+1	; 0x01
    5160:	fc 01       	movw	r30, r24
    5162:	20 81       	ld	r18, Z
    5164:	31 81       	ldd	r19, Z+1	; 0x01
    5166:	8d 85       	ldd	r24, Y+13	; 0x0d
    5168:	9e 85       	ldd	r25, Y+14	; 0x0e
    516a:	fc 01       	movw	r30, r24
    516c:	85 8d       	ldd	r24, Z+29	; 0x1d
    516e:	96 8d       	ldd	r25, Z+30	; 0x1e
    5170:	60 e0       	ldi	r22, 0x00	; 0
    5172:	f9 01       	movw	r30, r18
    5174:	19 95       	eicall
    5176:	81 e0       	ldi	r24, 0x01	; 1
    5178:	90 e0       	ldi	r25, 0x00	; 0
    517a:	9a 83       	std	Y+2, r25	; 0x02
    517c:	89 83       	std	Y+1, r24	; 0x01
    517e:	89 89       	ldd	r24, Y+17	; 0x11
    5180:	9f ef       	ldi	r25, 0xFF	; 255
    5182:	98 0f       	add	r25, r24
    5184:	99 8b       	std	Y+17, r25	; 0x11
    5186:	91 e0       	ldi	r25, 0x01	; 1
    5188:	88 23       	and	r24, r24
    518a:	09 f4       	brne	.+2      	; 0x518e <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x8a>
    518c:	90 e0       	ldi	r25, 0x00	; 0
    518e:	99 23       	and	r25, r25
    5190:	09 f4       	brne	.+2      	; 0x5194 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x90>
    5192:	59 c0       	rjmp	.+178    	; 0x5246 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x142>
    5194:	89 81       	ldd	r24, Y+1	; 0x01
    5196:	9a 81       	ldd	r25, Y+2	; 0x02
    5198:	80 97       	sbiw	r24, 0x20	; 32
    519a:	68 f1       	brcs	.+90     	; 0x51f6 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0xf2>
    519c:	8d 85       	ldd	r24, Y+13	; 0x0d
    519e:	9e 85       	ldd	r25, Y+14	; 0x0e
    51a0:	fc 01       	movw	r30, r24
    51a2:	85 8d       	ldd	r24, Z+29	; 0x1d
    51a4:	96 8d       	ldd	r25, Z+30	; 0x1e
    51a6:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    51aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    51ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    51ae:	fc 01       	movw	r30, r24
    51b0:	81 a1       	ldd	r24, Z+33	; 0x21
    51b2:	28 2f       	mov	r18, r24
    51b4:	88 0f       	add	r24, r24
    51b6:	33 0b       	sbc	r19, r19
    51b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    51ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    51bc:	fc 01       	movw	r30, r24
    51be:	85 8d       	ldd	r24, Z+29	; 0x1d
    51c0:	96 8d       	ldd	r25, Z+30	; 0x1e
    51c2:	b9 01       	movw	r22, r18
    51c4:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    51c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    51ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    51cc:	fc 01       	movw	r30, r24
    51ce:	85 8d       	ldd	r24, Z+29	; 0x1d
    51d0:	96 8d       	ldd	r25, Z+30	; 0x1e
    51d2:	fc 01       	movw	r30, r24
    51d4:	80 81       	ld	r24, Z
    51d6:	91 81       	ldd	r25, Z+1	; 0x01
    51d8:	fc 01       	movw	r30, r24
    51da:	20 81       	ld	r18, Z
    51dc:	31 81       	ldd	r19, Z+1	; 0x01
    51de:	8d 85       	ldd	r24, Y+13	; 0x0d
    51e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    51e2:	fc 01       	movw	r30, r24
    51e4:	85 8d       	ldd	r24, Z+29	; 0x1d
    51e6:	96 8d       	ldd	r25, Z+30	; 0x1e
    51e8:	60 e0       	ldi	r22, 0x00	; 0
    51ea:	f9 01       	movw	r30, r18
    51ec:	19 95       	eicall
    51ee:	81 e0       	ldi	r24, 0x01	; 1
    51f0:	90 e0       	ldi	r25, 0x00	; 0
    51f2:	9a 83       	std	Y+2, r25	; 0x02
    51f4:	89 83       	std	Y+1, r24	; 0x01
    51f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    51f8:	9e 85       	ldd	r25, Y+14	; 0x0e
    51fa:	fc 01       	movw	r30, r24
    51fc:	85 8d       	ldd	r24, Z+29	; 0x1d
    51fe:	96 8d       	ldd	r25, Z+30	; 0x1e
    5200:	fc 01       	movw	r30, r24
    5202:	80 81       	ld	r24, Z
    5204:	91 81       	ldd	r25, Z+1	; 0x01
    5206:	fc 01       	movw	r30, r24
    5208:	20 81       	ld	r18, Z
    520a:	31 81       	ldd	r19, Z+1	; 0x01
    520c:	8f 85       	ldd	r24, Y+15	; 0x0f
    520e:	98 89       	ldd	r25, Y+16	; 0x10
    5210:	ac 01       	movw	r20, r24
    5212:	4f 5f       	subi	r20, 0xFF	; 255
    5214:	5f 4f       	sbci	r21, 0xFF	; 255
    5216:	58 8b       	std	Y+16, r21	; 0x10
    5218:	4f 87       	std	Y+15, r20	; 0x0f
    521a:	9c 83       	std	Y+4, r25	; 0x04
    521c:	8b 83       	std	Y+3, r24	; 0x03
    521e:	8b 81       	ldd	r24, Y+3	; 0x03
    5220:	9c 81       	ldd	r25, Y+4	; 0x04
    5222:	fc 01       	movw	r30, r24
    5224:	84 91       	lpm	r24, Z
    5226:	8d 83       	std	Y+5, r24	; 0x05
    5228:	4d 81       	ldd	r20, Y+5	; 0x05
    522a:	8d 85       	ldd	r24, Y+13	; 0x0d
    522c:	9e 85       	ldd	r25, Y+14	; 0x0e
    522e:	fc 01       	movw	r30, r24
    5230:	85 8d       	ldd	r24, Z+29	; 0x1d
    5232:	96 8d       	ldd	r25, Z+30	; 0x1e
    5234:	64 2f       	mov	r22, r20
    5236:	f9 01       	movw	r30, r18
    5238:	19 95       	eicall
    523a:	89 81       	ldd	r24, Y+1	; 0x01
    523c:	9a 81       	ldd	r25, Y+2	; 0x02
    523e:	01 96       	adiw	r24, 0x01	; 1
    5240:	9a 83       	std	Y+2, r25	; 0x02
    5242:	89 83       	std	Y+1, r24	; 0x01
    5244:	9c cf       	rjmp	.-200    	; 0x517e <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x7a>
    5246:	8d 85       	ldd	r24, Y+13	; 0x0d
    5248:	9e 85       	ldd	r25, Y+14	; 0x0e
    524a:	fc 01       	movw	r30, r24
    524c:	85 8d       	ldd	r24, Z+29	; 0x1d
    524e:	96 8d       	ldd	r25, Z+30	; 0x1e
    5250:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    5254:	a0 c0       	rjmp	.+320    	; 0x5396 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x292>
    5256:	8d 85       	ldd	r24, Y+13	; 0x0d
    5258:	9e 85       	ldd	r25, Y+14	; 0x0e
    525a:	fc 01       	movw	r30, r24
    525c:	85 a5       	ldd	r24, Z+45	; 0x2d
    525e:	96 a5       	ldd	r25, Z+46	; 0x2e
    5260:	2d 85       	ldd	r18, Y+13	; 0x0d
    5262:	3e 85       	ldd	r19, Y+14	; 0x0e
    5264:	f9 01       	movw	r30, r18
    5266:	25 a5       	ldd	r18, Z+45	; 0x2d
    5268:	36 a5       	ldd	r19, Z+46	; 0x2e
    526a:	f9 01       	movw	r30, r18
    526c:	20 81       	ld	r18, Z
    526e:	42 2f       	mov	r20, r18
    5270:	2d 85       	ldd	r18, Y+13	; 0x0d
    5272:	3e 85       	ldd	r19, Y+14	; 0x0e
    5274:	f9 01       	movw	r30, r18
    5276:	23 a9       	ldd	r18, Z+51	; 0x33
    5278:	20 95       	com	r18
    527a:	24 23       	and	r18, r20
    527c:	fc 01       	movw	r30, r24
    527e:	20 83       	st	Z, r18
    5280:	89 89       	ldd	r24, Y+17	; 0x11
    5282:	9f ef       	ldi	r25, 0xFF	; 255
    5284:	98 0f       	add	r25, r24
    5286:	99 8b       	std	Y+17, r25	; 0x11
    5288:	91 e0       	ldi	r25, 0x01	; 1
    528a:	88 23       	and	r24, r24
    528c:	09 f4       	brne	.+2      	; 0x5290 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x18c>
    528e:	90 e0       	ldi	r25, 0x00	; 0
    5290:	99 23       	and	r25, r25
    5292:	09 f4       	brne	.+2      	; 0x5296 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x192>
    5294:	80 c0       	rjmp	.+256    	; 0x5396 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x292>
    5296:	8f 85       	ldd	r24, Y+15	; 0x0f
    5298:	98 89       	ldd	r25, Y+16	; 0x10
    529a:	9c 01       	movw	r18, r24
    529c:	2f 5f       	subi	r18, 0xFF	; 255
    529e:	3f 4f       	sbci	r19, 0xFF	; 255
    52a0:	38 8b       	std	Y+16, r19	; 0x10
    52a2:	2f 87       	std	Y+15, r18	; 0x0f
    52a4:	9f 83       	std	Y+7, r25	; 0x07
    52a6:	8e 83       	std	Y+6, r24	; 0x06
    52a8:	8e 81       	ldd	r24, Y+6	; 0x06
    52aa:	9f 81       	ldd	r25, Y+7	; 0x07
    52ac:	fc 01       	movw	r30, r24
    52ae:	84 91       	lpm	r24, Z
    52b0:	88 87       	std	Y+8, r24	; 0x08
    52b2:	28 85       	ldd	r18, Y+8	; 0x08
    52b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    52b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    52b8:	9a 87       	std	Y+10, r25	; 0x0a
    52ba:	89 87       	std	Y+9, r24	; 0x09
    52bc:	2b 87       	std	Y+11, r18	; 0x0b
    52be:	89 85       	ldd	r24, Y+9	; 0x09
    52c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    52c2:	fc 01       	movw	r30, r24
    52c4:	83 8d       	ldd	r24, Z+27	; 0x1b
    52c6:	94 8d       	ldd	r25, Z+28	; 0x1c
    52c8:	89 2b       	or	r24, r25
    52ca:	19 f0       	breq	.+6      	; 0x52d2 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x1ce>
    52cc:	8b 85       	ldd	r24, Y+11	; 0x0b
    52ce:	ea dc       	rcall	.-1580   	; 0x4ca4 <_ZN8SPIClass8transferEh>
    52d0:	d7 cf       	rjmp	.-82     	; 0x5280 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x17c>
    52d2:	80 e8       	ldi	r24, 0x80	; 128
    52d4:	8c 87       	std	Y+12, r24	; 0x0c
    52d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    52d8:	88 23       	and	r24, r24
    52da:	91 f2       	breq	.-92     	; 0x5280 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x17c>
    52dc:	9b 85       	ldd	r25, Y+11	; 0x0b
    52de:	8c 85       	ldd	r24, Y+12	; 0x0c
    52e0:	89 23       	and	r24, r25
    52e2:	88 23       	and	r24, r24
    52e4:	a1 f0       	breq	.+40     	; 0x530e <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x20a>
    52e6:	89 85       	ldd	r24, Y+9	; 0x09
    52e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    52ea:	fc 01       	movw	r30, r24
    52ec:	81 a5       	ldd	r24, Z+41	; 0x29
    52ee:	92 a5       	ldd	r25, Z+42	; 0x2a
    52f0:	29 85       	ldd	r18, Y+9	; 0x09
    52f2:	3a 85       	ldd	r19, Y+10	; 0x0a
    52f4:	f9 01       	movw	r30, r18
    52f6:	21 a5       	ldd	r18, Z+41	; 0x29
    52f8:	32 a5       	ldd	r19, Z+42	; 0x2a
    52fa:	f9 01       	movw	r30, r18
    52fc:	40 81       	ld	r20, Z
    52fe:	29 85       	ldd	r18, Y+9	; 0x09
    5300:	3a 85       	ldd	r19, Y+10	; 0x0a
    5302:	f9 01       	movw	r30, r18
    5304:	21 a9       	ldd	r18, Z+49	; 0x31
    5306:	24 2b       	or	r18, r20
    5308:	fc 01       	movw	r30, r24
    530a:	20 83       	st	Z, r18
    530c:	15 c0       	rjmp	.+42     	; 0x5338 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x234>
    530e:	89 85       	ldd	r24, Y+9	; 0x09
    5310:	9a 85       	ldd	r25, Y+10	; 0x0a
    5312:	fc 01       	movw	r30, r24
    5314:	81 a5       	ldd	r24, Z+41	; 0x29
    5316:	92 a5       	ldd	r25, Z+42	; 0x2a
    5318:	29 85       	ldd	r18, Y+9	; 0x09
    531a:	3a 85       	ldd	r19, Y+10	; 0x0a
    531c:	f9 01       	movw	r30, r18
    531e:	21 a5       	ldd	r18, Z+41	; 0x29
    5320:	32 a5       	ldd	r19, Z+42	; 0x2a
    5322:	f9 01       	movw	r30, r18
    5324:	20 81       	ld	r18, Z
    5326:	42 2f       	mov	r20, r18
    5328:	29 85       	ldd	r18, Y+9	; 0x09
    532a:	3a 85       	ldd	r19, Y+10	; 0x0a
    532c:	f9 01       	movw	r30, r18
    532e:	21 a9       	ldd	r18, Z+49	; 0x31
    5330:	20 95       	com	r18
    5332:	24 23       	and	r18, r20
    5334:	fc 01       	movw	r30, r24
    5336:	20 83       	st	Z, r18
    5338:	89 85       	ldd	r24, Y+9	; 0x09
    533a:	9a 85       	ldd	r25, Y+10	; 0x0a
    533c:	fc 01       	movw	r30, r24
    533e:	83 a5       	ldd	r24, Z+43	; 0x2b
    5340:	94 a5       	ldd	r25, Z+44	; 0x2c
    5342:	29 85       	ldd	r18, Y+9	; 0x09
    5344:	3a 85       	ldd	r19, Y+10	; 0x0a
    5346:	f9 01       	movw	r30, r18
    5348:	23 a5       	ldd	r18, Z+43	; 0x2b
    534a:	34 a5       	ldd	r19, Z+44	; 0x2c
    534c:	f9 01       	movw	r30, r18
    534e:	40 81       	ld	r20, Z
    5350:	29 85       	ldd	r18, Y+9	; 0x09
    5352:	3a 85       	ldd	r19, Y+10	; 0x0a
    5354:	f9 01       	movw	r30, r18
    5356:	22 a9       	ldd	r18, Z+50	; 0x32
    5358:	24 2b       	or	r18, r20
    535a:	fc 01       	movw	r30, r24
    535c:	20 83       	st	Z, r18
    535e:	89 85       	ldd	r24, Y+9	; 0x09
    5360:	9a 85       	ldd	r25, Y+10	; 0x0a
    5362:	fc 01       	movw	r30, r24
    5364:	83 a5       	ldd	r24, Z+43	; 0x2b
    5366:	94 a5       	ldd	r25, Z+44	; 0x2c
    5368:	29 85       	ldd	r18, Y+9	; 0x09
    536a:	3a 85       	ldd	r19, Y+10	; 0x0a
    536c:	f9 01       	movw	r30, r18
    536e:	23 a5       	ldd	r18, Z+43	; 0x2b
    5370:	34 a5       	ldd	r19, Z+44	; 0x2c
    5372:	f9 01       	movw	r30, r18
    5374:	20 81       	ld	r18, Z
    5376:	42 2f       	mov	r20, r18
    5378:	29 85       	ldd	r18, Y+9	; 0x09
    537a:	3a 85       	ldd	r19, Y+10	; 0x0a
    537c:	f9 01       	movw	r30, r18
    537e:	22 a9       	ldd	r18, Z+50	; 0x32
    5380:	20 95       	com	r18
    5382:	24 23       	and	r18, r20
    5384:	fc 01       	movw	r30, r24
    5386:	20 83       	st	Z, r18
    5388:	8c 85       	ldd	r24, Y+12	; 0x0c
    538a:	88 2f       	mov	r24, r24
    538c:	90 e0       	ldi	r25, 0x00	; 0
    538e:	95 95       	asr	r25
    5390:	87 95       	ror	r24
    5392:	8c 87       	std	Y+12, r24	; 0x0c
    5394:	a0 cf       	rjmp	.-192    	; 0x52d6 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh+0x1d2>
    5396:	00 00       	nop
    5398:	61 96       	adiw	r28, 0x11	; 17
    539a:	0f b6       	in	r0, 0x3f	; 63
    539c:	f8 94       	cli
    539e:	de bf       	out	0x3e, r29	; 62
    53a0:	0f be       	out	0x3f, r0	; 63
    53a2:	cd bf       	out	0x3d, r28	; 61
    53a4:	df 91       	pop	r29
    53a6:	cf 91       	pop	r28
    53a8:	08 95       	ret

000053aa <_ZN16Adafruit_SSD13065beginEhhbb>:
    53aa:	cf 92       	push	r12
    53ac:	df 92       	push	r13
    53ae:	ef 92       	push	r14
    53b0:	ff 92       	push	r15
    53b2:	0f 93       	push	r16
    53b4:	1f 93       	push	r17
    53b6:	cf 93       	push	r28
    53b8:	df 93       	push	r29
    53ba:	cd b7       	in	r28, 0x3d	; 61
    53bc:	de b7       	in	r29, 0x3e	; 62
    53be:	af 97       	sbiw	r28, 0x2f	; 47
    53c0:	0f b6       	in	r0, 0x3f	; 63
    53c2:	f8 94       	cli
    53c4:	de bf       	out	0x3e, r29	; 62
    53c6:	0f be       	out	0x3f, r0	; 63
    53c8:	cd bf       	out	0x3d, r28	; 61
    53ca:	9b a7       	std	Y+43, r25	; 0x2b
    53cc:	8a a7       	std	Y+42, r24	; 0x2a
    53ce:	6c a7       	std	Y+44, r22	; 0x2c
    53d0:	4d a7       	std	Y+45, r20	; 0x2d
    53d2:	2e a7       	std	Y+46, r18	; 0x2e
    53d4:	0f a7       	std	Y+47, r16	; 0x2f
    53d6:	8a a5       	ldd	r24, Y+42	; 0x2a
    53d8:	9b a5       	ldd	r25, Y+43	; 0x2b
    53da:	fc 01       	movw	r30, r24
    53dc:	87 8d       	ldd	r24, Z+31	; 0x1f
    53de:	90 a1       	ldd	r25, Z+32	; 0x20
    53e0:	89 2b       	or	r24, r25
    53e2:	69 f5       	brne	.+90     	; 0x543e <_ZN16Adafruit_SSD13065beginEhhbb+0x94>
    53e4:	8a a5       	ldd	r24, Y+42	; 0x2a
    53e6:	9b a5       	ldd	r25, Y+43	; 0x2b
    53e8:	fc 01       	movw	r30, r24
    53ea:	24 81       	ldd	r18, Z+4	; 0x04
    53ec:	35 81       	ldd	r19, Z+5	; 0x05
    53ee:	8a a5       	ldd	r24, Y+42	; 0x2a
    53f0:	9b a5       	ldd	r25, Y+43	; 0x2b
    53f2:	fc 01       	movw	r30, r24
    53f4:	86 81       	ldd	r24, Z+6	; 0x06
    53f6:	97 81       	ldd	r25, Z+7	; 0x07
    53f8:	07 96       	adiw	r24, 0x07	; 7
    53fa:	99 23       	and	r25, r25
    53fc:	0c f4       	brge	.+2      	; 0x5400 <_ZN16Adafruit_SSD13065beginEhhbb+0x56>
    53fe:	07 96       	adiw	r24, 0x07	; 7
    5400:	95 95       	asr	r25
    5402:	87 95       	ror	r24
    5404:	95 95       	asr	r25
    5406:	87 95       	ror	r24
    5408:	95 95       	asr	r25
    540a:	87 95       	ror	r24
    540c:	ac 01       	movw	r20, r24
    540e:	24 9f       	mul	r18, r20
    5410:	c0 01       	movw	r24, r0
    5412:	25 9f       	mul	r18, r21
    5414:	90 0d       	add	r25, r0
    5416:	34 9f       	mul	r19, r20
    5418:	90 0d       	add	r25, r0
    541a:	11 24       	eor	r1, r1
    541c:	0e 94 7c 4c 	call	0x98f8	; 0x98f8 <malloc>
    5420:	9c 01       	movw	r18, r24
    5422:	8a a5       	ldd	r24, Y+42	; 0x2a
    5424:	9b a5       	ldd	r25, Y+43	; 0x2b
    5426:	fc 01       	movw	r30, r24
    5428:	30 a3       	std	Z+32, r19	; 0x20
    542a:	27 8f       	std	Z+31, r18	; 0x1f
    542c:	8a a5       	ldd	r24, Y+42	; 0x2a
    542e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5430:	fc 01       	movw	r30, r24
    5432:	87 8d       	ldd	r24, Z+31	; 0x1f
    5434:	90 a1       	ldd	r25, Z+32	; 0x20
    5436:	89 2b       	or	r24, r25
    5438:	11 f4       	brne	.+4      	; 0x543e <_ZN16Adafruit_SSD13065beginEhhbb+0x94>
    543a:	81 e0       	ldi	r24, 0x01	; 1
    543c:	01 c0       	rjmp	.+2      	; 0x5440 <_ZN16Adafruit_SSD13065beginEhhbb+0x96>
    543e:	80 e0       	ldi	r24, 0x00	; 0
    5440:	88 23       	and	r24, r24
    5442:	11 f0       	breq	.+4      	; 0x5448 <_ZN16Adafruit_SSD13065beginEhhbb+0x9e>
    5444:	80 e0       	ldi	r24, 0x00	; 0
    5446:	31 c3       	rjmp	.+1634   	; 0x5aaa <_ZN16Adafruit_SSD13065beginEhhbb+0x700>
    5448:	8a a5       	ldd	r24, Y+42	; 0x2a
    544a:	9b a5       	ldd	r25, Y+43	; 0x2b
    544c:	fe d4       	rcall	.+2556   	; 0x5e4a <_ZN16Adafruit_SSD130612clearDisplayEv>
    544e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5450:	9b a5       	ldd	r25, Y+43	; 0x2b
    5452:	fc 01       	movw	r30, r24
    5454:	86 81       	ldd	r24, Z+6	; 0x06
    5456:	97 81       	ldd	r25, Z+7	; 0x07
    5458:	81 97       	sbiw	r24, 0x21	; 33
    545a:	54 f1       	brlt	.+84     	; 0x54b0 <_ZN16Adafruit_SSD13065beginEhhbb+0x106>
    545c:	8a a5       	ldd	r24, Y+42	; 0x2a
    545e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5460:	fc 01       	movw	r30, r24
    5462:	86 81       	ldd	r24, Z+6	; 0x06
    5464:	97 81       	ldd	r25, Z+7	; 0x07
    5466:	80 54       	subi	r24, 0x40	; 64
    5468:	91 09       	sbc	r25, r1
    546a:	99 23       	and	r25, r25
    546c:	0c f4       	brge	.+2      	; 0x5470 <_ZN16Adafruit_SSD13065beginEhhbb+0xc6>
    546e:	01 96       	adiw	r24, 0x01	; 1
    5470:	95 95       	asr	r25
    5472:	87 95       	ror	r24
    5474:	ac 01       	movw	r20, r24
    5476:	8a a5       	ldd	r24, Y+42	; 0x2a
    5478:	9b a5       	ldd	r25, Y+43	; 0x2b
    547a:	fc 01       	movw	r30, r24
    547c:	84 81       	ldd	r24, Z+4	; 0x04
    547e:	95 81       	ldd	r25, Z+5	; 0x05
    5480:	82 55       	subi	r24, 0x52	; 82
    5482:	91 09       	sbc	r25, r1
    5484:	99 23       	and	r25, r25
    5486:	0c f4       	brge	.+2      	; 0x548a <_ZN16Adafruit_SSD13065beginEhhbb+0xe0>
    5488:	01 96       	adiw	r24, 0x01	; 1
    548a:	95 95       	asr	r25
    548c:	87 95       	ror	r24
    548e:	bc 01       	movw	r22, r24
    5490:	8a a5       	ldd	r24, Y+42	; 0x2a
    5492:	9b a5       	ldd	r25, Y+43	; 0x2b
    5494:	cc 24       	eor	r12, r12
    5496:	c3 94       	inc	r12
    5498:	d1 2c       	mov	r13, r1
    549a:	68 94       	set
    549c:	ee 24       	eor	r14, r14
    549e:	e6 f8       	bld	r14, 6
    54a0:	f1 2c       	mov	r15, r1
    54a2:	02 e5       	ldi	r16, 0x52	; 82
    54a4:	10 e0       	ldi	r17, 0x00	; 0
    54a6:	20 ee       	ldi	r18, 0xE0	; 224
    54a8:	38 e0       	ldi	r19, 0x08	; 8
    54aa:	0e 94 84 1f 	call	0x3f08	; 0x3f08 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>
    54ae:	28 c0       	rjmp	.+80     	; 0x5500 <_ZN16Adafruit_SSD13065beginEhhbb+0x156>
    54b0:	8a a5       	ldd	r24, Y+42	; 0x2a
    54b2:	9b a5       	ldd	r25, Y+43	; 0x2b
    54b4:	fc 01       	movw	r30, r24
    54b6:	86 81       	ldd	r24, Z+6	; 0x06
    54b8:	97 81       	ldd	r25, Z+7	; 0x07
    54ba:	80 97       	sbiw	r24, 0x20	; 32
    54bc:	99 23       	and	r25, r25
    54be:	0c f4       	brge	.+2      	; 0x54c2 <_ZN16Adafruit_SSD13065beginEhhbb+0x118>
    54c0:	01 96       	adiw	r24, 0x01	; 1
    54c2:	95 95       	asr	r25
    54c4:	87 95       	ror	r24
    54c6:	ac 01       	movw	r20, r24
    54c8:	8a a5       	ldd	r24, Y+42	; 0x2a
    54ca:	9b a5       	ldd	r25, Y+43	; 0x2b
    54cc:	fc 01       	movw	r30, r24
    54ce:	84 81       	ldd	r24, Z+4	; 0x04
    54d0:	95 81       	ldd	r25, Z+5	; 0x05
    54d2:	83 57       	subi	r24, 0x73	; 115
    54d4:	91 09       	sbc	r25, r1
    54d6:	99 23       	and	r25, r25
    54d8:	0c f4       	brge	.+2      	; 0x54dc <_ZN16Adafruit_SSD13065beginEhhbb+0x132>
    54da:	01 96       	adiw	r24, 0x01	; 1
    54dc:	95 95       	asr	r25
    54de:	87 95       	ror	r24
    54e0:	bc 01       	movw	r22, r24
    54e2:	8a a5       	ldd	r24, Y+42	; 0x2a
    54e4:	9b a5       	ldd	r25, Y+43	; 0x2b
    54e6:	cc 24       	eor	r12, r12
    54e8:	c3 94       	inc	r12
    54ea:	d1 2c       	mov	r13, r1
    54ec:	68 94       	set
    54ee:	ee 24       	eor	r14, r14
    54f0:	e5 f8       	bld	r14, 5
    54f2:	f1 2c       	mov	r15, r1
    54f4:	03 e7       	ldi	r16, 0x73	; 115
    54f6:	10 e0       	ldi	r17, 0x00	; 0
    54f8:	20 ea       	ldi	r18, 0xA0	; 160
    54fa:	3b e0       	ldi	r19, 0x0B	; 11
    54fc:	0e 94 84 1f 	call	0x3f08	; 0x3f08 <_ZN12Adafruit_GFX10drawBitmapEiiPKhiij>
    5500:	2c a5       	ldd	r18, Y+44	; 0x2c
    5502:	8a a5       	ldd	r24, Y+42	; 0x2a
    5504:	9b a5       	ldd	r25, Y+43	; 0x2b
    5506:	fc 01       	movw	r30, r24
    5508:	22 a3       	std	Z+34, r18	; 0x22
    550a:	8a a5       	ldd	r24, Y+42	; 0x2a
    550c:	9b a5       	ldd	r25, Y+43	; 0x2b
    550e:	fc 01       	movw	r30, r24
    5510:	85 8d       	ldd	r24, Z+29	; 0x1d
    5512:	96 8d       	ldd	r25, Z+30	; 0x1e
    5514:	89 2b       	or	r24, r25
    5516:	f9 f0       	breq	.+62     	; 0x5556 <_ZN16Adafruit_SSD13065beginEhhbb+0x1ac>
    5518:	8d a5       	ldd	r24, Y+45	; 0x2d
    551a:	88 23       	and	r24, r24
    551c:	59 f4       	brne	.+22     	; 0x5534 <_ZN16Adafruit_SSD13065beginEhhbb+0x18a>
    551e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5520:	9b a5       	ldd	r25, Y+43	; 0x2b
    5522:	fc 01       	movw	r30, r24
    5524:	86 81       	ldd	r24, Z+6	; 0x06
    5526:	97 81       	ldd	r25, Z+7	; 0x07
    5528:	80 97       	sbiw	r24, 0x20	; 32
    552a:	11 f4       	brne	.+4      	; 0x5530 <_ZN16Adafruit_SSD13065beginEhhbb+0x186>
    552c:	2c e3       	ldi	r18, 0x3C	; 60
    552e:	03 c0       	rjmp	.+6      	; 0x5536 <_ZN16Adafruit_SSD13065beginEhhbb+0x18c>
    5530:	2d e3       	ldi	r18, 0x3D	; 61
    5532:	01 c0       	rjmp	.+2      	; 0x5536 <_ZN16Adafruit_SSD13065beginEhhbb+0x18c>
    5534:	2d a5       	ldd	r18, Y+45	; 0x2d
    5536:	8a a5       	ldd	r24, Y+42	; 0x2a
    5538:	9b a5       	ldd	r25, Y+43	; 0x2b
    553a:	fc 01       	movw	r30, r24
    553c:	21 a3       	std	Z+33, r18	; 0x21
    553e:	8f a5       	ldd	r24, Y+47	; 0x2f
    5540:	88 23       	and	r24, r24
    5542:	09 f4       	brne	.+2      	; 0x5546 <_ZN16Adafruit_SSD13065beginEhhbb+0x19c>
    5544:	5a c1       	rjmp	.+692    	; 0x57fa <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    5546:	8a a5       	ldd	r24, Y+42	; 0x2a
    5548:	9b a5       	ldd	r25, Y+43	; 0x2b
    554a:	fc 01       	movw	r30, r24
    554c:	85 8d       	ldd	r24, Z+29	; 0x1d
    554e:	96 8d       	ldd	r25, Z+30	; 0x1e
    5550:	0e 94 87 3c 	call	0x790e	; 0x790e <_ZN7TwoWire5beginEv>
    5554:	52 c1       	rjmp	.+676    	; 0x57fa <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    5556:	8a a5       	ldd	r24, Y+42	; 0x2a
    5558:	9b a5       	ldd	r25, Y+43	; 0x2b
    555a:	fc 01       	movw	r30, r24
    555c:	86 a1       	ldd	r24, Z+38	; 0x26
    555e:	61 e0       	ldi	r22, 0x01	; 1
    5560:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    5564:	8a a5       	ldd	r24, Y+42	; 0x2a
    5566:	9b a5       	ldd	r25, Y+43	; 0x2b
    5568:	fc 01       	movw	r30, r24
    556a:	87 a1       	ldd	r24, Z+39	; 0x27
    556c:	61 e0       	ldi	r22, 0x01	; 1
    556e:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    5572:	8a a5       	ldd	r24, Y+42	; 0x2a
    5574:	9b a5       	ldd	r25, Y+43	; 0x2b
    5576:	fc 01       	movw	r30, r24
    5578:	86 a1       	ldd	r24, Z+38	; 0x26
    557a:	08 2e       	mov	r0, r24
    557c:	00 0c       	add	r0, r0
    557e:	99 0b       	sbc	r25, r25
    5580:	8d 5c       	subi	r24, 0xCD	; 205
    5582:	91 4f       	sbci	r25, 0xF1	; 241
    5584:	9b 83       	std	Y+3, r25	; 0x03
    5586:	8a 83       	std	Y+2, r24	; 0x02
    5588:	8a 81       	ldd	r24, Y+2	; 0x02
    558a:	9b 81       	ldd	r25, Y+3	; 0x03
    558c:	fc 01       	movw	r30, r24
    558e:	84 91       	lpm	r24, Z
    5590:	8c 83       	std	Y+4, r24	; 0x04
    5592:	8c 81       	ldd	r24, Y+4	; 0x04
    5594:	88 2f       	mov	r24, r24
    5596:	90 e0       	ldi	r25, 0x00	; 0
    5598:	88 0f       	add	r24, r24
    559a:	99 1f       	adc	r25, r25
    559c:	8d 56       	subi	r24, 0x6D	; 109
    559e:	91 4f       	sbci	r25, 0xF1	; 241
    55a0:	9e 83       	std	Y+6, r25	; 0x06
    55a2:	8d 83       	std	Y+5, r24	; 0x05
    55a4:	8d 81       	ldd	r24, Y+5	; 0x05
    55a6:	9e 81       	ldd	r25, Y+6	; 0x06
    55a8:	fc 01       	movw	r30, r24
    55aa:	25 91       	lpm	r18, Z+
    55ac:	34 91       	lpm	r19, Z
    55ae:	cf 01       	movw	r24, r30
    55b0:	38 87       	std	Y+8, r19	; 0x08
    55b2:	2f 83       	std	Y+7, r18	; 0x07
    55b4:	9e 83       	std	Y+6, r25	; 0x06
    55b6:	8d 83       	std	Y+5, r24	; 0x05
    55b8:	8f 81       	ldd	r24, Y+7	; 0x07
    55ba:	98 85       	ldd	r25, Y+8	; 0x08
    55bc:	9c 01       	movw	r18, r24
    55be:	8a a5       	ldd	r24, Y+42	; 0x2a
    55c0:	9b a5       	ldd	r25, Y+43	; 0x2b
    55c2:	fc 01       	movw	r30, r24
    55c4:	36 a7       	std	Z+46, r19	; 0x2e
    55c6:	25 a7       	std	Z+45, r18	; 0x2d
    55c8:	8a a5       	ldd	r24, Y+42	; 0x2a
    55ca:	9b a5       	ldd	r25, Y+43	; 0x2b
    55cc:	fc 01       	movw	r30, r24
    55ce:	86 a1       	ldd	r24, Z+38	; 0x26
    55d0:	08 2e       	mov	r0, r24
    55d2:	00 0c       	add	r0, r0
    55d4:	99 0b       	sbc	r25, r25
    55d6:	83 51       	subi	r24, 0x13	; 19
    55d8:	92 4f       	sbci	r25, 0xF2	; 242
    55da:	9a 87       	std	Y+10, r25	; 0x0a
    55dc:	89 87       	std	Y+9, r24	; 0x09
    55de:	89 85       	ldd	r24, Y+9	; 0x09
    55e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    55e2:	fc 01       	movw	r30, r24
    55e4:	84 91       	lpm	r24, Z
    55e6:	8b 87       	std	Y+11, r24	; 0x0b
    55e8:	8a a5       	ldd	r24, Y+42	; 0x2a
    55ea:	9b a5       	ldd	r25, Y+43	; 0x2b
    55ec:	2b 85       	ldd	r18, Y+11	; 0x0b
    55ee:	fc 01       	movw	r30, r24
    55f0:	23 ab       	std	Z+51, r18	; 0x33
    55f2:	8a a5       	ldd	r24, Y+42	; 0x2a
    55f4:	9b a5       	ldd	r25, Y+43	; 0x2b
    55f6:	fc 01       	movw	r30, r24
    55f8:	87 a1       	ldd	r24, Z+39	; 0x27
    55fa:	08 2e       	mov	r0, r24
    55fc:	00 0c       	add	r0, r0
    55fe:	99 0b       	sbc	r25, r25
    5600:	8d 5c       	subi	r24, 0xCD	; 205
    5602:	91 4f       	sbci	r25, 0xF1	; 241
    5604:	9d 87       	std	Y+13, r25	; 0x0d
    5606:	8c 87       	std	Y+12, r24	; 0x0c
    5608:	8c 85       	ldd	r24, Y+12	; 0x0c
    560a:	9d 85       	ldd	r25, Y+13	; 0x0d
    560c:	fc 01       	movw	r30, r24
    560e:	84 91       	lpm	r24, Z
    5610:	8e 87       	std	Y+14, r24	; 0x0e
    5612:	8e 85       	ldd	r24, Y+14	; 0x0e
    5614:	88 2f       	mov	r24, r24
    5616:	90 e0       	ldi	r25, 0x00	; 0
    5618:	88 0f       	add	r24, r24
    561a:	99 1f       	adc	r25, r25
    561c:	8d 56       	subi	r24, 0x6D	; 109
    561e:	91 4f       	sbci	r25, 0xF1	; 241
    5620:	98 8b       	std	Y+16, r25	; 0x10
    5622:	8f 87       	std	Y+15, r24	; 0x0f
    5624:	8f 85       	ldd	r24, Y+15	; 0x0f
    5626:	98 89       	ldd	r25, Y+16	; 0x10
    5628:	fc 01       	movw	r30, r24
    562a:	25 91       	lpm	r18, Z+
    562c:	34 91       	lpm	r19, Z
    562e:	cf 01       	movw	r24, r30
    5630:	3a 8b       	std	Y+18, r19	; 0x12
    5632:	29 8b       	std	Y+17, r18	; 0x11
    5634:	98 8b       	std	Y+16, r25	; 0x10
    5636:	8f 87       	std	Y+15, r24	; 0x0f
    5638:	89 89       	ldd	r24, Y+17	; 0x11
    563a:	9a 89       	ldd	r25, Y+18	; 0x12
    563c:	9c 01       	movw	r18, r24
    563e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5640:	9b a5       	ldd	r25, Y+43	; 0x2b
    5642:	fc 01       	movw	r30, r24
    5644:	30 ab       	std	Z+48, r19	; 0x30
    5646:	27 a7       	std	Z+47, r18	; 0x2f
    5648:	8a a5       	ldd	r24, Y+42	; 0x2a
    564a:	9b a5       	ldd	r25, Y+43	; 0x2b
    564c:	fc 01       	movw	r30, r24
    564e:	87 a1       	ldd	r24, Z+39	; 0x27
    5650:	08 2e       	mov	r0, r24
    5652:	00 0c       	add	r0, r0
    5654:	99 0b       	sbc	r25, r25
    5656:	83 51       	subi	r24, 0x13	; 19
    5658:	92 4f       	sbci	r25, 0xF2	; 242
    565a:	9c 8b       	std	Y+20, r25	; 0x14
    565c:	8b 8b       	std	Y+19, r24	; 0x13
    565e:	8b 89       	ldd	r24, Y+19	; 0x13
    5660:	9c 89       	ldd	r25, Y+20	; 0x14
    5662:	fc 01       	movw	r30, r24
    5664:	84 91       	lpm	r24, Z
    5666:	8d 8b       	std	Y+21, r24	; 0x15
    5668:	8a a5       	ldd	r24, Y+42	; 0x2a
    566a:	9b a5       	ldd	r25, Y+43	; 0x2b
    566c:	2d 89       	ldd	r18, Y+21	; 0x15
    566e:	fc 01       	movw	r30, r24
    5670:	24 ab       	std	Z+52, r18	; 0x34
    5672:	8a a5       	ldd	r24, Y+42	; 0x2a
    5674:	9b a5       	ldd	r25, Y+43	; 0x2b
    5676:	fc 01       	movw	r30, r24
    5678:	87 a5       	ldd	r24, Z+47	; 0x2f
    567a:	90 a9       	ldd	r25, Z+48	; 0x30
    567c:	2a a5       	ldd	r18, Y+42	; 0x2a
    567e:	3b a5       	ldd	r19, Y+43	; 0x2b
    5680:	f9 01       	movw	r30, r18
    5682:	27 a5       	ldd	r18, Z+47	; 0x2f
    5684:	30 a9       	ldd	r19, Z+48	; 0x30
    5686:	f9 01       	movw	r30, r18
    5688:	40 81       	ld	r20, Z
    568a:	2a a5       	ldd	r18, Y+42	; 0x2a
    568c:	3b a5       	ldd	r19, Y+43	; 0x2b
    568e:	f9 01       	movw	r30, r18
    5690:	24 a9       	ldd	r18, Z+52	; 0x34
    5692:	24 2b       	or	r18, r20
    5694:	fc 01       	movw	r30, r24
    5696:	20 83       	st	Z, r18
    5698:	8a a5       	ldd	r24, Y+42	; 0x2a
    569a:	9b a5       	ldd	r25, Y+43	; 0x2b
    569c:	fc 01       	movw	r30, r24
    569e:	83 8d       	ldd	r24, Z+27	; 0x1b
    56a0:	94 8d       	ldd	r25, Z+28	; 0x1c
    56a2:	89 2b       	or	r24, r25
    56a4:	39 f0       	breq	.+14     	; 0x56b4 <_ZN16Adafruit_SSD13065beginEhhbb+0x30a>
    56a6:	8f a5       	ldd	r24, Y+47	; 0x2f
    56a8:	88 23       	and	r24, r24
    56aa:	09 f4       	brne	.+2      	; 0x56ae <_ZN16Adafruit_SSD13065beginEhhbb+0x304>
    56ac:	a6 c0       	rjmp	.+332    	; 0x57fa <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    56ae:	0e 94 65 3f 	call	0x7eca	; 0x7eca <_ZN8SPIClass5beginEv>
    56b2:	a3 c0       	rjmp	.+326    	; 0x57fa <_ZN16Adafruit_SSD13065beginEhhbb+0x450>
    56b4:	8a a5       	ldd	r24, Y+42	; 0x2a
    56b6:	9b a5       	ldd	r25, Y+43	; 0x2b
    56b8:	fc 01       	movw	r30, r24
    56ba:	84 a1       	ldd	r24, Z+36	; 0x24
    56bc:	61 e0       	ldi	r22, 0x01	; 1
    56be:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    56c2:	8a a5       	ldd	r24, Y+42	; 0x2a
    56c4:	9b a5       	ldd	r25, Y+43	; 0x2b
    56c6:	fc 01       	movw	r30, r24
    56c8:	85 a1       	ldd	r24, Z+37	; 0x25
    56ca:	61 e0       	ldi	r22, 0x01	; 1
    56cc:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    56d0:	8a a5       	ldd	r24, Y+42	; 0x2a
    56d2:	9b a5       	ldd	r25, Y+43	; 0x2b
    56d4:	fc 01       	movw	r30, r24
    56d6:	84 a1       	ldd	r24, Z+36	; 0x24
    56d8:	08 2e       	mov	r0, r24
    56da:	00 0c       	add	r0, r0
    56dc:	99 0b       	sbc	r25, r25
    56de:	8d 5c       	subi	r24, 0xCD	; 205
    56e0:	91 4f       	sbci	r25, 0xF1	; 241
    56e2:	9f 8b       	std	Y+23, r25	; 0x17
    56e4:	8e 8b       	std	Y+22, r24	; 0x16
    56e6:	8e 89       	ldd	r24, Y+22	; 0x16
    56e8:	9f 89       	ldd	r25, Y+23	; 0x17
    56ea:	fc 01       	movw	r30, r24
    56ec:	84 91       	lpm	r24, Z
    56ee:	88 8f       	std	Y+24, r24	; 0x18
    56f0:	88 8d       	ldd	r24, Y+24	; 0x18
    56f2:	88 2f       	mov	r24, r24
    56f4:	90 e0       	ldi	r25, 0x00	; 0
    56f6:	88 0f       	add	r24, r24
    56f8:	99 1f       	adc	r25, r25
    56fa:	8d 56       	subi	r24, 0x6D	; 109
    56fc:	91 4f       	sbci	r25, 0xF1	; 241
    56fe:	9a 8f       	std	Y+26, r25	; 0x1a
    5700:	89 8f       	std	Y+25, r24	; 0x19
    5702:	89 8d       	ldd	r24, Y+25	; 0x19
    5704:	9a 8d       	ldd	r25, Y+26	; 0x1a
    5706:	fc 01       	movw	r30, r24
    5708:	25 91       	lpm	r18, Z+
    570a:	34 91       	lpm	r19, Z
    570c:	cf 01       	movw	r24, r30
    570e:	3c 8f       	std	Y+28, r19	; 0x1c
    5710:	2b 8f       	std	Y+27, r18	; 0x1b
    5712:	9a 8f       	std	Y+26, r25	; 0x1a
    5714:	89 8f       	std	Y+25, r24	; 0x19
    5716:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5718:	9c 8d       	ldd	r25, Y+28	; 0x1c
    571a:	9c 01       	movw	r18, r24
    571c:	8a a5       	ldd	r24, Y+42	; 0x2a
    571e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5720:	fc 01       	movw	r30, r24
    5722:	32 a7       	std	Z+42, r19	; 0x2a
    5724:	21 a7       	std	Z+41, r18	; 0x29
    5726:	8a a5       	ldd	r24, Y+42	; 0x2a
    5728:	9b a5       	ldd	r25, Y+43	; 0x2b
    572a:	fc 01       	movw	r30, r24
    572c:	84 a1       	ldd	r24, Z+36	; 0x24
    572e:	08 2e       	mov	r0, r24
    5730:	00 0c       	add	r0, r0
    5732:	99 0b       	sbc	r25, r25
    5734:	83 51       	subi	r24, 0x13	; 19
    5736:	92 4f       	sbci	r25, 0xF2	; 242
    5738:	9e 8f       	std	Y+30, r25	; 0x1e
    573a:	8d 8f       	std	Y+29, r24	; 0x1d
    573c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    573e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5740:	fc 01       	movw	r30, r24
    5742:	84 91       	lpm	r24, Z
    5744:	8f 8f       	std	Y+31, r24	; 0x1f
    5746:	8a a5       	ldd	r24, Y+42	; 0x2a
    5748:	9b a5       	ldd	r25, Y+43	; 0x2b
    574a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    574c:	fc 01       	movw	r30, r24
    574e:	21 ab       	std	Z+49, r18	; 0x31
    5750:	8a a5       	ldd	r24, Y+42	; 0x2a
    5752:	9b a5       	ldd	r25, Y+43	; 0x2b
    5754:	fc 01       	movw	r30, r24
    5756:	85 a1       	ldd	r24, Z+37	; 0x25
    5758:	08 2e       	mov	r0, r24
    575a:	00 0c       	add	r0, r0
    575c:	99 0b       	sbc	r25, r25
    575e:	8d 5c       	subi	r24, 0xCD	; 205
    5760:	91 4f       	sbci	r25, 0xF1	; 241
    5762:	99 a3       	std	Y+33, r25	; 0x21
    5764:	88 a3       	std	Y+32, r24	; 0x20
    5766:	88 a1       	ldd	r24, Y+32	; 0x20
    5768:	99 a1       	ldd	r25, Y+33	; 0x21
    576a:	fc 01       	movw	r30, r24
    576c:	84 91       	lpm	r24, Z
    576e:	8a a3       	std	Y+34, r24	; 0x22
    5770:	8a a1       	ldd	r24, Y+34	; 0x22
    5772:	88 2f       	mov	r24, r24
    5774:	90 e0       	ldi	r25, 0x00	; 0
    5776:	88 0f       	add	r24, r24
    5778:	99 1f       	adc	r25, r25
    577a:	8d 56       	subi	r24, 0x6D	; 109
    577c:	91 4f       	sbci	r25, 0xF1	; 241
    577e:	9c a3       	std	Y+36, r25	; 0x24
    5780:	8b a3       	std	Y+35, r24	; 0x23
    5782:	8b a1       	ldd	r24, Y+35	; 0x23
    5784:	9c a1       	ldd	r25, Y+36	; 0x24
    5786:	fc 01       	movw	r30, r24
    5788:	25 91       	lpm	r18, Z+
    578a:	34 91       	lpm	r19, Z
    578c:	cf 01       	movw	r24, r30
    578e:	3e a3       	std	Y+38, r19	; 0x26
    5790:	2d a3       	std	Y+37, r18	; 0x25
    5792:	9c a3       	std	Y+36, r25	; 0x24
    5794:	8b a3       	std	Y+35, r24	; 0x23
    5796:	8d a1       	ldd	r24, Y+37	; 0x25
    5798:	9e a1       	ldd	r25, Y+38	; 0x26
    579a:	9c 01       	movw	r18, r24
    579c:	8a a5       	ldd	r24, Y+42	; 0x2a
    579e:	9b a5       	ldd	r25, Y+43	; 0x2b
    57a0:	fc 01       	movw	r30, r24
    57a2:	34 a7       	std	Z+44, r19	; 0x2c
    57a4:	23 a7       	std	Z+43, r18	; 0x2b
    57a6:	8a a5       	ldd	r24, Y+42	; 0x2a
    57a8:	9b a5       	ldd	r25, Y+43	; 0x2b
    57aa:	fc 01       	movw	r30, r24
    57ac:	85 a1       	ldd	r24, Z+37	; 0x25
    57ae:	08 2e       	mov	r0, r24
    57b0:	00 0c       	add	r0, r0
    57b2:	99 0b       	sbc	r25, r25
    57b4:	83 51       	subi	r24, 0x13	; 19
    57b6:	92 4f       	sbci	r25, 0xF2	; 242
    57b8:	98 a7       	std	Y+40, r25	; 0x28
    57ba:	8f a3       	std	Y+39, r24	; 0x27
    57bc:	8f a1       	ldd	r24, Y+39	; 0x27
    57be:	98 a5       	ldd	r25, Y+40	; 0x28
    57c0:	fc 01       	movw	r30, r24
    57c2:	84 91       	lpm	r24, Z
    57c4:	89 a7       	std	Y+41, r24	; 0x29
    57c6:	8a a5       	ldd	r24, Y+42	; 0x2a
    57c8:	9b a5       	ldd	r25, Y+43	; 0x2b
    57ca:	29 a5       	ldd	r18, Y+41	; 0x29
    57cc:	fc 01       	movw	r30, r24
    57ce:	22 ab       	std	Z+50, r18	; 0x32
    57d0:	8a a5       	ldd	r24, Y+42	; 0x2a
    57d2:	9b a5       	ldd	r25, Y+43	; 0x2b
    57d4:	fc 01       	movw	r30, r24
    57d6:	83 a5       	ldd	r24, Z+43	; 0x2b
    57d8:	94 a5       	ldd	r25, Z+44	; 0x2c
    57da:	2a a5       	ldd	r18, Y+42	; 0x2a
    57dc:	3b a5       	ldd	r19, Y+43	; 0x2b
    57de:	f9 01       	movw	r30, r18
    57e0:	23 a5       	ldd	r18, Z+43	; 0x2b
    57e2:	34 a5       	ldd	r19, Z+44	; 0x2c
    57e4:	f9 01       	movw	r30, r18
    57e6:	20 81       	ld	r18, Z
    57e8:	42 2f       	mov	r20, r18
    57ea:	2a a5       	ldd	r18, Y+42	; 0x2a
    57ec:	3b a5       	ldd	r19, Y+43	; 0x2b
    57ee:	f9 01       	movw	r30, r18
    57f0:	22 a9       	ldd	r18, Z+50	; 0x32
    57f2:	20 95       	com	r18
    57f4:	24 23       	and	r18, r20
    57f6:	fc 01       	movw	r30, r24
    57f8:	20 83       	st	Z, r18
    57fa:	8e a5       	ldd	r24, Y+46	; 0x2e
    57fc:	88 23       	and	r24, r24
    57fe:	71 f1       	breq	.+92     	; 0x585c <_ZN16Adafruit_SSD13065beginEhhbb+0x4b2>
    5800:	8a a5       	ldd	r24, Y+42	; 0x2a
    5802:	9b a5       	ldd	r25, Y+43	; 0x2b
    5804:	fc 01       	movw	r30, r24
    5806:	80 a5       	ldd	r24, Z+40	; 0x28
    5808:	88 23       	and	r24, r24
    580a:	44 f1       	brlt	.+80     	; 0x585c <_ZN16Adafruit_SSD13065beginEhhbb+0x4b2>
    580c:	8a a5       	ldd	r24, Y+42	; 0x2a
    580e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5810:	fc 01       	movw	r30, r24
    5812:	80 a5       	ldd	r24, Z+40	; 0x28
    5814:	61 e0       	ldi	r22, 0x01	; 1
    5816:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    581a:	8a a5       	ldd	r24, Y+42	; 0x2a
    581c:	9b a5       	ldd	r25, Y+43	; 0x2b
    581e:	fc 01       	movw	r30, r24
    5820:	80 a5       	ldd	r24, Z+40	; 0x28
    5822:	61 e0       	ldi	r22, 0x01	; 1
    5824:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    5828:	61 e0       	ldi	r22, 0x01	; 1
    582a:	70 e0       	ldi	r23, 0x00	; 0
    582c:	80 e0       	ldi	r24, 0x00	; 0
    582e:	90 e0       	ldi	r25, 0x00	; 0
    5830:	0e 94 b9 49 	call	0x9372	; 0x9372 <delay>
    5834:	8a a5       	ldd	r24, Y+42	; 0x2a
    5836:	9b a5       	ldd	r25, Y+43	; 0x2b
    5838:	fc 01       	movw	r30, r24
    583a:	80 a5       	ldd	r24, Z+40	; 0x28
    583c:	60 e0       	ldi	r22, 0x00	; 0
    583e:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    5842:	6a e0       	ldi	r22, 0x0A	; 10
    5844:	70 e0       	ldi	r23, 0x00	; 0
    5846:	80 e0       	ldi	r24, 0x00	; 0
    5848:	90 e0       	ldi	r25, 0x00	; 0
    584a:	0e 94 b9 49 	call	0x9372	; 0x9372 <delay>
    584e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5850:	9b a5       	ldd	r25, Y+43	; 0x2b
    5852:	fc 01       	movw	r30, r24
    5854:	80 a5       	ldd	r24, Z+40	; 0x28
    5856:	61 e0       	ldi	r22, 0x01	; 1
    5858:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    585c:	8a a5       	ldd	r24, Y+42	; 0x2a
    585e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5860:	fc 01       	movw	r30, r24
    5862:	85 8d       	ldd	r24, Z+29	; 0x1d
    5864:	96 8d       	ldd	r25, Z+30	; 0x1e
    5866:	89 2b       	or	r24, r25
    5868:	91 f0       	breq	.+36     	; 0x588e <_ZN16Adafruit_SSD13065beginEhhbb+0x4e4>
    586a:	8a a5       	ldd	r24, Y+42	; 0x2a
    586c:	9b a5       	ldd	r25, Y+43	; 0x2b
    586e:	fc 01       	movw	r30, r24
    5870:	85 a9       	ldd	r24, Z+53	; 0x35
    5872:	96 a9       	ldd	r25, Z+54	; 0x36
    5874:	a7 a9       	ldd	r26, Z+55	; 0x37
    5876:	b0 ad       	ldd	r27, Z+56	; 0x38
    5878:	2a a5       	ldd	r18, Y+42	; 0x2a
    587a:	3b a5       	ldd	r19, Y+43	; 0x2b
    587c:	f9 01       	movw	r30, r18
    587e:	25 8d       	ldd	r18, Z+29	; 0x1d
    5880:	36 8d       	ldd	r19, Z+30	; 0x1e
    5882:	ac 01       	movw	r20, r24
    5884:	bd 01       	movw	r22, r26
    5886:	c9 01       	movw	r24, r18
    5888:	0e 94 a4 3c 	call	0x7948	; 0x7948 <_ZN7TwoWire8setClockEm>
    588c:	23 c0       	rjmp	.+70     	; 0x58d4 <_ZN16Adafruit_SSD13065beginEhhbb+0x52a>
    588e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5890:	9b a5       	ldd	r25, Y+43	; 0x2b
    5892:	fc 01       	movw	r30, r24
    5894:	83 8d       	ldd	r24, Z+27	; 0x1b
    5896:	94 8d       	ldd	r25, Z+28	; 0x1c
    5898:	89 2b       	or	r24, r25
    589a:	39 f0       	breq	.+14     	; 0x58aa <_ZN16Adafruit_SSD13065beginEhhbb+0x500>
    589c:	8a a5       	ldd	r24, Y+42	; 0x2a
    589e:	9b a5       	ldd	r25, Y+43	; 0x2b
    58a0:	fc 01       	movw	r30, r24
    58a2:	86 ad       	ldd	r24, Z+62	; 0x3e
    58a4:	97 ad       	ldd	r25, Z+63	; 0x3f
    58a6:	0e 94 39 19 	call	0x3272	; 0x3272 <_ZN8SPIClass16beginTransactionE11SPISettings>
    58aa:	8a a5       	ldd	r24, Y+42	; 0x2a
    58ac:	9b a5       	ldd	r25, Y+43	; 0x2b
    58ae:	fc 01       	movw	r30, r24
    58b0:	87 a5       	ldd	r24, Z+47	; 0x2f
    58b2:	90 a9       	ldd	r25, Z+48	; 0x30
    58b4:	2a a5       	ldd	r18, Y+42	; 0x2a
    58b6:	3b a5       	ldd	r19, Y+43	; 0x2b
    58b8:	f9 01       	movw	r30, r18
    58ba:	27 a5       	ldd	r18, Z+47	; 0x2f
    58bc:	30 a9       	ldd	r19, Z+48	; 0x30
    58be:	f9 01       	movw	r30, r18
    58c0:	20 81       	ld	r18, Z
    58c2:	42 2f       	mov	r20, r18
    58c4:	2a a5       	ldd	r18, Y+42	; 0x2a
    58c6:	3b a5       	ldd	r19, Y+43	; 0x2b
    58c8:	f9 01       	movw	r30, r18
    58ca:	24 a9       	ldd	r18, Z+52	; 0x34
    58cc:	20 95       	com	r18
    58ce:	24 23       	and	r18, r20
    58d0:	fc 01       	movw	r30, r24
    58d2:	20 83       	st	Z, r18
    58d4:	24 e0       	ldi	r18, 0x04	; 4
    58d6:	8a a5       	ldd	r24, Y+42	; 0x2a
    58d8:	9b a5       	ldd	r25, Y+43	; 0x2b
    58da:	42 2f       	mov	r20, r18
    58dc:	60 e8       	ldi	r22, 0x80	; 128
    58de:	7d e0       	ldi	r23, 0x0D	; 13
    58e0:	11 dc       	rcall	.-2014   	; 0x5104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    58e2:	8a a5       	ldd	r24, Y+42	; 0x2a
    58e4:	9b a5       	ldd	r25, Y+43	; 0x2b
    58e6:	fc 01       	movw	r30, r24
    58e8:	86 81       	ldd	r24, Z+6	; 0x06
    58ea:	97 81       	ldd	r25, Z+7	; 0x07
    58ec:	2f ef       	ldi	r18, 0xFF	; 255
    58ee:	28 0f       	add	r18, r24
    58f0:	8a a5       	ldd	r24, Y+42	; 0x2a
    58f2:	9b a5       	ldd	r25, Y+43	; 0x2b
    58f4:	62 2f       	mov	r22, r18
    58f6:	23 db       	rcall	.-2490   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    58f8:	24 e0       	ldi	r18, 0x04	; 4
    58fa:	8a a5       	ldd	r24, Y+42	; 0x2a
    58fc:	9b a5       	ldd	r25, Y+43	; 0x2b
    58fe:	42 2f       	mov	r20, r18
    5900:	64 e8       	ldi	r22, 0x84	; 132
    5902:	7d e0       	ldi	r23, 0x0D	; 13
    5904:	ff db       	rcall	.-2050   	; 0x5104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    5906:	8a a5       	ldd	r24, Y+42	; 0x2a
    5908:	9b a5       	ldd	r25, Y+43	; 0x2b
    590a:	fc 01       	movw	r30, r24
    590c:	82 a1       	ldd	r24, Z+34	; 0x22
    590e:	81 30       	cpi	r24, 0x01	; 1
    5910:	11 f4       	brne	.+4      	; 0x5916 <_ZN16Adafruit_SSD13065beginEhhbb+0x56c>
    5912:	20 e1       	ldi	r18, 0x10	; 16
    5914:	01 c0       	rjmp	.+2      	; 0x5918 <_ZN16Adafruit_SSD13065beginEhhbb+0x56e>
    5916:	24 e1       	ldi	r18, 0x14	; 20
    5918:	8a a5       	ldd	r24, Y+42	; 0x2a
    591a:	9b a5       	ldd	r25, Y+43	; 0x2b
    591c:	62 2f       	mov	r22, r18
    591e:	0f db       	rcall	.-2530   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    5920:	24 e0       	ldi	r18, 0x04	; 4
    5922:	8a a5       	ldd	r24, Y+42	; 0x2a
    5924:	9b a5       	ldd	r25, Y+43	; 0x2b
    5926:	42 2f       	mov	r20, r18
    5928:	68 e8       	ldi	r22, 0x88	; 136
    592a:	7d e0       	ldi	r23, 0x0D	; 13
    592c:	eb db       	rcall	.-2090   	; 0x5104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    592e:	82 e0       	ldi	r24, 0x02	; 2
    5930:	89 83       	std	Y+1, r24	; 0x01
    5932:	8a a5       	ldd	r24, Y+42	; 0x2a
    5934:	9b a5       	ldd	r25, Y+43	; 0x2b
    5936:	2f e8       	ldi	r18, 0x8F	; 143
    5938:	fc 01       	movw	r30, r24
    593a:	25 af       	std	Z+61, r18	; 0x3d
    593c:	8a a5       	ldd	r24, Y+42	; 0x2a
    593e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5940:	fc 01       	movw	r30, r24
    5942:	84 81       	ldd	r24, Z+4	; 0x04
    5944:	95 81       	ldd	r25, Z+5	; 0x05
    5946:	80 38       	cpi	r24, 0x80	; 128
    5948:	91 05       	cpc	r25, r1
    594a:	79 f4       	brne	.+30     	; 0x596a <_ZN16Adafruit_SSD13065beginEhhbb+0x5c0>
    594c:	8a a5       	ldd	r24, Y+42	; 0x2a
    594e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5950:	fc 01       	movw	r30, r24
    5952:	86 81       	ldd	r24, Z+6	; 0x06
    5954:	97 81       	ldd	r25, Z+7	; 0x07
    5956:	80 97       	sbiw	r24, 0x20	; 32
    5958:	41 f4       	brne	.+16     	; 0x596a <_ZN16Adafruit_SSD13065beginEhhbb+0x5c0>
    595a:	82 e0       	ldi	r24, 0x02	; 2
    595c:	89 83       	std	Y+1, r24	; 0x01
    595e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5960:	9b a5       	ldd	r25, Y+43	; 0x2b
    5962:	2f e8       	ldi	r18, 0x8F	; 143
    5964:	fc 01       	movw	r30, r24
    5966:	25 af       	std	Z+61, r18	; 0x3d
    5968:	3e c0       	rjmp	.+124    	; 0x59e6 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    596a:	8a a5       	ldd	r24, Y+42	; 0x2a
    596c:	9b a5       	ldd	r25, Y+43	; 0x2b
    596e:	fc 01       	movw	r30, r24
    5970:	84 81       	ldd	r24, Z+4	; 0x04
    5972:	95 81       	ldd	r25, Z+5	; 0x05
    5974:	80 38       	cpi	r24, 0x80	; 128
    5976:	91 05       	cpc	r25, r1
    5978:	c1 f4       	brne	.+48     	; 0x59aa <_ZN16Adafruit_SSD13065beginEhhbb+0x600>
    597a:	8a a5       	ldd	r24, Y+42	; 0x2a
    597c:	9b a5       	ldd	r25, Y+43	; 0x2b
    597e:	fc 01       	movw	r30, r24
    5980:	86 81       	ldd	r24, Z+6	; 0x06
    5982:	97 81       	ldd	r25, Z+7	; 0x07
    5984:	80 34       	cpi	r24, 0x40	; 64
    5986:	91 05       	cpc	r25, r1
    5988:	81 f4       	brne	.+32     	; 0x59aa <_ZN16Adafruit_SSD13065beginEhhbb+0x600>
    598a:	82 e1       	ldi	r24, 0x12	; 18
    598c:	89 83       	std	Y+1, r24	; 0x01
    598e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5990:	9b a5       	ldd	r25, Y+43	; 0x2b
    5992:	fc 01       	movw	r30, r24
    5994:	82 a1       	ldd	r24, Z+34	; 0x22
    5996:	81 30       	cpi	r24, 0x01	; 1
    5998:	11 f4       	brne	.+4      	; 0x599e <_ZN16Adafruit_SSD13065beginEhhbb+0x5f4>
    599a:	2f e9       	ldi	r18, 0x9F	; 159
    599c:	01 c0       	rjmp	.+2      	; 0x59a0 <_ZN16Adafruit_SSD13065beginEhhbb+0x5f6>
    599e:	2f ec       	ldi	r18, 0xCF	; 207
    59a0:	8a a5       	ldd	r24, Y+42	; 0x2a
    59a2:	9b a5       	ldd	r25, Y+43	; 0x2b
    59a4:	fc 01       	movw	r30, r24
    59a6:	25 af       	std	Z+61, r18	; 0x3d
    59a8:	1e c0       	rjmp	.+60     	; 0x59e6 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    59aa:	8a a5       	ldd	r24, Y+42	; 0x2a
    59ac:	9b a5       	ldd	r25, Y+43	; 0x2b
    59ae:	fc 01       	movw	r30, r24
    59b0:	84 81       	ldd	r24, Z+4	; 0x04
    59b2:	95 81       	ldd	r25, Z+5	; 0x05
    59b4:	80 36       	cpi	r24, 0x60	; 96
    59b6:	91 05       	cpc	r25, r1
    59b8:	b1 f4       	brne	.+44     	; 0x59e6 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    59ba:	8a a5       	ldd	r24, Y+42	; 0x2a
    59bc:	9b a5       	ldd	r25, Y+43	; 0x2b
    59be:	fc 01       	movw	r30, r24
    59c0:	86 81       	ldd	r24, Z+6	; 0x06
    59c2:	97 81       	ldd	r25, Z+7	; 0x07
    59c4:	40 97       	sbiw	r24, 0x10	; 16
    59c6:	79 f4       	brne	.+30     	; 0x59e6 <_ZN16Adafruit_SSD13065beginEhhbb+0x63c>
    59c8:	82 e0       	ldi	r24, 0x02	; 2
    59ca:	89 83       	std	Y+1, r24	; 0x01
    59cc:	8a a5       	ldd	r24, Y+42	; 0x2a
    59ce:	9b a5       	ldd	r25, Y+43	; 0x2b
    59d0:	fc 01       	movw	r30, r24
    59d2:	82 a1       	ldd	r24, Z+34	; 0x22
    59d4:	81 30       	cpi	r24, 0x01	; 1
    59d6:	11 f4       	brne	.+4      	; 0x59dc <_ZN16Adafruit_SSD13065beginEhhbb+0x632>
    59d8:	20 e1       	ldi	r18, 0x10	; 16
    59da:	01 c0       	rjmp	.+2      	; 0x59de <_ZN16Adafruit_SSD13065beginEhhbb+0x634>
    59dc:	2f ea       	ldi	r18, 0xAF	; 175
    59de:	8a a5       	ldd	r24, Y+42	; 0x2a
    59e0:	9b a5       	ldd	r25, Y+43	; 0x2b
    59e2:	fc 01       	movw	r30, r24
    59e4:	25 af       	std	Z+61, r18	; 0x3d
    59e6:	8a a5       	ldd	r24, Y+42	; 0x2a
    59e8:	9b a5       	ldd	r25, Y+43	; 0x2b
    59ea:	6a ed       	ldi	r22, 0xDA	; 218
    59ec:	a8 da       	rcall	.-2736   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    59ee:	8a a5       	ldd	r24, Y+42	; 0x2a
    59f0:	9b a5       	ldd	r25, Y+43	; 0x2b
    59f2:	69 81       	ldd	r22, Y+1	; 0x01
    59f4:	a4 da       	rcall	.-2744   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    59f6:	8a a5       	ldd	r24, Y+42	; 0x2a
    59f8:	9b a5       	ldd	r25, Y+43	; 0x2b
    59fa:	61 e8       	ldi	r22, 0x81	; 129
    59fc:	a0 da       	rcall	.-2752   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    59fe:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a00:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a02:	fc 01       	movw	r30, r24
    5a04:	25 ad       	ldd	r18, Z+61	; 0x3d
    5a06:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a08:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a0a:	62 2f       	mov	r22, r18
    5a0c:	98 da       	rcall	.-2768   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    5a0e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a10:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a12:	69 ed       	ldi	r22, 0xD9	; 217
    5a14:	94 da       	rcall	.-2776   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    5a16:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a18:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a1a:	fc 01       	movw	r30, r24
    5a1c:	82 a1       	ldd	r24, Z+34	; 0x22
    5a1e:	81 30       	cpi	r24, 0x01	; 1
    5a20:	11 f4       	brne	.+4      	; 0x5a26 <_ZN16Adafruit_SSD13065beginEhhbb+0x67c>
    5a22:	22 e2       	ldi	r18, 0x22	; 34
    5a24:	01 c0       	rjmp	.+2      	; 0x5a28 <_ZN16Adafruit_SSD13065beginEhhbb+0x67e>
    5a26:	21 ef       	ldi	r18, 0xF1	; 241
    5a28:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a2a:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a2c:	62 2f       	mov	r22, r18
    5a2e:	87 da       	rcall	.-2802   	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    5a30:	26 e0       	ldi	r18, 0x06	; 6
    5a32:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a34:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a36:	42 2f       	mov	r20, r18
    5a38:	6c e8       	ldi	r22, 0x8C	; 140
    5a3a:	7d e0       	ldi	r23, 0x0D	; 13
    5a3c:	63 db       	rcall	.-2362   	; 0x5104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    5a3e:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a40:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a42:	fc 01       	movw	r30, r24
    5a44:	85 8d       	ldd	r24, Z+29	; 0x1d
    5a46:	96 8d       	ldd	r25, Z+30	; 0x1e
    5a48:	89 2b       	or	r24, r25
    5a4a:	91 f0       	breq	.+36     	; 0x5a70 <_ZN16Adafruit_SSD13065beginEhhbb+0x6c6>
    5a4c:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a4e:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a50:	fc 01       	movw	r30, r24
    5a52:	81 ad       	ldd	r24, Z+57	; 0x39
    5a54:	92 ad       	ldd	r25, Z+58	; 0x3a
    5a56:	a3 ad       	ldd	r26, Z+59	; 0x3b
    5a58:	b4 ad       	ldd	r27, Z+60	; 0x3c
    5a5a:	2a a5       	ldd	r18, Y+42	; 0x2a
    5a5c:	3b a5       	ldd	r19, Y+43	; 0x2b
    5a5e:	f9 01       	movw	r30, r18
    5a60:	25 8d       	ldd	r18, Z+29	; 0x1d
    5a62:	36 8d       	ldd	r19, Z+30	; 0x1e
    5a64:	ac 01       	movw	r20, r24
    5a66:	bd 01       	movw	r22, r26
    5a68:	c9 01       	movw	r24, r18
    5a6a:	0e 94 a4 3c 	call	0x7948	; 0x7948 <_ZN7TwoWire8setClockEm>
    5a6e:	1c c0       	rjmp	.+56     	; 0x5aa8 <_ZN16Adafruit_SSD13065beginEhhbb+0x6fe>
    5a70:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a72:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a74:	fc 01       	movw	r30, r24
    5a76:	87 a5       	ldd	r24, Z+47	; 0x2f
    5a78:	90 a9       	ldd	r25, Z+48	; 0x30
    5a7a:	2a a5       	ldd	r18, Y+42	; 0x2a
    5a7c:	3b a5       	ldd	r19, Y+43	; 0x2b
    5a7e:	f9 01       	movw	r30, r18
    5a80:	27 a5       	ldd	r18, Z+47	; 0x2f
    5a82:	30 a9       	ldd	r19, Z+48	; 0x30
    5a84:	f9 01       	movw	r30, r18
    5a86:	40 81       	ld	r20, Z
    5a88:	2a a5       	ldd	r18, Y+42	; 0x2a
    5a8a:	3b a5       	ldd	r19, Y+43	; 0x2b
    5a8c:	f9 01       	movw	r30, r18
    5a8e:	24 a9       	ldd	r18, Z+52	; 0x34
    5a90:	24 2b       	or	r18, r20
    5a92:	fc 01       	movw	r30, r24
    5a94:	20 83       	st	Z, r18
    5a96:	8a a5       	ldd	r24, Y+42	; 0x2a
    5a98:	9b a5       	ldd	r25, Y+43	; 0x2b
    5a9a:	fc 01       	movw	r30, r24
    5a9c:	83 8d       	ldd	r24, Z+27	; 0x1b
    5a9e:	94 8d       	ldd	r25, Z+28	; 0x1c
    5aa0:	89 2b       	or	r24, r25
    5aa2:	11 f0       	breq	.+4      	; 0x5aa8 <_ZN16Adafruit_SSD13065beginEhhbb+0x6fe>
    5aa4:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <_ZN8SPIClass14endTransactionEv>
    5aa8:	81 e0       	ldi	r24, 0x01	; 1
    5aaa:	af 96       	adiw	r28, 0x2f	; 47
    5aac:	0f b6       	in	r0, 0x3f	; 63
    5aae:	f8 94       	cli
    5ab0:	de bf       	out	0x3e, r29	; 62
    5ab2:	0f be       	out	0x3f, r0	; 63
    5ab4:	cd bf       	out	0x3d, r28	; 61
    5ab6:	df 91       	pop	r29
    5ab8:	cf 91       	pop	r28
    5aba:	1f 91       	pop	r17
    5abc:	0f 91       	pop	r16
    5abe:	ff 90       	pop	r15
    5ac0:	ef 90       	pop	r14
    5ac2:	df 90       	pop	r13
    5ac4:	cf 90       	pop	r12
    5ac6:	08 95       	ret

00005ac8 <_ZN16Adafruit_SSD13069drawPixelEiij>:
    5ac8:	cf 93       	push	r28
    5aca:	df 93       	push	r29
    5acc:	cd b7       	in	r28, 0x3d	; 61
    5ace:	de b7       	in	r29, 0x3e	; 62
    5ad0:	28 97       	sbiw	r28, 0x08	; 8
    5ad2:	0f b6       	in	r0, 0x3f	; 63
    5ad4:	f8 94       	cli
    5ad6:	de bf       	out	0x3e, r29	; 62
    5ad8:	0f be       	out	0x3f, r0	; 63
    5ada:	cd bf       	out	0x3d, r28	; 61
    5adc:	9a 83       	std	Y+2, r25	; 0x02
    5ade:	89 83       	std	Y+1, r24	; 0x01
    5ae0:	7c 83       	std	Y+4, r23	; 0x04
    5ae2:	6b 83       	std	Y+3, r22	; 0x03
    5ae4:	5e 83       	std	Y+6, r21	; 0x06
    5ae6:	4d 83       	std	Y+5, r20	; 0x05
    5ae8:	38 87       	std	Y+8, r19	; 0x08
    5aea:	2f 83       	std	Y+7, r18	; 0x07
    5aec:	8b 81       	ldd	r24, Y+3	; 0x03
    5aee:	9c 81       	ldd	r25, Y+4	; 0x04
    5af0:	99 23       	and	r25, r25
    5af2:	d4 f0       	brlt	.+52     	; 0x5b28 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    5af4:	89 81       	ldd	r24, Y+1	; 0x01
    5af6:	9a 81       	ldd	r25, Y+2	; 0x02
    5af8:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <_ZNK12Adafruit_GFX5widthEv>
    5afc:	9c 01       	movw	r18, r24
    5afe:	8b 81       	ldd	r24, Y+3	; 0x03
    5b00:	9c 81       	ldd	r25, Y+4	; 0x04
    5b02:	82 17       	cp	r24, r18
    5b04:	93 07       	cpc	r25, r19
    5b06:	84 f4       	brge	.+32     	; 0x5b28 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    5b08:	8d 81       	ldd	r24, Y+5	; 0x05
    5b0a:	9e 81       	ldd	r25, Y+6	; 0x06
    5b0c:	99 23       	and	r25, r25
    5b0e:	64 f0       	brlt	.+24     	; 0x5b28 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    5b10:	89 81       	ldd	r24, Y+1	; 0x01
    5b12:	9a 81       	ldd	r25, Y+2	; 0x02
    5b14:	0e 94 83 0b 	call	0x1706	; 0x1706 <_ZNK12Adafruit_GFX6heightEv>
    5b18:	9c 01       	movw	r18, r24
    5b1a:	8d 81       	ldd	r24, Y+5	; 0x05
    5b1c:	9e 81       	ldd	r25, Y+6	; 0x06
    5b1e:	82 17       	cp	r24, r18
    5b20:	93 07       	cpc	r25, r19
    5b22:	14 f4       	brge	.+4      	; 0x5b28 <_ZN16Adafruit_SSD13069drawPixelEiij+0x60>
    5b24:	81 e0       	ldi	r24, 0x01	; 1
    5b26:	01 c0       	rjmp	.+2      	; 0x5b2a <_ZN16Adafruit_SSD13069drawPixelEiij+0x62>
    5b28:	80 e0       	ldi	r24, 0x00	; 0
    5b2a:	88 23       	and	r24, r24
    5b2c:	09 f4       	brne	.+2      	; 0x5b30 <_ZN16Adafruit_SSD13069drawPixelEiij+0x68>
    5b2e:	83 c1       	rjmp	.+774    	; 0x5e36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    5b30:	89 81       	ldd	r24, Y+1	; 0x01
    5b32:	9a 81       	ldd	r25, Y+2	; 0x02
    5b34:	0e 94 bf 19 	call	0x337e	; 0x337e <_ZNK12Adafruit_GFX11getRotationEv>
    5b38:	88 2f       	mov	r24, r24
    5b3a:	90 e0       	ldi	r25, 0x00	; 0
    5b3c:	82 30       	cpi	r24, 0x02	; 2
    5b3e:	91 05       	cpc	r25, r1
    5b40:	81 f1       	breq	.+96     	; 0x5ba2 <_ZN16Adafruit_SSD13069drawPixelEiij+0xda>
    5b42:	83 30       	cpi	r24, 0x03	; 3
    5b44:	91 05       	cpc	r25, r1
    5b46:	09 f4       	brne	.+2      	; 0x5b4a <_ZN16Adafruit_SSD13069drawPixelEiij+0x82>
    5b48:	4d c0       	rjmp	.+154    	; 0x5be4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x11c>
    5b4a:	01 97       	sbiw	r24, 0x01	; 1
    5b4c:	09 f0       	breq	.+2      	; 0x5b50 <_ZN16Adafruit_SSD13069drawPixelEiij+0x88>
    5b4e:	73 c0       	rjmp	.+230    	; 0x5c36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    5b50:	2b 81       	ldd	r18, Y+3	; 0x03
    5b52:	3c 81       	ldd	r19, Y+4	; 0x04
    5b54:	8d 81       	ldd	r24, Y+5	; 0x05
    5b56:	9e 81       	ldd	r25, Y+6	; 0x06
    5b58:	82 27       	eor	r24, r18
    5b5a:	93 27       	eor	r25, r19
    5b5c:	9c 83       	std	Y+4, r25	; 0x04
    5b5e:	8b 83       	std	Y+3, r24	; 0x03
    5b60:	2d 81       	ldd	r18, Y+5	; 0x05
    5b62:	3e 81       	ldd	r19, Y+6	; 0x06
    5b64:	8b 81       	ldd	r24, Y+3	; 0x03
    5b66:	9c 81       	ldd	r25, Y+4	; 0x04
    5b68:	82 27       	eor	r24, r18
    5b6a:	93 27       	eor	r25, r19
    5b6c:	9e 83       	std	Y+6, r25	; 0x06
    5b6e:	8d 83       	std	Y+5, r24	; 0x05
    5b70:	2b 81       	ldd	r18, Y+3	; 0x03
    5b72:	3c 81       	ldd	r19, Y+4	; 0x04
    5b74:	8d 81       	ldd	r24, Y+5	; 0x05
    5b76:	9e 81       	ldd	r25, Y+6	; 0x06
    5b78:	82 27       	eor	r24, r18
    5b7a:	93 27       	eor	r25, r19
    5b7c:	9c 83       	std	Y+4, r25	; 0x04
    5b7e:	8b 83       	std	Y+3, r24	; 0x03
    5b80:	89 81       	ldd	r24, Y+1	; 0x01
    5b82:	9a 81       	ldd	r25, Y+2	; 0x02
    5b84:	dc 01       	movw	r26, r24
    5b86:	14 96       	adiw	r26, 0x04	; 4
    5b88:	2d 91       	ld	r18, X+
    5b8a:	3c 91       	ld	r19, X
    5b8c:	15 97       	sbiw	r26, 0x05	; 5
    5b8e:	8b 81       	ldd	r24, Y+3	; 0x03
    5b90:	9c 81       	ldd	r25, Y+4	; 0x04
    5b92:	f9 01       	movw	r30, r18
    5b94:	e8 1b       	sub	r30, r24
    5b96:	f9 0b       	sbc	r31, r25
    5b98:	cf 01       	movw	r24, r30
    5b9a:	01 97       	sbiw	r24, 0x01	; 1
    5b9c:	9c 83       	std	Y+4, r25	; 0x04
    5b9e:	8b 83       	std	Y+3, r24	; 0x03
    5ba0:	4a c0       	rjmp	.+148    	; 0x5c36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    5ba2:	89 81       	ldd	r24, Y+1	; 0x01
    5ba4:	9a 81       	ldd	r25, Y+2	; 0x02
    5ba6:	dc 01       	movw	r26, r24
    5ba8:	14 96       	adiw	r26, 0x04	; 4
    5baa:	2d 91       	ld	r18, X+
    5bac:	3c 91       	ld	r19, X
    5bae:	15 97       	sbiw	r26, 0x05	; 5
    5bb0:	8b 81       	ldd	r24, Y+3	; 0x03
    5bb2:	9c 81       	ldd	r25, Y+4	; 0x04
    5bb4:	f9 01       	movw	r30, r18
    5bb6:	e8 1b       	sub	r30, r24
    5bb8:	f9 0b       	sbc	r31, r25
    5bba:	cf 01       	movw	r24, r30
    5bbc:	01 97       	sbiw	r24, 0x01	; 1
    5bbe:	9c 83       	std	Y+4, r25	; 0x04
    5bc0:	8b 83       	std	Y+3, r24	; 0x03
    5bc2:	89 81       	ldd	r24, Y+1	; 0x01
    5bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    5bc6:	dc 01       	movw	r26, r24
    5bc8:	16 96       	adiw	r26, 0x06	; 6
    5bca:	2d 91       	ld	r18, X+
    5bcc:	3c 91       	ld	r19, X
    5bce:	17 97       	sbiw	r26, 0x07	; 7
    5bd0:	8d 81       	ldd	r24, Y+5	; 0x05
    5bd2:	9e 81       	ldd	r25, Y+6	; 0x06
    5bd4:	f9 01       	movw	r30, r18
    5bd6:	e8 1b       	sub	r30, r24
    5bd8:	f9 0b       	sbc	r31, r25
    5bda:	cf 01       	movw	r24, r30
    5bdc:	01 97       	sbiw	r24, 0x01	; 1
    5bde:	9e 83       	std	Y+6, r25	; 0x06
    5be0:	8d 83       	std	Y+5, r24	; 0x05
    5be2:	29 c0       	rjmp	.+82     	; 0x5c36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x16e>
    5be4:	2b 81       	ldd	r18, Y+3	; 0x03
    5be6:	3c 81       	ldd	r19, Y+4	; 0x04
    5be8:	8d 81       	ldd	r24, Y+5	; 0x05
    5bea:	9e 81       	ldd	r25, Y+6	; 0x06
    5bec:	82 27       	eor	r24, r18
    5bee:	93 27       	eor	r25, r19
    5bf0:	9c 83       	std	Y+4, r25	; 0x04
    5bf2:	8b 83       	std	Y+3, r24	; 0x03
    5bf4:	2d 81       	ldd	r18, Y+5	; 0x05
    5bf6:	3e 81       	ldd	r19, Y+6	; 0x06
    5bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    5bfa:	9c 81       	ldd	r25, Y+4	; 0x04
    5bfc:	82 27       	eor	r24, r18
    5bfe:	93 27       	eor	r25, r19
    5c00:	9e 83       	std	Y+6, r25	; 0x06
    5c02:	8d 83       	std	Y+5, r24	; 0x05
    5c04:	2b 81       	ldd	r18, Y+3	; 0x03
    5c06:	3c 81       	ldd	r19, Y+4	; 0x04
    5c08:	8d 81       	ldd	r24, Y+5	; 0x05
    5c0a:	9e 81       	ldd	r25, Y+6	; 0x06
    5c0c:	82 27       	eor	r24, r18
    5c0e:	93 27       	eor	r25, r19
    5c10:	9c 83       	std	Y+4, r25	; 0x04
    5c12:	8b 83       	std	Y+3, r24	; 0x03
    5c14:	89 81       	ldd	r24, Y+1	; 0x01
    5c16:	9a 81       	ldd	r25, Y+2	; 0x02
    5c18:	dc 01       	movw	r26, r24
    5c1a:	16 96       	adiw	r26, 0x06	; 6
    5c1c:	2d 91       	ld	r18, X+
    5c1e:	3c 91       	ld	r19, X
    5c20:	17 97       	sbiw	r26, 0x07	; 7
    5c22:	8d 81       	ldd	r24, Y+5	; 0x05
    5c24:	9e 81       	ldd	r25, Y+6	; 0x06
    5c26:	f9 01       	movw	r30, r18
    5c28:	e8 1b       	sub	r30, r24
    5c2a:	f9 0b       	sbc	r31, r25
    5c2c:	cf 01       	movw	r24, r30
    5c2e:	01 97       	sbiw	r24, 0x01	; 1
    5c30:	9e 83       	std	Y+6, r25	; 0x06
    5c32:	8d 83       	std	Y+5, r24	; 0x05
    5c34:	00 00       	nop
    5c36:	8f 81       	ldd	r24, Y+7	; 0x07
    5c38:	98 85       	ldd	r25, Y+8	; 0x08
    5c3a:	81 30       	cpi	r24, 0x01	; 1
    5c3c:	91 05       	cpc	r25, r1
    5c3e:	41 f0       	breq	.+16     	; 0x5c50 <_ZN16Adafruit_SSD13069drawPixelEiij+0x188>
    5c40:	81 30       	cpi	r24, 0x01	; 1
    5c42:	91 05       	cpc	r25, r1
    5c44:	08 f4       	brcc	.+2      	; 0x5c48 <_ZN16Adafruit_SSD13069drawPixelEiij+0x180>
    5c46:	56 c0       	rjmp	.+172    	; 0x5cf4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x22c>
    5c48:	02 97       	sbiw	r24, 0x02	; 2
    5c4a:	09 f4       	brne	.+2      	; 0x5c4e <_ZN16Adafruit_SSD13069drawPixelEiij+0x186>
    5c4c:	a4 c0       	rjmp	.+328    	; 0x5d96 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2ce>
    5c4e:	f3 c0       	rjmp	.+486    	; 0x5e36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    5c50:	89 81       	ldd	r24, Y+1	; 0x01
    5c52:	9a 81       	ldd	r25, Y+2	; 0x02
    5c54:	dc 01       	movw	r26, r24
    5c56:	5f 96       	adiw	r26, 0x1f	; 31
    5c58:	2d 91       	ld	r18, X+
    5c5a:	3c 91       	ld	r19, X
    5c5c:	90 97       	sbiw	r26, 0x20	; 32
    5c5e:	8d 81       	ldd	r24, Y+5	; 0x05
    5c60:	9e 81       	ldd	r25, Y+6	; 0x06
    5c62:	99 23       	and	r25, r25
    5c64:	0c f4       	brge	.+2      	; 0x5c68 <_ZN16Adafruit_SSD13069drawPixelEiij+0x1a0>
    5c66:	07 96       	adiw	r24, 0x07	; 7
    5c68:	95 95       	asr	r25
    5c6a:	87 95       	ror	r24
    5c6c:	95 95       	asr	r25
    5c6e:	87 95       	ror	r24
    5c70:	95 95       	asr	r25
    5c72:	87 95       	ror	r24
    5c74:	49 81       	ldd	r20, Y+1	; 0x01
    5c76:	5a 81       	ldd	r21, Y+2	; 0x02
    5c78:	fa 01       	movw	r30, r20
    5c7a:	44 81       	ldd	r20, Z+4	; 0x04
    5c7c:	55 81       	ldd	r21, Z+5	; 0x05
    5c7e:	84 9f       	mul	r24, r20
    5c80:	b0 01       	movw	r22, r0
    5c82:	85 9f       	mul	r24, r21
    5c84:	70 0d       	add	r23, r0
    5c86:	94 9f       	mul	r25, r20
    5c88:	70 0d       	add	r23, r0
    5c8a:	11 24       	eor	r1, r1
    5c8c:	4b 81       	ldd	r20, Y+3	; 0x03
    5c8e:	5c 81       	ldd	r21, Y+4	; 0x04
    5c90:	46 0f       	add	r20, r22
    5c92:	57 1f       	adc	r21, r23
    5c94:	24 0f       	add	r18, r20
    5c96:	35 1f       	adc	r19, r21
    5c98:	49 81       	ldd	r20, Y+1	; 0x01
    5c9a:	5a 81       	ldd	r21, Y+2	; 0x02
    5c9c:	da 01       	movw	r26, r20
    5c9e:	5f 96       	adiw	r26, 0x1f	; 31
    5ca0:	4d 91       	ld	r20, X+
    5ca2:	5c 91       	ld	r21, X
    5ca4:	90 97       	sbiw	r26, 0x20	; 32
    5ca6:	69 81       	ldd	r22, Y+1	; 0x01
    5ca8:	7a 81       	ldd	r23, Y+2	; 0x02
    5caa:	db 01       	movw	r26, r22
    5cac:	14 96       	adiw	r26, 0x04	; 4
    5cae:	ed 91       	ld	r30, X+
    5cb0:	fc 91       	ld	r31, X
    5cb2:	15 97       	sbiw	r26, 0x05	; 5
    5cb4:	8e 9f       	mul	r24, r30
    5cb6:	b0 01       	movw	r22, r0
    5cb8:	8f 9f       	mul	r24, r31
    5cba:	70 0d       	add	r23, r0
    5cbc:	9e 9f       	mul	r25, r30
    5cbe:	70 0d       	add	r23, r0
    5cc0:	11 24       	eor	r1, r1
    5cc2:	8b 81       	ldd	r24, Y+3	; 0x03
    5cc4:	9c 81       	ldd	r25, Y+4	; 0x04
    5cc6:	86 0f       	add	r24, r22
    5cc8:	97 1f       	adc	r25, r23
    5cca:	84 0f       	add	r24, r20
    5ccc:	95 1f       	adc	r25, r21
    5cce:	fc 01       	movw	r30, r24
    5cd0:	80 81       	ld	r24, Z
    5cd2:	68 2f       	mov	r22, r24
    5cd4:	8d 81       	ldd	r24, Y+5	; 0x05
    5cd6:	9e 81       	ldd	r25, Y+6	; 0x06
    5cd8:	ac 01       	movw	r20, r24
    5cda:	47 70       	andi	r20, 0x07	; 7
    5cdc:	55 27       	eor	r21, r21
    5cde:	81 e0       	ldi	r24, 0x01	; 1
    5ce0:	90 e0       	ldi	r25, 0x00	; 0
    5ce2:	02 c0       	rjmp	.+4      	; 0x5ce8 <_ZN16Adafruit_SSD13069drawPixelEiij+0x220>
    5ce4:	88 0f       	add	r24, r24
    5ce6:	99 1f       	adc	r25, r25
    5ce8:	4a 95       	dec	r20
    5cea:	e2 f7       	brpl	.-8      	; 0x5ce4 <_ZN16Adafruit_SSD13069drawPixelEiij+0x21c>
    5cec:	86 2b       	or	r24, r22
    5cee:	d9 01       	movw	r26, r18
    5cf0:	8c 93       	st	X, r24
    5cf2:	a1 c0       	rjmp	.+322    	; 0x5e36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    5cf4:	89 81       	ldd	r24, Y+1	; 0x01
    5cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cf8:	fc 01       	movw	r30, r24
    5cfa:	27 8d       	ldd	r18, Z+31	; 0x1f
    5cfc:	30 a1       	ldd	r19, Z+32	; 0x20
    5cfe:	8d 81       	ldd	r24, Y+5	; 0x05
    5d00:	9e 81       	ldd	r25, Y+6	; 0x06
    5d02:	99 23       	and	r25, r25
    5d04:	0c f4       	brge	.+2      	; 0x5d08 <_ZN16Adafruit_SSD13069drawPixelEiij+0x240>
    5d06:	07 96       	adiw	r24, 0x07	; 7
    5d08:	95 95       	asr	r25
    5d0a:	87 95       	ror	r24
    5d0c:	95 95       	asr	r25
    5d0e:	87 95       	ror	r24
    5d10:	95 95       	asr	r25
    5d12:	87 95       	ror	r24
    5d14:	49 81       	ldd	r20, Y+1	; 0x01
    5d16:	5a 81       	ldd	r21, Y+2	; 0x02
    5d18:	da 01       	movw	r26, r20
    5d1a:	14 96       	adiw	r26, 0x04	; 4
    5d1c:	4d 91       	ld	r20, X+
    5d1e:	5c 91       	ld	r21, X
    5d20:	15 97       	sbiw	r26, 0x05	; 5
    5d22:	84 9f       	mul	r24, r20
    5d24:	b0 01       	movw	r22, r0
    5d26:	85 9f       	mul	r24, r21
    5d28:	70 0d       	add	r23, r0
    5d2a:	94 9f       	mul	r25, r20
    5d2c:	70 0d       	add	r23, r0
    5d2e:	11 24       	eor	r1, r1
    5d30:	4b 81       	ldd	r20, Y+3	; 0x03
    5d32:	5c 81       	ldd	r21, Y+4	; 0x04
    5d34:	46 0f       	add	r20, r22
    5d36:	57 1f       	adc	r21, r23
    5d38:	24 0f       	add	r18, r20
    5d3a:	35 1f       	adc	r19, r21
    5d3c:	49 81       	ldd	r20, Y+1	; 0x01
    5d3e:	5a 81       	ldd	r21, Y+2	; 0x02
    5d40:	fa 01       	movw	r30, r20
    5d42:	47 8d       	ldd	r20, Z+31	; 0x1f
    5d44:	50 a1       	ldd	r21, Z+32	; 0x20
    5d46:	69 81       	ldd	r22, Y+1	; 0x01
    5d48:	7a 81       	ldd	r23, Y+2	; 0x02
    5d4a:	db 01       	movw	r26, r22
    5d4c:	14 96       	adiw	r26, 0x04	; 4
    5d4e:	ed 91       	ld	r30, X+
    5d50:	fc 91       	ld	r31, X
    5d52:	15 97       	sbiw	r26, 0x05	; 5
    5d54:	8e 9f       	mul	r24, r30
    5d56:	b0 01       	movw	r22, r0
    5d58:	8f 9f       	mul	r24, r31
    5d5a:	70 0d       	add	r23, r0
    5d5c:	9e 9f       	mul	r25, r30
    5d5e:	70 0d       	add	r23, r0
    5d60:	11 24       	eor	r1, r1
    5d62:	8b 81       	ldd	r24, Y+3	; 0x03
    5d64:	9c 81       	ldd	r25, Y+4	; 0x04
    5d66:	86 0f       	add	r24, r22
    5d68:	97 1f       	adc	r25, r23
    5d6a:	84 0f       	add	r24, r20
    5d6c:	95 1f       	adc	r25, r21
    5d6e:	fc 01       	movw	r30, r24
    5d70:	80 81       	ld	r24, Z
    5d72:	68 2f       	mov	r22, r24
    5d74:	8d 81       	ldd	r24, Y+5	; 0x05
    5d76:	9e 81       	ldd	r25, Y+6	; 0x06
    5d78:	ac 01       	movw	r20, r24
    5d7a:	47 70       	andi	r20, 0x07	; 7
    5d7c:	55 27       	eor	r21, r21
    5d7e:	81 e0       	ldi	r24, 0x01	; 1
    5d80:	90 e0       	ldi	r25, 0x00	; 0
    5d82:	02 c0       	rjmp	.+4      	; 0x5d88 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2c0>
    5d84:	88 0f       	add	r24, r24
    5d86:	99 1f       	adc	r25, r25
    5d88:	4a 95       	dec	r20
    5d8a:	e2 f7       	brpl	.-8      	; 0x5d84 <_ZN16Adafruit_SSD13069drawPixelEiij+0x2bc>
    5d8c:	80 95       	com	r24
    5d8e:	86 23       	and	r24, r22
    5d90:	d9 01       	movw	r26, r18
    5d92:	8c 93       	st	X, r24
    5d94:	50 c0       	rjmp	.+160    	; 0x5e36 <_ZN16Adafruit_SSD13069drawPixelEiij+0x36e>
    5d96:	89 81       	ldd	r24, Y+1	; 0x01
    5d98:	9a 81       	ldd	r25, Y+2	; 0x02
    5d9a:	fc 01       	movw	r30, r24
    5d9c:	27 8d       	ldd	r18, Z+31	; 0x1f
    5d9e:	30 a1       	ldd	r19, Z+32	; 0x20
    5da0:	8d 81       	ldd	r24, Y+5	; 0x05
    5da2:	9e 81       	ldd	r25, Y+6	; 0x06
    5da4:	99 23       	and	r25, r25
    5da6:	0c f4       	brge	.+2      	; 0x5daa <_ZN16Adafruit_SSD13069drawPixelEiij+0x2e2>
    5da8:	07 96       	adiw	r24, 0x07	; 7
    5daa:	95 95       	asr	r25
    5dac:	87 95       	ror	r24
    5dae:	95 95       	asr	r25
    5db0:	87 95       	ror	r24
    5db2:	95 95       	asr	r25
    5db4:	87 95       	ror	r24
    5db6:	49 81       	ldd	r20, Y+1	; 0x01
    5db8:	5a 81       	ldd	r21, Y+2	; 0x02
    5dba:	da 01       	movw	r26, r20
    5dbc:	14 96       	adiw	r26, 0x04	; 4
    5dbe:	4d 91       	ld	r20, X+
    5dc0:	5c 91       	ld	r21, X
    5dc2:	15 97       	sbiw	r26, 0x05	; 5
    5dc4:	84 9f       	mul	r24, r20
    5dc6:	b0 01       	movw	r22, r0
    5dc8:	85 9f       	mul	r24, r21
    5dca:	70 0d       	add	r23, r0
    5dcc:	94 9f       	mul	r25, r20
    5dce:	70 0d       	add	r23, r0
    5dd0:	11 24       	eor	r1, r1
    5dd2:	4b 81       	ldd	r20, Y+3	; 0x03
    5dd4:	5c 81       	ldd	r21, Y+4	; 0x04
    5dd6:	46 0f       	add	r20, r22
    5dd8:	57 1f       	adc	r21, r23
    5dda:	24 0f       	add	r18, r20
    5ddc:	35 1f       	adc	r19, r21
    5dde:	49 81       	ldd	r20, Y+1	; 0x01
    5de0:	5a 81       	ldd	r21, Y+2	; 0x02
    5de2:	fa 01       	movw	r30, r20
    5de4:	47 8d       	ldd	r20, Z+31	; 0x1f
    5de6:	50 a1       	ldd	r21, Z+32	; 0x20
    5de8:	69 81       	ldd	r22, Y+1	; 0x01
    5dea:	7a 81       	ldd	r23, Y+2	; 0x02
    5dec:	db 01       	movw	r26, r22
    5dee:	14 96       	adiw	r26, 0x04	; 4
    5df0:	ed 91       	ld	r30, X+
    5df2:	fc 91       	ld	r31, X
    5df4:	15 97       	sbiw	r26, 0x05	; 5
    5df6:	8e 9f       	mul	r24, r30
    5df8:	b0 01       	movw	r22, r0
    5dfa:	8f 9f       	mul	r24, r31
    5dfc:	70 0d       	add	r23, r0
    5dfe:	9e 9f       	mul	r25, r30
    5e00:	70 0d       	add	r23, r0
    5e02:	11 24       	eor	r1, r1
    5e04:	8b 81       	ldd	r24, Y+3	; 0x03
    5e06:	9c 81       	ldd	r25, Y+4	; 0x04
    5e08:	86 0f       	add	r24, r22
    5e0a:	97 1f       	adc	r25, r23
    5e0c:	84 0f       	add	r24, r20
    5e0e:	95 1f       	adc	r25, r21
    5e10:	fc 01       	movw	r30, r24
    5e12:	80 81       	ld	r24, Z
    5e14:	68 2f       	mov	r22, r24
    5e16:	8d 81       	ldd	r24, Y+5	; 0x05
    5e18:	9e 81       	ldd	r25, Y+6	; 0x06
    5e1a:	ac 01       	movw	r20, r24
    5e1c:	47 70       	andi	r20, 0x07	; 7
    5e1e:	55 27       	eor	r21, r21
    5e20:	81 e0       	ldi	r24, 0x01	; 1
    5e22:	90 e0       	ldi	r25, 0x00	; 0
    5e24:	02 c0       	rjmp	.+4      	; 0x5e2a <_ZN16Adafruit_SSD13069drawPixelEiij+0x362>
    5e26:	88 0f       	add	r24, r24
    5e28:	99 1f       	adc	r25, r25
    5e2a:	4a 95       	dec	r20
    5e2c:	e2 f7       	brpl	.-8      	; 0x5e26 <_ZN16Adafruit_SSD13069drawPixelEiij+0x35e>
    5e2e:	86 27       	eor	r24, r22
    5e30:	d9 01       	movw	r26, r18
    5e32:	8c 93       	st	X, r24
    5e34:	00 00       	nop
    5e36:	00 00       	nop
    5e38:	28 96       	adiw	r28, 0x08	; 8
    5e3a:	0f b6       	in	r0, 0x3f	; 63
    5e3c:	f8 94       	cli
    5e3e:	de bf       	out	0x3e, r29	; 62
    5e40:	0f be       	out	0x3f, r0	; 63
    5e42:	cd bf       	out	0x3d, r28	; 61
    5e44:	df 91       	pop	r29
    5e46:	cf 91       	pop	r28
    5e48:	08 95       	ret

00005e4a <_ZN16Adafruit_SSD130612clearDisplayEv>:
    5e4a:	cf 93       	push	r28
    5e4c:	df 93       	push	r29
    5e4e:	1f 92       	push	r1
    5e50:	1f 92       	push	r1
    5e52:	cd b7       	in	r28, 0x3d	; 61
    5e54:	de b7       	in	r29, 0x3e	; 62
    5e56:	9a 83       	std	Y+2, r25	; 0x02
    5e58:	89 83       	std	Y+1, r24	; 0x01
    5e5a:	89 81       	ldd	r24, Y+1	; 0x01
    5e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e5e:	fc 01       	movw	r30, r24
    5e60:	24 81       	ldd	r18, Z+4	; 0x04
    5e62:	35 81       	ldd	r19, Z+5	; 0x05
    5e64:	89 81       	ldd	r24, Y+1	; 0x01
    5e66:	9a 81       	ldd	r25, Y+2	; 0x02
    5e68:	fc 01       	movw	r30, r24
    5e6a:	86 81       	ldd	r24, Z+6	; 0x06
    5e6c:	97 81       	ldd	r25, Z+7	; 0x07
    5e6e:	07 96       	adiw	r24, 0x07	; 7
    5e70:	99 23       	and	r25, r25
    5e72:	0c f4       	brge	.+2      	; 0x5e76 <_ZN16Adafruit_SSD130612clearDisplayEv+0x2c>
    5e74:	07 96       	adiw	r24, 0x07	; 7
    5e76:	95 95       	asr	r25
    5e78:	87 95       	ror	r24
    5e7a:	95 95       	asr	r25
    5e7c:	87 95       	ror	r24
    5e7e:	95 95       	asr	r25
    5e80:	87 95       	ror	r24
    5e82:	ac 01       	movw	r20, r24
    5e84:	24 9f       	mul	r18, r20
    5e86:	c0 01       	movw	r24, r0
    5e88:	25 9f       	mul	r18, r21
    5e8a:	90 0d       	add	r25, r0
    5e8c:	34 9f       	mul	r19, r20
    5e8e:	90 0d       	add	r25, r0
    5e90:	11 24       	eor	r1, r1
    5e92:	9c 01       	movw	r18, r24
    5e94:	89 81       	ldd	r24, Y+1	; 0x01
    5e96:	9a 81       	ldd	r25, Y+2	; 0x02
    5e98:	fc 01       	movw	r30, r24
    5e9a:	87 8d       	ldd	r24, Z+31	; 0x1f
    5e9c:	90 a1       	ldd	r25, Z+32	; 0x20
    5e9e:	a9 01       	movw	r20, r18
    5ea0:	60 e0       	ldi	r22, 0x00	; 0
    5ea2:	70 e0       	ldi	r23, 0x00	; 0
    5ea4:	0e 94 8a 4e 	call	0x9d14	; 0x9d14 <memset>
    5ea8:	00 00       	nop
    5eaa:	0f 90       	pop	r0
    5eac:	0f 90       	pop	r0
    5eae:	df 91       	pop	r29
    5eb0:	cf 91       	pop	r28
    5eb2:	08 95       	ret

00005eb4 <_ZN16Adafruit_SSD130613drawFastHLineEiiij>:
    5eb4:	0f 93       	push	r16
    5eb6:	1f 93       	push	r17
    5eb8:	cf 93       	push	r28
    5eba:	df 93       	push	r29
    5ebc:	cd b7       	in	r28, 0x3d	; 61
    5ebe:	de b7       	in	r29, 0x3e	; 62
    5ec0:	2b 97       	sbiw	r28, 0x0b	; 11
    5ec2:	0f b6       	in	r0, 0x3f	; 63
    5ec4:	f8 94       	cli
    5ec6:	de bf       	out	0x3e, r29	; 62
    5ec8:	0f be       	out	0x3f, r0	; 63
    5eca:	cd bf       	out	0x3d, r28	; 61
    5ecc:	9b 83       	std	Y+3, r25	; 0x03
    5ece:	8a 83       	std	Y+2, r24	; 0x02
    5ed0:	7d 83       	std	Y+5, r23	; 0x05
    5ed2:	6c 83       	std	Y+4, r22	; 0x04
    5ed4:	5f 83       	std	Y+7, r21	; 0x07
    5ed6:	4e 83       	std	Y+6, r20	; 0x06
    5ed8:	39 87       	std	Y+9, r19	; 0x09
    5eda:	28 87       	std	Y+8, r18	; 0x08
    5edc:	1b 87       	std	Y+11, r17	; 0x0b
    5ede:	0a 87       	std	Y+10, r16	; 0x0a
    5ee0:	19 82       	std	Y+1, r1	; 0x01
    5ee2:	8a 81       	ldd	r24, Y+2	; 0x02
    5ee4:	9b 81       	ldd	r25, Y+3	; 0x03
    5ee6:	fc 01       	movw	r30, r24
    5ee8:	86 89       	ldd	r24, Z+22	; 0x16
    5eea:	88 2f       	mov	r24, r24
    5eec:	90 e0       	ldi	r25, 0x00	; 0
    5eee:	82 30       	cpi	r24, 0x02	; 2
    5ef0:	91 05       	cpc	r25, r1
    5ef2:	81 f1       	breq	.+96     	; 0x5f54 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0xa0>
    5ef4:	83 30       	cpi	r24, 0x03	; 3
    5ef6:	91 05       	cpc	r25, r1
    5ef8:	09 f4       	brne	.+2      	; 0x5efc <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x48>
    5efa:	54 c0       	rjmp	.+168    	; 0x5fa4 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0xf0>
    5efc:	01 97       	sbiw	r24, 0x01	; 1
    5efe:	09 f0       	breq	.+2      	; 0x5f02 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x4e>
    5f00:	85 c0       	rjmp	.+266    	; 0x600c <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    5f02:	81 e0       	ldi	r24, 0x01	; 1
    5f04:	89 83       	std	Y+1, r24	; 0x01
    5f06:	2c 81       	ldd	r18, Y+4	; 0x04
    5f08:	3d 81       	ldd	r19, Y+5	; 0x05
    5f0a:	8e 81       	ldd	r24, Y+6	; 0x06
    5f0c:	9f 81       	ldd	r25, Y+7	; 0x07
    5f0e:	82 27       	eor	r24, r18
    5f10:	93 27       	eor	r25, r19
    5f12:	9d 83       	std	Y+5, r25	; 0x05
    5f14:	8c 83       	std	Y+4, r24	; 0x04
    5f16:	2e 81       	ldd	r18, Y+6	; 0x06
    5f18:	3f 81       	ldd	r19, Y+7	; 0x07
    5f1a:	8c 81       	ldd	r24, Y+4	; 0x04
    5f1c:	9d 81       	ldd	r25, Y+5	; 0x05
    5f1e:	82 27       	eor	r24, r18
    5f20:	93 27       	eor	r25, r19
    5f22:	9f 83       	std	Y+7, r25	; 0x07
    5f24:	8e 83       	std	Y+6, r24	; 0x06
    5f26:	2c 81       	ldd	r18, Y+4	; 0x04
    5f28:	3d 81       	ldd	r19, Y+5	; 0x05
    5f2a:	8e 81       	ldd	r24, Y+6	; 0x06
    5f2c:	9f 81       	ldd	r25, Y+7	; 0x07
    5f2e:	82 27       	eor	r24, r18
    5f30:	93 27       	eor	r25, r19
    5f32:	9d 83       	std	Y+5, r25	; 0x05
    5f34:	8c 83       	std	Y+4, r24	; 0x04
    5f36:	8a 81       	ldd	r24, Y+2	; 0x02
    5f38:	9b 81       	ldd	r25, Y+3	; 0x03
    5f3a:	fc 01       	movw	r30, r24
    5f3c:	24 81       	ldd	r18, Z+4	; 0x04
    5f3e:	35 81       	ldd	r19, Z+5	; 0x05
    5f40:	8c 81       	ldd	r24, Y+4	; 0x04
    5f42:	9d 81       	ldd	r25, Y+5	; 0x05
    5f44:	a9 01       	movw	r20, r18
    5f46:	48 1b       	sub	r20, r24
    5f48:	59 0b       	sbc	r21, r25
    5f4a:	ca 01       	movw	r24, r20
    5f4c:	01 97       	sbiw	r24, 0x01	; 1
    5f4e:	9d 83       	std	Y+5, r25	; 0x05
    5f50:	8c 83       	std	Y+4, r24	; 0x04
    5f52:	5c c0       	rjmp	.+184    	; 0x600c <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    5f54:	8a 81       	ldd	r24, Y+2	; 0x02
    5f56:	9b 81       	ldd	r25, Y+3	; 0x03
    5f58:	fc 01       	movw	r30, r24
    5f5a:	24 81       	ldd	r18, Z+4	; 0x04
    5f5c:	35 81       	ldd	r19, Z+5	; 0x05
    5f5e:	8c 81       	ldd	r24, Y+4	; 0x04
    5f60:	9d 81       	ldd	r25, Y+5	; 0x05
    5f62:	a9 01       	movw	r20, r18
    5f64:	48 1b       	sub	r20, r24
    5f66:	59 0b       	sbc	r21, r25
    5f68:	ca 01       	movw	r24, r20
    5f6a:	01 97       	sbiw	r24, 0x01	; 1
    5f6c:	9d 83       	std	Y+5, r25	; 0x05
    5f6e:	8c 83       	std	Y+4, r24	; 0x04
    5f70:	8a 81       	ldd	r24, Y+2	; 0x02
    5f72:	9b 81       	ldd	r25, Y+3	; 0x03
    5f74:	fc 01       	movw	r30, r24
    5f76:	26 81       	ldd	r18, Z+6	; 0x06
    5f78:	37 81       	ldd	r19, Z+7	; 0x07
    5f7a:	8e 81       	ldd	r24, Y+6	; 0x06
    5f7c:	9f 81       	ldd	r25, Y+7	; 0x07
    5f7e:	a9 01       	movw	r20, r18
    5f80:	48 1b       	sub	r20, r24
    5f82:	59 0b       	sbc	r21, r25
    5f84:	ca 01       	movw	r24, r20
    5f86:	01 97       	sbiw	r24, 0x01	; 1
    5f88:	9f 83       	std	Y+7, r25	; 0x07
    5f8a:	8e 83       	std	Y+6, r24	; 0x06
    5f8c:	88 85       	ldd	r24, Y+8	; 0x08
    5f8e:	99 85       	ldd	r25, Y+9	; 0x09
    5f90:	01 97       	sbiw	r24, 0x01	; 1
    5f92:	2c 81       	ldd	r18, Y+4	; 0x04
    5f94:	3d 81       	ldd	r19, Y+5	; 0x05
    5f96:	f9 01       	movw	r30, r18
    5f98:	e8 1b       	sub	r30, r24
    5f9a:	f9 0b       	sbc	r31, r25
    5f9c:	cf 01       	movw	r24, r30
    5f9e:	9d 83       	std	Y+5, r25	; 0x05
    5fa0:	8c 83       	std	Y+4, r24	; 0x04
    5fa2:	34 c0       	rjmp	.+104    	; 0x600c <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x158>
    5fa4:	81 e0       	ldi	r24, 0x01	; 1
    5fa6:	89 83       	std	Y+1, r24	; 0x01
    5fa8:	2c 81       	ldd	r18, Y+4	; 0x04
    5faa:	3d 81       	ldd	r19, Y+5	; 0x05
    5fac:	8e 81       	ldd	r24, Y+6	; 0x06
    5fae:	9f 81       	ldd	r25, Y+7	; 0x07
    5fb0:	82 27       	eor	r24, r18
    5fb2:	93 27       	eor	r25, r19
    5fb4:	9d 83       	std	Y+5, r25	; 0x05
    5fb6:	8c 83       	std	Y+4, r24	; 0x04
    5fb8:	2e 81       	ldd	r18, Y+6	; 0x06
    5fba:	3f 81       	ldd	r19, Y+7	; 0x07
    5fbc:	8c 81       	ldd	r24, Y+4	; 0x04
    5fbe:	9d 81       	ldd	r25, Y+5	; 0x05
    5fc0:	82 27       	eor	r24, r18
    5fc2:	93 27       	eor	r25, r19
    5fc4:	9f 83       	std	Y+7, r25	; 0x07
    5fc6:	8e 83       	std	Y+6, r24	; 0x06
    5fc8:	2c 81       	ldd	r18, Y+4	; 0x04
    5fca:	3d 81       	ldd	r19, Y+5	; 0x05
    5fcc:	8e 81       	ldd	r24, Y+6	; 0x06
    5fce:	9f 81       	ldd	r25, Y+7	; 0x07
    5fd0:	82 27       	eor	r24, r18
    5fd2:	93 27       	eor	r25, r19
    5fd4:	9d 83       	std	Y+5, r25	; 0x05
    5fd6:	8c 83       	std	Y+4, r24	; 0x04
    5fd8:	8a 81       	ldd	r24, Y+2	; 0x02
    5fda:	9b 81       	ldd	r25, Y+3	; 0x03
    5fdc:	fc 01       	movw	r30, r24
    5fde:	26 81       	ldd	r18, Z+6	; 0x06
    5fe0:	37 81       	ldd	r19, Z+7	; 0x07
    5fe2:	8e 81       	ldd	r24, Y+6	; 0x06
    5fe4:	9f 81       	ldd	r25, Y+7	; 0x07
    5fe6:	a9 01       	movw	r20, r18
    5fe8:	48 1b       	sub	r20, r24
    5fea:	59 0b       	sbc	r21, r25
    5fec:	ca 01       	movw	r24, r20
    5fee:	01 97       	sbiw	r24, 0x01	; 1
    5ff0:	9f 83       	std	Y+7, r25	; 0x07
    5ff2:	8e 83       	std	Y+6, r24	; 0x06
    5ff4:	88 85       	ldd	r24, Y+8	; 0x08
    5ff6:	99 85       	ldd	r25, Y+9	; 0x09
    5ff8:	01 97       	sbiw	r24, 0x01	; 1
    5ffa:	2e 81       	ldd	r18, Y+6	; 0x06
    5ffc:	3f 81       	ldd	r19, Y+7	; 0x07
    5ffe:	f9 01       	movw	r30, r18
    6000:	e8 1b       	sub	r30, r24
    6002:	f9 0b       	sbc	r31, r25
    6004:	cf 01       	movw	r24, r30
    6006:	9f 83       	std	Y+7, r25	; 0x07
    6008:	8e 83       	std	Y+6, r24	; 0x06
    600a:	00 00       	nop
    600c:	89 81       	ldd	r24, Y+1	; 0x01
    600e:	88 23       	and	r24, r24
    6010:	69 f0       	breq	.+26     	; 0x602c <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x178>
    6012:	ea 85       	ldd	r30, Y+10	; 0x0a
    6014:	fb 85       	ldd	r31, Y+11	; 0x0b
    6016:	28 85       	ldd	r18, Y+8	; 0x08
    6018:	39 85       	ldd	r19, Y+9	; 0x09
    601a:	4e 81       	ldd	r20, Y+6	; 0x06
    601c:	5f 81       	ldd	r21, Y+7	; 0x07
    601e:	6c 81       	ldd	r22, Y+4	; 0x04
    6020:	7d 81       	ldd	r23, Y+5	; 0x05
    6022:	8a 81       	ldd	r24, Y+2	; 0x02
    6024:	9b 81       	ldd	r25, Y+3	; 0x03
    6026:	8f 01       	movw	r16, r30
    6028:	e5 d1       	rcall	.+970    	; 0x63f4 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>
    602a:	0c c0       	rjmp	.+24     	; 0x6044 <_ZN16Adafruit_SSD130613drawFastHLineEiiij+0x190>
    602c:	ea 85       	ldd	r30, Y+10	; 0x0a
    602e:	fb 85       	ldd	r31, Y+11	; 0x0b
    6030:	28 85       	ldd	r18, Y+8	; 0x08
    6032:	39 85       	ldd	r19, Y+9	; 0x09
    6034:	4e 81       	ldd	r20, Y+6	; 0x06
    6036:	5f 81       	ldd	r21, Y+7	; 0x07
    6038:	6c 81       	ldd	r22, Y+4	; 0x04
    603a:	7d 81       	ldd	r23, Y+5	; 0x05
    603c:	8a 81       	ldd	r24, Y+2	; 0x02
    603e:	9b 81       	ldd	r25, Y+3	; 0x03
    6040:	8f 01       	movw	r16, r30
    6042:	0c d0       	rcall	.+24     	; 0x605c <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>
    6044:	00 00       	nop
    6046:	2b 96       	adiw	r28, 0x0b	; 11
    6048:	0f b6       	in	r0, 0x3f	; 63
    604a:	f8 94       	cli
    604c:	de bf       	out	0x3e, r29	; 62
    604e:	0f be       	out	0x3f, r0	; 63
    6050:	cd bf       	out	0x3d, r28	; 61
    6052:	df 91       	pop	r29
    6054:	cf 91       	pop	r28
    6056:	1f 91       	pop	r17
    6058:	0f 91       	pop	r16
    605a:	08 95       	ret

0000605c <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>:
    605c:	0f 93       	push	r16
    605e:	1f 93       	push	r17
    6060:	cf 93       	push	r28
    6062:	df 93       	push	r29
    6064:	cd b7       	in	r28, 0x3d	; 61
    6066:	de b7       	in	r29, 0x3e	; 62
    6068:	2d 97       	sbiw	r28, 0x0d	; 13
    606a:	0f b6       	in	r0, 0x3f	; 63
    606c:	f8 94       	cli
    606e:	de bf       	out	0x3e, r29	; 62
    6070:	0f be       	out	0x3f, r0	; 63
    6072:	cd bf       	out	0x3d, r28	; 61
    6074:	9d 83       	std	Y+5, r25	; 0x05
    6076:	8c 83       	std	Y+4, r24	; 0x04
    6078:	7f 83       	std	Y+7, r23	; 0x07
    607a:	6e 83       	std	Y+6, r22	; 0x06
    607c:	59 87       	std	Y+9, r21	; 0x09
    607e:	48 87       	std	Y+8, r20	; 0x08
    6080:	3b 87       	std	Y+11, r19	; 0x0b
    6082:	2a 87       	std	Y+10, r18	; 0x0a
    6084:	1d 87       	std	Y+13, r17	; 0x0d
    6086:	0c 87       	std	Y+12, r16	; 0x0c
    6088:	88 85       	ldd	r24, Y+8	; 0x08
    608a:	99 85       	ldd	r25, Y+9	; 0x09
    608c:	99 23       	and	r25, r25
    608e:	0c f4       	brge	.+2      	; 0x6092 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x36>
    6090:	d1 c0       	rjmp	.+418    	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    6092:	8c 81       	ldd	r24, Y+4	; 0x04
    6094:	9d 81       	ldd	r25, Y+5	; 0x05
    6096:	fc 01       	movw	r30, r24
    6098:	26 81       	ldd	r18, Z+6	; 0x06
    609a:	37 81       	ldd	r19, Z+7	; 0x07
    609c:	88 85       	ldd	r24, Y+8	; 0x08
    609e:	99 85       	ldd	r25, Y+9	; 0x09
    60a0:	82 17       	cp	r24, r18
    60a2:	93 07       	cpc	r25, r19
    60a4:	0c f0       	brlt	.+2      	; 0x60a8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x4c>
    60a6:	c6 c0       	rjmp	.+396    	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    60a8:	8e 81       	ldd	r24, Y+6	; 0x06
    60aa:	9f 81       	ldd	r25, Y+7	; 0x07
    60ac:	99 23       	and	r25, r25
    60ae:	54 f4       	brge	.+20     	; 0x60c4 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x68>
    60b0:	2a 85       	ldd	r18, Y+10	; 0x0a
    60b2:	3b 85       	ldd	r19, Y+11	; 0x0b
    60b4:	8e 81       	ldd	r24, Y+6	; 0x06
    60b6:	9f 81       	ldd	r25, Y+7	; 0x07
    60b8:	82 0f       	add	r24, r18
    60ba:	93 1f       	adc	r25, r19
    60bc:	9b 87       	std	Y+11, r25	; 0x0b
    60be:	8a 87       	std	Y+10, r24	; 0x0a
    60c0:	1f 82       	std	Y+7, r1	; 0x07
    60c2:	1e 82       	std	Y+6, r1	; 0x06
    60c4:	2e 81       	ldd	r18, Y+6	; 0x06
    60c6:	3f 81       	ldd	r19, Y+7	; 0x07
    60c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    60ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    60cc:	28 0f       	add	r18, r24
    60ce:	39 1f       	adc	r19, r25
    60d0:	8c 81       	ldd	r24, Y+4	; 0x04
    60d2:	9d 81       	ldd	r25, Y+5	; 0x05
    60d4:	fc 01       	movw	r30, r24
    60d6:	84 81       	ldd	r24, Z+4	; 0x04
    60d8:	95 81       	ldd	r25, Z+5	; 0x05
    60da:	82 17       	cp	r24, r18
    60dc:	93 07       	cpc	r25, r19
    60de:	6c f4       	brge	.+26     	; 0x60fa <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x9e>
    60e0:	8c 81       	ldd	r24, Y+4	; 0x04
    60e2:	9d 81       	ldd	r25, Y+5	; 0x05
    60e4:	fc 01       	movw	r30, r24
    60e6:	24 81       	ldd	r18, Z+4	; 0x04
    60e8:	35 81       	ldd	r19, Z+5	; 0x05
    60ea:	8e 81       	ldd	r24, Y+6	; 0x06
    60ec:	9f 81       	ldd	r25, Y+7	; 0x07
    60ee:	a9 01       	movw	r20, r18
    60f0:	48 1b       	sub	r20, r24
    60f2:	59 0b       	sbc	r21, r25
    60f4:	ca 01       	movw	r24, r20
    60f6:	9b 87       	std	Y+11, r25	; 0x0b
    60f8:	8a 87       	std	Y+10, r24	; 0x0a
    60fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    60fc:	9b 85       	ldd	r25, Y+11	; 0x0b
    60fe:	18 16       	cp	r1, r24
    6100:	19 06       	cpc	r1, r25
    6102:	0c f0       	brlt	.+2      	; 0x6106 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0xaa>
    6104:	97 c0       	rjmp	.+302    	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    6106:	8c 81       	ldd	r24, Y+4	; 0x04
    6108:	9d 81       	ldd	r25, Y+5	; 0x05
    610a:	fc 01       	movw	r30, r24
    610c:	27 8d       	ldd	r18, Z+31	; 0x1f
    610e:	30 a1       	ldd	r19, Z+32	; 0x20
    6110:	88 85       	ldd	r24, Y+8	; 0x08
    6112:	99 85       	ldd	r25, Y+9	; 0x09
    6114:	99 23       	and	r25, r25
    6116:	0c f4       	brge	.+2      	; 0x611a <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0xbe>
    6118:	07 96       	adiw	r24, 0x07	; 7
    611a:	95 95       	asr	r25
    611c:	87 95       	ror	r24
    611e:	95 95       	asr	r25
    6120:	87 95       	ror	r24
    6122:	95 95       	asr	r25
    6124:	87 95       	ror	r24
    6126:	bc 01       	movw	r22, r24
    6128:	8c 81       	ldd	r24, Y+4	; 0x04
    612a:	9d 81       	ldd	r25, Y+5	; 0x05
    612c:	fc 01       	movw	r30, r24
    612e:	84 81       	ldd	r24, Z+4	; 0x04
    6130:	95 81       	ldd	r25, Z+5	; 0x05
    6132:	68 9f       	mul	r22, r24
    6134:	a0 01       	movw	r20, r0
    6136:	69 9f       	mul	r22, r25
    6138:	50 0d       	add	r21, r0
    613a:	78 9f       	mul	r23, r24
    613c:	50 0d       	add	r21, r0
    613e:	11 24       	eor	r1, r1
    6140:	8e 81       	ldd	r24, Y+6	; 0x06
    6142:	9f 81       	ldd	r25, Y+7	; 0x07
    6144:	84 0f       	add	r24, r20
    6146:	95 1f       	adc	r25, r21
    6148:	82 0f       	add	r24, r18
    614a:	93 1f       	adc	r25, r19
    614c:	9a 83       	std	Y+2, r25	; 0x02
    614e:	89 83       	std	Y+1, r24	; 0x01
    6150:	88 85       	ldd	r24, Y+8	; 0x08
    6152:	99 85       	ldd	r25, Y+9	; 0x09
    6154:	9c 01       	movw	r18, r24
    6156:	27 70       	andi	r18, 0x07	; 7
    6158:	33 27       	eor	r19, r19
    615a:	81 e0       	ldi	r24, 0x01	; 1
    615c:	90 e0       	ldi	r25, 0x00	; 0
    615e:	02 c0       	rjmp	.+4      	; 0x6164 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x108>
    6160:	88 0f       	add	r24, r24
    6162:	99 1f       	adc	r25, r25
    6164:	2a 95       	dec	r18
    6166:	e2 f7       	brpl	.-8      	; 0x6160 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x104>
    6168:	8b 83       	std	Y+3, r24	; 0x03
    616a:	8c 85       	ldd	r24, Y+12	; 0x0c
    616c:	9d 85       	ldd	r25, Y+13	; 0x0d
    616e:	81 30       	cpi	r24, 0x01	; 1
    6170:	91 05       	cpc	r25, r1
    6172:	31 f0       	breq	.+12     	; 0x6180 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x124>
    6174:	81 30       	cpi	r24, 0x01	; 1
    6176:	91 05       	cpc	r25, r1
    6178:	f8 f0       	brcs	.+62     	; 0x61b8 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x15c>
    617a:	02 97       	sbiw	r24, 0x02	; 2
    617c:	d9 f1       	breq	.+118    	; 0x61f4 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x198>
    617e:	5a c0       	rjmp	.+180    	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    6180:	8a 85       	ldd	r24, Y+10	; 0x0a
    6182:	9b 85       	ldd	r25, Y+11	; 0x0b
    6184:	9c 01       	movw	r18, r24
    6186:	21 50       	subi	r18, 0x01	; 1
    6188:	31 09       	sbc	r19, r1
    618a:	3b 87       	std	Y+11, r19	; 0x0b
    618c:	2a 87       	std	Y+10, r18	; 0x0a
    618e:	21 e0       	ldi	r18, 0x01	; 1
    6190:	89 2b       	or	r24, r25
    6192:	09 f4       	brne	.+2      	; 0x6196 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x13a>
    6194:	20 e0       	ldi	r18, 0x00	; 0
    6196:	22 23       	and	r18, r18
    6198:	09 f4       	brne	.+2      	; 0x619c <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x140>
    619a:	47 c0       	rjmp	.+142    	; 0x622a <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1ce>
    619c:	89 81       	ldd	r24, Y+1	; 0x01
    619e:	9a 81       	ldd	r25, Y+2	; 0x02
    61a0:	9c 01       	movw	r18, r24
    61a2:	2f 5f       	subi	r18, 0xFF	; 255
    61a4:	3f 4f       	sbci	r19, 0xFF	; 255
    61a6:	3a 83       	std	Y+2, r19	; 0x02
    61a8:	29 83       	std	Y+1, r18	; 0x01
    61aa:	fc 01       	movw	r30, r24
    61ac:	30 81       	ld	r19, Z
    61ae:	2b 81       	ldd	r18, Y+3	; 0x03
    61b0:	23 2b       	or	r18, r19
    61b2:	fc 01       	movw	r30, r24
    61b4:	20 83       	st	Z, r18
    61b6:	e4 cf       	rjmp	.-56     	; 0x6180 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x124>
    61b8:	8b 81       	ldd	r24, Y+3	; 0x03
    61ba:	80 95       	com	r24
    61bc:	8b 83       	std	Y+3, r24	; 0x03
    61be:	8a 85       	ldd	r24, Y+10	; 0x0a
    61c0:	9b 85       	ldd	r25, Y+11	; 0x0b
    61c2:	9c 01       	movw	r18, r24
    61c4:	21 50       	subi	r18, 0x01	; 1
    61c6:	31 09       	sbc	r19, r1
    61c8:	3b 87       	std	Y+11, r19	; 0x0b
    61ca:	2a 87       	std	Y+10, r18	; 0x0a
    61cc:	21 e0       	ldi	r18, 0x01	; 1
    61ce:	89 2b       	or	r24, r25
    61d0:	09 f4       	brne	.+2      	; 0x61d4 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x178>
    61d2:	20 e0       	ldi	r18, 0x00	; 0
    61d4:	22 23       	and	r18, r18
    61d6:	59 f1       	breq	.+86     	; 0x622e <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d2>
    61d8:	89 81       	ldd	r24, Y+1	; 0x01
    61da:	9a 81       	ldd	r25, Y+2	; 0x02
    61dc:	9c 01       	movw	r18, r24
    61de:	2f 5f       	subi	r18, 0xFF	; 255
    61e0:	3f 4f       	sbci	r19, 0xFF	; 255
    61e2:	3a 83       	std	Y+2, r19	; 0x02
    61e4:	29 83       	std	Y+1, r18	; 0x01
    61e6:	fc 01       	movw	r30, r24
    61e8:	30 81       	ld	r19, Z
    61ea:	2b 81       	ldd	r18, Y+3	; 0x03
    61ec:	23 23       	and	r18, r19
    61ee:	fc 01       	movw	r30, r24
    61f0:	20 83       	st	Z, r18
    61f2:	e5 cf       	rjmp	.-54     	; 0x61be <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x162>
    61f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    61f6:	9b 85       	ldd	r25, Y+11	; 0x0b
    61f8:	9c 01       	movw	r18, r24
    61fa:	21 50       	subi	r18, 0x01	; 1
    61fc:	31 09       	sbc	r19, r1
    61fe:	3b 87       	std	Y+11, r19	; 0x0b
    6200:	2a 87       	std	Y+10, r18	; 0x0a
    6202:	21 e0       	ldi	r18, 0x01	; 1
    6204:	89 2b       	or	r24, r25
    6206:	09 f4       	brne	.+2      	; 0x620a <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1ae>
    6208:	20 e0       	ldi	r18, 0x00	; 0
    620a:	22 23       	and	r18, r18
    620c:	91 f0       	breq	.+36     	; 0x6232 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d6>
    620e:	89 81       	ldd	r24, Y+1	; 0x01
    6210:	9a 81       	ldd	r25, Y+2	; 0x02
    6212:	9c 01       	movw	r18, r24
    6214:	2f 5f       	subi	r18, 0xFF	; 255
    6216:	3f 4f       	sbci	r19, 0xFF	; 255
    6218:	3a 83       	std	Y+2, r19	; 0x02
    621a:	29 83       	std	Y+1, r18	; 0x01
    621c:	fc 01       	movw	r30, r24
    621e:	30 81       	ld	r19, Z
    6220:	2b 81       	ldd	r18, Y+3	; 0x03
    6222:	23 27       	eor	r18, r19
    6224:	fc 01       	movw	r30, r24
    6226:	20 83       	st	Z, r18
    6228:	e5 cf       	rjmp	.-54     	; 0x61f4 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x198>
    622a:	00 00       	nop
    622c:	03 c0       	rjmp	.+6      	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    622e:	00 00       	nop
    6230:	01 c0       	rjmp	.+2      	; 0x6234 <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij+0x1d8>
    6232:	00 00       	nop
    6234:	00 00       	nop
    6236:	2d 96       	adiw	r28, 0x0d	; 13
    6238:	0f b6       	in	r0, 0x3f	; 63
    623a:	f8 94       	cli
    623c:	de bf       	out	0x3e, r29	; 62
    623e:	0f be       	out	0x3f, r0	; 63
    6240:	cd bf       	out	0x3d, r28	; 61
    6242:	df 91       	pop	r29
    6244:	cf 91       	pop	r28
    6246:	1f 91       	pop	r17
    6248:	0f 91       	pop	r16
    624a:	08 95       	ret

0000624c <_ZN16Adafruit_SSD130613drawFastVLineEiiij>:
    624c:	0f 93       	push	r16
    624e:	1f 93       	push	r17
    6250:	cf 93       	push	r28
    6252:	df 93       	push	r29
    6254:	cd b7       	in	r28, 0x3d	; 61
    6256:	de b7       	in	r29, 0x3e	; 62
    6258:	2b 97       	sbiw	r28, 0x0b	; 11
    625a:	0f b6       	in	r0, 0x3f	; 63
    625c:	f8 94       	cli
    625e:	de bf       	out	0x3e, r29	; 62
    6260:	0f be       	out	0x3f, r0	; 63
    6262:	cd bf       	out	0x3d, r28	; 61
    6264:	9b 83       	std	Y+3, r25	; 0x03
    6266:	8a 83       	std	Y+2, r24	; 0x02
    6268:	7d 83       	std	Y+5, r23	; 0x05
    626a:	6c 83       	std	Y+4, r22	; 0x04
    626c:	5f 83       	std	Y+7, r21	; 0x07
    626e:	4e 83       	std	Y+6, r20	; 0x06
    6270:	39 87       	std	Y+9, r19	; 0x09
    6272:	28 87       	std	Y+8, r18	; 0x08
    6274:	1b 87       	std	Y+11, r17	; 0x0b
    6276:	0a 87       	std	Y+10, r16	; 0x0a
    6278:	19 82       	std	Y+1, r1	; 0x01
    627a:	8a 81       	ldd	r24, Y+2	; 0x02
    627c:	9b 81       	ldd	r25, Y+3	; 0x03
    627e:	fc 01       	movw	r30, r24
    6280:	86 89       	ldd	r24, Z+22	; 0x16
    6282:	88 2f       	mov	r24, r24
    6284:	90 e0       	ldi	r25, 0x00	; 0
    6286:	82 30       	cpi	r24, 0x02	; 2
    6288:	91 05       	cpc	r25, r1
    628a:	d9 f1       	breq	.+118    	; 0x6302 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0xb6>
    628c:	83 30       	cpi	r24, 0x03	; 3
    628e:	91 05       	cpc	r25, r1
    6290:	09 f4       	brne	.+2      	; 0x6294 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x48>
    6292:	5f c0       	rjmp	.+190    	; 0x6352 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x106>
    6294:	01 97       	sbiw	r24, 0x01	; 1
    6296:	09 f0       	breq	.+2      	; 0x629a <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x4e>
    6298:	85 c0       	rjmp	.+266    	; 0x63a4 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    629a:	81 e0       	ldi	r24, 0x01	; 1
    629c:	89 83       	std	Y+1, r24	; 0x01
    629e:	2c 81       	ldd	r18, Y+4	; 0x04
    62a0:	3d 81       	ldd	r19, Y+5	; 0x05
    62a2:	8e 81       	ldd	r24, Y+6	; 0x06
    62a4:	9f 81       	ldd	r25, Y+7	; 0x07
    62a6:	82 27       	eor	r24, r18
    62a8:	93 27       	eor	r25, r19
    62aa:	9d 83       	std	Y+5, r25	; 0x05
    62ac:	8c 83       	std	Y+4, r24	; 0x04
    62ae:	2e 81       	ldd	r18, Y+6	; 0x06
    62b0:	3f 81       	ldd	r19, Y+7	; 0x07
    62b2:	8c 81       	ldd	r24, Y+4	; 0x04
    62b4:	9d 81       	ldd	r25, Y+5	; 0x05
    62b6:	82 27       	eor	r24, r18
    62b8:	93 27       	eor	r25, r19
    62ba:	9f 83       	std	Y+7, r25	; 0x07
    62bc:	8e 83       	std	Y+6, r24	; 0x06
    62be:	2c 81       	ldd	r18, Y+4	; 0x04
    62c0:	3d 81       	ldd	r19, Y+5	; 0x05
    62c2:	8e 81       	ldd	r24, Y+6	; 0x06
    62c4:	9f 81       	ldd	r25, Y+7	; 0x07
    62c6:	82 27       	eor	r24, r18
    62c8:	93 27       	eor	r25, r19
    62ca:	9d 83       	std	Y+5, r25	; 0x05
    62cc:	8c 83       	std	Y+4, r24	; 0x04
    62ce:	8a 81       	ldd	r24, Y+2	; 0x02
    62d0:	9b 81       	ldd	r25, Y+3	; 0x03
    62d2:	fc 01       	movw	r30, r24
    62d4:	24 81       	ldd	r18, Z+4	; 0x04
    62d6:	35 81       	ldd	r19, Z+5	; 0x05
    62d8:	8c 81       	ldd	r24, Y+4	; 0x04
    62da:	9d 81       	ldd	r25, Y+5	; 0x05
    62dc:	a9 01       	movw	r20, r18
    62de:	48 1b       	sub	r20, r24
    62e0:	59 0b       	sbc	r21, r25
    62e2:	ca 01       	movw	r24, r20
    62e4:	01 97       	sbiw	r24, 0x01	; 1
    62e6:	9d 83       	std	Y+5, r25	; 0x05
    62e8:	8c 83       	std	Y+4, r24	; 0x04
    62ea:	88 85       	ldd	r24, Y+8	; 0x08
    62ec:	99 85       	ldd	r25, Y+9	; 0x09
    62ee:	01 97       	sbiw	r24, 0x01	; 1
    62f0:	2c 81       	ldd	r18, Y+4	; 0x04
    62f2:	3d 81       	ldd	r19, Y+5	; 0x05
    62f4:	f9 01       	movw	r30, r18
    62f6:	e8 1b       	sub	r30, r24
    62f8:	f9 0b       	sbc	r31, r25
    62fa:	cf 01       	movw	r24, r30
    62fc:	9d 83       	std	Y+5, r25	; 0x05
    62fe:	8c 83       	std	Y+4, r24	; 0x04
    6300:	51 c0       	rjmp	.+162    	; 0x63a4 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    6302:	8a 81       	ldd	r24, Y+2	; 0x02
    6304:	9b 81       	ldd	r25, Y+3	; 0x03
    6306:	fc 01       	movw	r30, r24
    6308:	24 81       	ldd	r18, Z+4	; 0x04
    630a:	35 81       	ldd	r19, Z+5	; 0x05
    630c:	8c 81       	ldd	r24, Y+4	; 0x04
    630e:	9d 81       	ldd	r25, Y+5	; 0x05
    6310:	a9 01       	movw	r20, r18
    6312:	48 1b       	sub	r20, r24
    6314:	59 0b       	sbc	r21, r25
    6316:	ca 01       	movw	r24, r20
    6318:	01 97       	sbiw	r24, 0x01	; 1
    631a:	9d 83       	std	Y+5, r25	; 0x05
    631c:	8c 83       	std	Y+4, r24	; 0x04
    631e:	8a 81       	ldd	r24, Y+2	; 0x02
    6320:	9b 81       	ldd	r25, Y+3	; 0x03
    6322:	fc 01       	movw	r30, r24
    6324:	26 81       	ldd	r18, Z+6	; 0x06
    6326:	37 81       	ldd	r19, Z+7	; 0x07
    6328:	8e 81       	ldd	r24, Y+6	; 0x06
    632a:	9f 81       	ldd	r25, Y+7	; 0x07
    632c:	a9 01       	movw	r20, r18
    632e:	48 1b       	sub	r20, r24
    6330:	59 0b       	sbc	r21, r25
    6332:	ca 01       	movw	r24, r20
    6334:	01 97       	sbiw	r24, 0x01	; 1
    6336:	9f 83       	std	Y+7, r25	; 0x07
    6338:	8e 83       	std	Y+6, r24	; 0x06
    633a:	88 85       	ldd	r24, Y+8	; 0x08
    633c:	99 85       	ldd	r25, Y+9	; 0x09
    633e:	01 97       	sbiw	r24, 0x01	; 1
    6340:	2e 81       	ldd	r18, Y+6	; 0x06
    6342:	3f 81       	ldd	r19, Y+7	; 0x07
    6344:	f9 01       	movw	r30, r18
    6346:	e8 1b       	sub	r30, r24
    6348:	f9 0b       	sbc	r31, r25
    634a:	cf 01       	movw	r24, r30
    634c:	9f 83       	std	Y+7, r25	; 0x07
    634e:	8e 83       	std	Y+6, r24	; 0x06
    6350:	29 c0       	rjmp	.+82     	; 0x63a4 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x158>
    6352:	81 e0       	ldi	r24, 0x01	; 1
    6354:	89 83       	std	Y+1, r24	; 0x01
    6356:	2c 81       	ldd	r18, Y+4	; 0x04
    6358:	3d 81       	ldd	r19, Y+5	; 0x05
    635a:	8e 81       	ldd	r24, Y+6	; 0x06
    635c:	9f 81       	ldd	r25, Y+7	; 0x07
    635e:	82 27       	eor	r24, r18
    6360:	93 27       	eor	r25, r19
    6362:	9d 83       	std	Y+5, r25	; 0x05
    6364:	8c 83       	std	Y+4, r24	; 0x04
    6366:	2e 81       	ldd	r18, Y+6	; 0x06
    6368:	3f 81       	ldd	r19, Y+7	; 0x07
    636a:	8c 81       	ldd	r24, Y+4	; 0x04
    636c:	9d 81       	ldd	r25, Y+5	; 0x05
    636e:	82 27       	eor	r24, r18
    6370:	93 27       	eor	r25, r19
    6372:	9f 83       	std	Y+7, r25	; 0x07
    6374:	8e 83       	std	Y+6, r24	; 0x06
    6376:	2c 81       	ldd	r18, Y+4	; 0x04
    6378:	3d 81       	ldd	r19, Y+5	; 0x05
    637a:	8e 81       	ldd	r24, Y+6	; 0x06
    637c:	9f 81       	ldd	r25, Y+7	; 0x07
    637e:	82 27       	eor	r24, r18
    6380:	93 27       	eor	r25, r19
    6382:	9d 83       	std	Y+5, r25	; 0x05
    6384:	8c 83       	std	Y+4, r24	; 0x04
    6386:	8a 81       	ldd	r24, Y+2	; 0x02
    6388:	9b 81       	ldd	r25, Y+3	; 0x03
    638a:	fc 01       	movw	r30, r24
    638c:	26 81       	ldd	r18, Z+6	; 0x06
    638e:	37 81       	ldd	r19, Z+7	; 0x07
    6390:	8e 81       	ldd	r24, Y+6	; 0x06
    6392:	9f 81       	ldd	r25, Y+7	; 0x07
    6394:	a9 01       	movw	r20, r18
    6396:	48 1b       	sub	r20, r24
    6398:	59 0b       	sbc	r21, r25
    639a:	ca 01       	movw	r24, r20
    639c:	01 97       	sbiw	r24, 0x01	; 1
    639e:	9f 83       	std	Y+7, r25	; 0x07
    63a0:	8e 83       	std	Y+6, r24	; 0x06
    63a2:	00 00       	nop
    63a4:	89 81       	ldd	r24, Y+1	; 0x01
    63a6:	88 23       	and	r24, r24
    63a8:	69 f0       	breq	.+26     	; 0x63c4 <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x178>
    63aa:	ea 85       	ldd	r30, Y+10	; 0x0a
    63ac:	fb 85       	ldd	r31, Y+11	; 0x0b
    63ae:	28 85       	ldd	r18, Y+8	; 0x08
    63b0:	39 85       	ldd	r19, Y+9	; 0x09
    63b2:	4e 81       	ldd	r20, Y+6	; 0x06
    63b4:	5f 81       	ldd	r21, Y+7	; 0x07
    63b6:	6c 81       	ldd	r22, Y+4	; 0x04
    63b8:	7d 81       	ldd	r23, Y+5	; 0x05
    63ba:	8a 81       	ldd	r24, Y+2	; 0x02
    63bc:	9b 81       	ldd	r25, Y+3	; 0x03
    63be:	8f 01       	movw	r16, r30
    63c0:	4d de       	rcall	.-870    	; 0x605c <_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij>
    63c2:	0c c0       	rjmp	.+24     	; 0x63dc <_ZN16Adafruit_SSD130613drawFastVLineEiiij+0x190>
    63c4:	ea 85       	ldd	r30, Y+10	; 0x0a
    63c6:	fb 85       	ldd	r31, Y+11	; 0x0b
    63c8:	28 85       	ldd	r18, Y+8	; 0x08
    63ca:	39 85       	ldd	r19, Y+9	; 0x09
    63cc:	4e 81       	ldd	r20, Y+6	; 0x06
    63ce:	5f 81       	ldd	r21, Y+7	; 0x07
    63d0:	6c 81       	ldd	r22, Y+4	; 0x04
    63d2:	7d 81       	ldd	r23, Y+5	; 0x05
    63d4:	8a 81       	ldd	r24, Y+2	; 0x02
    63d6:	9b 81       	ldd	r25, Y+3	; 0x03
    63d8:	8f 01       	movw	r16, r30
    63da:	0c d0       	rcall	.+24     	; 0x63f4 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>
    63dc:	00 00       	nop
    63de:	2b 96       	adiw	r28, 0x0b	; 11
    63e0:	0f b6       	in	r0, 0x3f	; 63
    63e2:	f8 94       	cli
    63e4:	de bf       	out	0x3e, r29	; 62
    63e6:	0f be       	out	0x3f, r0	; 63
    63e8:	cd bf       	out	0x3d, r28	; 61
    63ea:	df 91       	pop	r29
    63ec:	cf 91       	pop	r28
    63ee:	1f 91       	pop	r17
    63f0:	0f 91       	pop	r16
    63f2:	08 95       	ret

000063f4 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij>:
    63f4:	0f 93       	push	r16
    63f6:	1f 93       	push	r17
    63f8:	cf 93       	push	r28
    63fa:	df 93       	push	r29
    63fc:	cd b7       	in	r28, 0x3d	; 61
    63fe:	de b7       	in	r29, 0x3e	; 62
    6400:	68 97       	sbiw	r28, 0x18	; 24
    6402:	0f b6       	in	r0, 0x3f	; 63
    6404:	f8 94       	cli
    6406:	de bf       	out	0x3e, r29	; 62
    6408:	0f be       	out	0x3f, r0	; 63
    640a:	cd bf       	out	0x3d, r28	; 61
    640c:	98 8b       	std	Y+16, r25	; 0x10
    640e:	8f 87       	std	Y+15, r24	; 0x0f
    6410:	7a 8b       	std	Y+18, r23	; 0x12
    6412:	69 8b       	std	Y+17, r22	; 0x11
    6414:	5c 8b       	std	Y+20, r21	; 0x14
    6416:	4b 8b       	std	Y+19, r20	; 0x13
    6418:	3e 8b       	std	Y+22, r19	; 0x16
    641a:	2d 8b       	std	Y+21, r18	; 0x15
    641c:	18 8f       	std	Y+24, r17	; 0x18
    641e:	0f 8b       	std	Y+23, r16	; 0x17
    6420:	89 89       	ldd	r24, Y+17	; 0x11
    6422:	9a 89       	ldd	r25, Y+18	; 0x12
    6424:	99 23       	and	r25, r25
    6426:	0c f4       	brge	.+2      	; 0x642a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x36>
    6428:	62 c1       	rjmp	.+708    	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    642a:	8f 85       	ldd	r24, Y+15	; 0x0f
    642c:	98 89       	ldd	r25, Y+16	; 0x10
    642e:	fc 01       	movw	r30, r24
    6430:	24 81       	ldd	r18, Z+4	; 0x04
    6432:	35 81       	ldd	r19, Z+5	; 0x05
    6434:	89 89       	ldd	r24, Y+17	; 0x11
    6436:	9a 89       	ldd	r25, Y+18	; 0x12
    6438:	82 17       	cp	r24, r18
    643a:	93 07       	cpc	r25, r19
    643c:	0c f0       	brlt	.+2      	; 0x6440 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x4c>
    643e:	57 c1       	rjmp	.+686    	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    6440:	8b 89       	ldd	r24, Y+19	; 0x13
    6442:	9c 89       	ldd	r25, Y+20	; 0x14
    6444:	99 23       	and	r25, r25
    6446:	54 f4       	brge	.+20     	; 0x645c <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x68>
    6448:	2d 89       	ldd	r18, Y+21	; 0x15
    644a:	3e 89       	ldd	r19, Y+22	; 0x16
    644c:	8b 89       	ldd	r24, Y+19	; 0x13
    644e:	9c 89       	ldd	r25, Y+20	; 0x14
    6450:	82 0f       	add	r24, r18
    6452:	93 1f       	adc	r25, r19
    6454:	9e 8b       	std	Y+22, r25	; 0x16
    6456:	8d 8b       	std	Y+21, r24	; 0x15
    6458:	1c 8a       	std	Y+20, r1	; 0x14
    645a:	1b 8a       	std	Y+19, r1	; 0x13
    645c:	2b 89       	ldd	r18, Y+19	; 0x13
    645e:	3c 89       	ldd	r19, Y+20	; 0x14
    6460:	8d 89       	ldd	r24, Y+21	; 0x15
    6462:	9e 89       	ldd	r25, Y+22	; 0x16
    6464:	28 0f       	add	r18, r24
    6466:	39 1f       	adc	r19, r25
    6468:	8f 85       	ldd	r24, Y+15	; 0x0f
    646a:	98 89       	ldd	r25, Y+16	; 0x10
    646c:	fc 01       	movw	r30, r24
    646e:	86 81       	ldd	r24, Z+6	; 0x06
    6470:	97 81       	ldd	r25, Z+7	; 0x07
    6472:	82 17       	cp	r24, r18
    6474:	93 07       	cpc	r25, r19
    6476:	6c f4       	brge	.+26     	; 0x6492 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x9e>
    6478:	8f 85       	ldd	r24, Y+15	; 0x0f
    647a:	98 89       	ldd	r25, Y+16	; 0x10
    647c:	fc 01       	movw	r30, r24
    647e:	26 81       	ldd	r18, Z+6	; 0x06
    6480:	37 81       	ldd	r19, Z+7	; 0x07
    6482:	8b 89       	ldd	r24, Y+19	; 0x13
    6484:	9c 89       	ldd	r25, Y+20	; 0x14
    6486:	a9 01       	movw	r20, r18
    6488:	48 1b       	sub	r20, r24
    648a:	59 0b       	sbc	r21, r25
    648c:	ca 01       	movw	r24, r20
    648e:	9e 8b       	std	Y+22, r25	; 0x16
    6490:	8d 8b       	std	Y+21, r24	; 0x15
    6492:	8d 89       	ldd	r24, Y+21	; 0x15
    6494:	9e 89       	ldd	r25, Y+22	; 0x16
    6496:	18 16       	cp	r1, r24
    6498:	19 06       	cpc	r1, r25
    649a:	0c f0       	brlt	.+2      	; 0x649e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0xaa>
    649c:	28 c1       	rjmp	.+592    	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    649e:	8b 89       	ldd	r24, Y+19	; 0x13
    64a0:	8e 83       	std	Y+6, r24	; 0x06
    64a2:	8d 89       	ldd	r24, Y+21	; 0x15
    64a4:	89 83       	std	Y+1, r24	; 0x01
    64a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    64a8:	98 89       	ldd	r25, Y+16	; 0x10
    64aa:	fc 01       	movw	r30, r24
    64ac:	87 8d       	ldd	r24, Z+31	; 0x1f
    64ae:	90 a1       	ldd	r25, Z+32	; 0x20
    64b0:	2e 81       	ldd	r18, Y+6	; 0x06
    64b2:	26 95       	lsr	r18
    64b4:	26 95       	lsr	r18
    64b6:	26 95       	lsr	r18
    64b8:	62 2f       	mov	r22, r18
    64ba:	70 e0       	ldi	r23, 0x00	; 0
    64bc:	2f 85       	ldd	r18, Y+15	; 0x0f
    64be:	38 89       	ldd	r19, Y+16	; 0x10
    64c0:	f9 01       	movw	r30, r18
    64c2:	24 81       	ldd	r18, Z+4	; 0x04
    64c4:	35 81       	ldd	r19, Z+5	; 0x05
    64c6:	62 9f       	mul	r22, r18
    64c8:	a0 01       	movw	r20, r0
    64ca:	63 9f       	mul	r22, r19
    64cc:	50 0d       	add	r21, r0
    64ce:	72 9f       	mul	r23, r18
    64d0:	50 0d       	add	r21, r0
    64d2:	11 24       	eor	r1, r1
    64d4:	29 89       	ldd	r18, Y+17	; 0x11
    64d6:	3a 89       	ldd	r19, Y+18	; 0x12
    64d8:	24 0f       	add	r18, r20
    64da:	35 1f       	adc	r19, r21
    64dc:	82 0f       	add	r24, r18
    64de:	93 1f       	adc	r25, r19
    64e0:	9b 83       	std	Y+3, r25	; 0x03
    64e2:	8a 83       	std	Y+2, r24	; 0x02
    64e4:	8e 81       	ldd	r24, Y+6	; 0x06
    64e6:	87 70       	andi	r24, 0x07	; 7
    64e8:	8c 83       	std	Y+4, r24	; 0x04
    64ea:	8c 81       	ldd	r24, Y+4	; 0x04
    64ec:	88 23       	and	r24, r24
    64ee:	09 f4       	brne	.+2      	; 0x64f2 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0xfe>
    64f0:	68 c0       	rjmp	.+208    	; 0x65c2 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1ce>
    64f2:	98 e0       	ldi	r25, 0x08	; 8
    64f4:	8c 81       	ldd	r24, Y+4	; 0x04
    64f6:	f9 2f       	mov	r31, r25
    64f8:	f8 1b       	sub	r31, r24
    64fa:	8f 2f       	mov	r24, r31
    64fc:	8c 83       	std	Y+4, r24	; 0x04
    64fe:	8c 81       	ldd	r24, Y+4	; 0x04
    6500:	88 2f       	mov	r24, r24
    6502:	90 e0       	ldi	r25, 0x00	; 0
    6504:	8e 56       	subi	r24, 0x6E	; 110
    6506:	92 4f       	sbci	r25, 0xF2	; 242
    6508:	98 87       	std	Y+8, r25	; 0x08
    650a:	8f 83       	std	Y+7, r24	; 0x07
    650c:	8f 81       	ldd	r24, Y+7	; 0x07
    650e:	98 85       	ldd	r25, Y+8	; 0x08
    6510:	fc 01       	movw	r30, r24
    6512:	84 91       	lpm	r24, Z
    6514:	89 87       	std	Y+9, r24	; 0x09
    6516:	89 85       	ldd	r24, Y+9	; 0x09
    6518:	8d 83       	std	Y+5, r24	; 0x05
    651a:	99 81       	ldd	r25, Y+1	; 0x01
    651c:	8c 81       	ldd	r24, Y+4	; 0x04
    651e:	98 17       	cp	r25, r24
    6520:	98 f4       	brcc	.+38     	; 0x6548 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x154>
    6522:	8c 81       	ldd	r24, Y+4	; 0x04
    6524:	28 2f       	mov	r18, r24
    6526:	30 e0       	ldi	r19, 0x00	; 0
    6528:	89 81       	ldd	r24, Y+1	; 0x01
    652a:	88 2f       	mov	r24, r24
    652c:	90 e0       	ldi	r25, 0x00	; 0
    652e:	28 1b       	sub	r18, r24
    6530:	39 0b       	sbc	r19, r25
    6532:	8f ef       	ldi	r24, 0xFF	; 255
    6534:	90 e0       	ldi	r25, 0x00	; 0
    6536:	02 c0       	rjmp	.+4      	; 0x653c <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x148>
    6538:	95 95       	asr	r25
    653a:	87 95       	ror	r24
    653c:	2a 95       	dec	r18
    653e:	e2 f7       	brpl	.-8      	; 0x6538 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x144>
    6540:	98 2f       	mov	r25, r24
    6542:	8d 81       	ldd	r24, Y+5	; 0x05
    6544:	89 23       	and	r24, r25
    6546:	8d 83       	std	Y+5, r24	; 0x05
    6548:	8f 89       	ldd	r24, Y+23	; 0x17
    654a:	98 8d       	ldd	r25, Y+24	; 0x18
    654c:	81 30       	cpi	r24, 0x01	; 1
    654e:	91 05       	cpc	r25, r1
    6550:	31 f0       	breq	.+12     	; 0x655e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x16a>
    6552:	81 30       	cpi	r24, 0x01	; 1
    6554:	91 05       	cpc	r25, r1
    6556:	78 f0       	brcs	.+30     	; 0x6576 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x182>
    6558:	02 97       	sbiw	r24, 0x02	; 2
    655a:	d9 f0       	breq	.+54     	; 0x6592 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x19e>
    655c:	26 c0       	rjmp	.+76     	; 0x65aa <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    655e:	8a 81       	ldd	r24, Y+2	; 0x02
    6560:	9b 81       	ldd	r25, Y+3	; 0x03
    6562:	fc 01       	movw	r30, r24
    6564:	90 81       	ld	r25, Z
    6566:	8d 81       	ldd	r24, Y+5	; 0x05
    6568:	29 2f       	mov	r18, r25
    656a:	28 2b       	or	r18, r24
    656c:	8a 81       	ldd	r24, Y+2	; 0x02
    656e:	9b 81       	ldd	r25, Y+3	; 0x03
    6570:	fc 01       	movw	r30, r24
    6572:	20 83       	st	Z, r18
    6574:	1a c0       	rjmp	.+52     	; 0x65aa <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    6576:	8a 81       	ldd	r24, Y+2	; 0x02
    6578:	9b 81       	ldd	r25, Y+3	; 0x03
    657a:	fc 01       	movw	r30, r24
    657c:	80 81       	ld	r24, Z
    657e:	98 2f       	mov	r25, r24
    6580:	8d 81       	ldd	r24, Y+5	; 0x05
    6582:	80 95       	com	r24
    6584:	89 23       	and	r24, r25
    6586:	28 2f       	mov	r18, r24
    6588:	8a 81       	ldd	r24, Y+2	; 0x02
    658a:	9b 81       	ldd	r25, Y+3	; 0x03
    658c:	fc 01       	movw	r30, r24
    658e:	20 83       	st	Z, r18
    6590:	0c c0       	rjmp	.+24     	; 0x65aa <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1b6>
    6592:	8a 81       	ldd	r24, Y+2	; 0x02
    6594:	9b 81       	ldd	r25, Y+3	; 0x03
    6596:	fc 01       	movw	r30, r24
    6598:	90 81       	ld	r25, Z
    659a:	8d 81       	ldd	r24, Y+5	; 0x05
    659c:	29 2f       	mov	r18, r25
    659e:	28 27       	eor	r18, r24
    65a0:	8a 81       	ldd	r24, Y+2	; 0x02
    65a2:	9b 81       	ldd	r25, Y+3	; 0x03
    65a4:	fc 01       	movw	r30, r24
    65a6:	20 83       	st	Z, r18
    65a8:	00 00       	nop
    65aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    65ac:	98 89       	ldd	r25, Y+16	; 0x10
    65ae:	fc 01       	movw	r30, r24
    65b0:	84 81       	ldd	r24, Z+4	; 0x04
    65b2:	95 81       	ldd	r25, Z+5	; 0x05
    65b4:	9c 01       	movw	r18, r24
    65b6:	8a 81       	ldd	r24, Y+2	; 0x02
    65b8:	9b 81       	ldd	r25, Y+3	; 0x03
    65ba:	82 0f       	add	r24, r18
    65bc:	93 1f       	adc	r25, r19
    65be:	9b 83       	std	Y+3, r25	; 0x03
    65c0:	8a 83       	std	Y+2, r24	; 0x02
    65c2:	99 81       	ldd	r25, Y+1	; 0x01
    65c4:	8c 81       	ldd	r24, Y+4	; 0x04
    65c6:	98 17       	cp	r25, r24
    65c8:	08 f4       	brcc	.+2      	; 0x65cc <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1d8>
    65ca:	91 c0       	rjmp	.+290    	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    65cc:	99 81       	ldd	r25, Y+1	; 0x01
    65ce:	8c 81       	ldd	r24, Y+4	; 0x04
    65d0:	f9 2f       	mov	r31, r25
    65d2:	f8 1b       	sub	r31, r24
    65d4:	8f 2f       	mov	r24, r31
    65d6:	89 83       	std	Y+1, r24	; 0x01
    65d8:	89 81       	ldd	r24, Y+1	; 0x01
    65da:	88 30       	cpi	r24, 0x08	; 8
    65dc:	08 f4       	brcc	.+2      	; 0x65e0 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1ec>
    65de:	41 c0       	rjmp	.+130    	; 0x6662 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    65e0:	8f 89       	ldd	r24, Y+23	; 0x17
    65e2:	98 8d       	ldd	r25, Y+24	; 0x18
    65e4:	02 97       	sbiw	r24, 0x02	; 2
    65e6:	e9 f4       	brne	.+58     	; 0x6622 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x22e>
    65e8:	8a 81       	ldd	r24, Y+2	; 0x02
    65ea:	9b 81       	ldd	r25, Y+3	; 0x03
    65ec:	fc 01       	movw	r30, r24
    65ee:	80 81       	ld	r24, Z
    65f0:	28 2f       	mov	r18, r24
    65f2:	20 95       	com	r18
    65f4:	8a 81       	ldd	r24, Y+2	; 0x02
    65f6:	9b 81       	ldd	r25, Y+3	; 0x03
    65f8:	fc 01       	movw	r30, r24
    65fa:	20 83       	st	Z, r18
    65fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    65fe:	98 89       	ldd	r25, Y+16	; 0x10
    6600:	fc 01       	movw	r30, r24
    6602:	84 81       	ldd	r24, Z+4	; 0x04
    6604:	95 81       	ldd	r25, Z+5	; 0x05
    6606:	9c 01       	movw	r18, r24
    6608:	8a 81       	ldd	r24, Y+2	; 0x02
    660a:	9b 81       	ldd	r25, Y+3	; 0x03
    660c:	82 0f       	add	r24, r18
    660e:	93 1f       	adc	r25, r19
    6610:	9b 83       	std	Y+3, r25	; 0x03
    6612:	8a 83       	std	Y+2, r24	; 0x02
    6614:	89 81       	ldd	r24, Y+1	; 0x01
    6616:	88 50       	subi	r24, 0x08	; 8
    6618:	89 83       	std	Y+1, r24	; 0x01
    661a:	89 81       	ldd	r24, Y+1	; 0x01
    661c:	88 30       	cpi	r24, 0x08	; 8
    661e:	08 f1       	brcs	.+66     	; 0x6662 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    6620:	e3 cf       	rjmp	.-58     	; 0x65e8 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x1f4>
    6622:	8f 89       	ldd	r24, Y+23	; 0x17
    6624:	98 8d       	ldd	r25, Y+24	; 0x18
    6626:	89 2b       	or	r24, r25
    6628:	11 f0       	breq	.+4      	; 0x662e <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23a>
    662a:	8f ef       	ldi	r24, 0xFF	; 255
    662c:	01 c0       	rjmp	.+2      	; 0x6630 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23c>
    662e:	80 e0       	ldi	r24, 0x00	; 0
    6630:	8a 87       	std	Y+10, r24	; 0x0a
    6632:	8a 81       	ldd	r24, Y+2	; 0x02
    6634:	9b 81       	ldd	r25, Y+3	; 0x03
    6636:	2a 85       	ldd	r18, Y+10	; 0x0a
    6638:	fc 01       	movw	r30, r24
    663a:	20 83       	st	Z, r18
    663c:	8f 85       	ldd	r24, Y+15	; 0x0f
    663e:	98 89       	ldd	r25, Y+16	; 0x10
    6640:	fc 01       	movw	r30, r24
    6642:	84 81       	ldd	r24, Z+4	; 0x04
    6644:	95 81       	ldd	r25, Z+5	; 0x05
    6646:	9c 01       	movw	r18, r24
    6648:	8a 81       	ldd	r24, Y+2	; 0x02
    664a:	9b 81       	ldd	r25, Y+3	; 0x03
    664c:	82 0f       	add	r24, r18
    664e:	93 1f       	adc	r25, r19
    6650:	9b 83       	std	Y+3, r25	; 0x03
    6652:	8a 83       	std	Y+2, r24	; 0x02
    6654:	89 81       	ldd	r24, Y+1	; 0x01
    6656:	88 50       	subi	r24, 0x08	; 8
    6658:	89 83       	std	Y+1, r24	; 0x01
    665a:	89 81       	ldd	r24, Y+1	; 0x01
    665c:	88 30       	cpi	r24, 0x08	; 8
    665e:	08 f0       	brcs	.+2      	; 0x6662 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x26e>
    6660:	e8 cf       	rjmp	.-48     	; 0x6632 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x23e>
    6662:	89 81       	ldd	r24, Y+1	; 0x01
    6664:	88 23       	and	r24, r24
    6666:	09 f4       	brne	.+2      	; 0x666a <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x276>
    6668:	42 c0       	rjmp	.+132    	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    666a:	89 81       	ldd	r24, Y+1	; 0x01
    666c:	87 70       	andi	r24, 0x07	; 7
    666e:	8c 83       	std	Y+4, r24	; 0x04
    6670:	8c 81       	ldd	r24, Y+4	; 0x04
    6672:	88 2f       	mov	r24, r24
    6674:	90 e0       	ldi	r25, 0x00	; 0
    6676:	86 56       	subi	r24, 0x66	; 102
    6678:	92 4f       	sbci	r25, 0xF2	; 242
    667a:	9c 87       	std	Y+12, r25	; 0x0c
    667c:	8b 87       	std	Y+11, r24	; 0x0b
    667e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6680:	9c 85       	ldd	r25, Y+12	; 0x0c
    6682:	fc 01       	movw	r30, r24
    6684:	84 91       	lpm	r24, Z
    6686:	8d 87       	std	Y+13, r24	; 0x0d
    6688:	8d 85       	ldd	r24, Y+13	; 0x0d
    668a:	8e 87       	std	Y+14, r24	; 0x0e
    668c:	8f 89       	ldd	r24, Y+23	; 0x17
    668e:	98 8d       	ldd	r25, Y+24	; 0x18
    6690:	81 30       	cpi	r24, 0x01	; 1
    6692:	91 05       	cpc	r25, r1
    6694:	31 f0       	breq	.+12     	; 0x66a2 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2ae>
    6696:	81 30       	cpi	r24, 0x01	; 1
    6698:	91 05       	cpc	r25, r1
    669a:	78 f0       	brcs	.+30     	; 0x66ba <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2c6>
    669c:	02 97       	sbiw	r24, 0x02	; 2
    669e:	d9 f0       	breq	.+54     	; 0x66d6 <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2e2>
    66a0:	26 c0       	rjmp	.+76     	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    66a2:	8a 81       	ldd	r24, Y+2	; 0x02
    66a4:	9b 81       	ldd	r25, Y+3	; 0x03
    66a6:	fc 01       	movw	r30, r24
    66a8:	90 81       	ld	r25, Z
    66aa:	8e 85       	ldd	r24, Y+14	; 0x0e
    66ac:	29 2f       	mov	r18, r25
    66ae:	28 2b       	or	r18, r24
    66b0:	8a 81       	ldd	r24, Y+2	; 0x02
    66b2:	9b 81       	ldd	r25, Y+3	; 0x03
    66b4:	fc 01       	movw	r30, r24
    66b6:	20 83       	st	Z, r18
    66b8:	1a c0       	rjmp	.+52     	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    66ba:	8a 81       	ldd	r24, Y+2	; 0x02
    66bc:	9b 81       	ldd	r25, Y+3	; 0x03
    66be:	fc 01       	movw	r30, r24
    66c0:	80 81       	ld	r24, Z
    66c2:	98 2f       	mov	r25, r24
    66c4:	8e 85       	ldd	r24, Y+14	; 0x0e
    66c6:	80 95       	com	r24
    66c8:	89 23       	and	r24, r25
    66ca:	28 2f       	mov	r18, r24
    66cc:	8a 81       	ldd	r24, Y+2	; 0x02
    66ce:	9b 81       	ldd	r25, Y+3	; 0x03
    66d0:	fc 01       	movw	r30, r24
    66d2:	20 83       	st	Z, r18
    66d4:	0c c0       	rjmp	.+24     	; 0x66ee <_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij+0x2fa>
    66d6:	8a 81       	ldd	r24, Y+2	; 0x02
    66d8:	9b 81       	ldd	r25, Y+3	; 0x03
    66da:	fc 01       	movw	r30, r24
    66dc:	90 81       	ld	r25, Z
    66de:	8e 85       	ldd	r24, Y+14	; 0x0e
    66e0:	29 2f       	mov	r18, r25
    66e2:	28 27       	eor	r18, r24
    66e4:	8a 81       	ldd	r24, Y+2	; 0x02
    66e6:	9b 81       	ldd	r25, Y+3	; 0x03
    66e8:	fc 01       	movw	r30, r24
    66ea:	20 83       	st	Z, r18
    66ec:	00 00       	nop
    66ee:	00 00       	nop
    66f0:	68 96       	adiw	r28, 0x18	; 24
    66f2:	0f b6       	in	r0, 0x3f	; 63
    66f4:	f8 94       	cli
    66f6:	de bf       	out	0x3e, r29	; 62
    66f8:	0f be       	out	0x3f, r0	; 63
    66fa:	cd bf       	out	0x3d, r28	; 61
    66fc:	df 91       	pop	r29
    66fe:	cf 91       	pop	r28
    6700:	1f 91       	pop	r17
    6702:	0f 91       	pop	r16
    6704:	08 95       	ret

00006706 <_ZN16Adafruit_SSD13067displayEv>:
    6706:	cf 93       	push	r28
    6708:	df 93       	push	r29
    670a:	cd b7       	in	r28, 0x3d	; 61
    670c:	de b7       	in	r29, 0x3e	; 62
    670e:	2c 97       	sbiw	r28, 0x0c	; 12
    6710:	0f b6       	in	r0, 0x3f	; 63
    6712:	f8 94       	cli
    6714:	de bf       	out	0x3e, r29	; 62
    6716:	0f be       	out	0x3f, r0	; 63
    6718:	cd bf       	out	0x3d, r28	; 61
    671a:	9c 87       	std	Y+12, r25	; 0x0c
    671c:	8b 87       	std	Y+11, r24	; 0x0b
    671e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6720:	9c 85       	ldd	r25, Y+12	; 0x0c
    6722:	fc 01       	movw	r30, r24
    6724:	85 8d       	ldd	r24, Z+29	; 0x1d
    6726:	96 8d       	ldd	r25, Z+30	; 0x1e
    6728:	89 2b       	or	r24, r25
    672a:	91 f0       	breq	.+36     	; 0x6750 <_ZN16Adafruit_SSD13067displayEv+0x4a>
    672c:	8b 85       	ldd	r24, Y+11	; 0x0b
    672e:	9c 85       	ldd	r25, Y+12	; 0x0c
    6730:	fc 01       	movw	r30, r24
    6732:	85 a9       	ldd	r24, Z+53	; 0x35
    6734:	96 a9       	ldd	r25, Z+54	; 0x36
    6736:	a7 a9       	ldd	r26, Z+55	; 0x37
    6738:	b0 ad       	ldd	r27, Z+56	; 0x38
    673a:	2b 85       	ldd	r18, Y+11	; 0x0b
    673c:	3c 85       	ldd	r19, Y+12	; 0x0c
    673e:	f9 01       	movw	r30, r18
    6740:	25 8d       	ldd	r18, Z+29	; 0x1d
    6742:	36 8d       	ldd	r19, Z+30	; 0x1e
    6744:	ac 01       	movw	r20, r24
    6746:	bd 01       	movw	r22, r26
    6748:	c9 01       	movw	r24, r18
    674a:	0e 94 a4 3c 	call	0x7948	; 0x7948 <_ZN7TwoWire8setClockEm>
    674e:	23 c0       	rjmp	.+70     	; 0x6796 <_ZN16Adafruit_SSD13067displayEv+0x90>
    6750:	8b 85       	ldd	r24, Y+11	; 0x0b
    6752:	9c 85       	ldd	r25, Y+12	; 0x0c
    6754:	fc 01       	movw	r30, r24
    6756:	83 8d       	ldd	r24, Z+27	; 0x1b
    6758:	94 8d       	ldd	r25, Z+28	; 0x1c
    675a:	89 2b       	or	r24, r25
    675c:	39 f0       	breq	.+14     	; 0x676c <_ZN16Adafruit_SSD13067displayEv+0x66>
    675e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6760:	9c 85       	ldd	r25, Y+12	; 0x0c
    6762:	fc 01       	movw	r30, r24
    6764:	86 ad       	ldd	r24, Z+62	; 0x3e
    6766:	97 ad       	ldd	r25, Z+63	; 0x3f
    6768:	0e 94 39 19 	call	0x3272	; 0x3272 <_ZN8SPIClass16beginTransactionE11SPISettings>
    676c:	8b 85       	ldd	r24, Y+11	; 0x0b
    676e:	9c 85       	ldd	r25, Y+12	; 0x0c
    6770:	fc 01       	movw	r30, r24
    6772:	87 a5       	ldd	r24, Z+47	; 0x2f
    6774:	90 a9       	ldd	r25, Z+48	; 0x30
    6776:	2b 85       	ldd	r18, Y+11	; 0x0b
    6778:	3c 85       	ldd	r19, Y+12	; 0x0c
    677a:	f9 01       	movw	r30, r18
    677c:	27 a5       	ldd	r18, Z+47	; 0x2f
    677e:	30 a9       	ldd	r19, Z+48	; 0x30
    6780:	f9 01       	movw	r30, r18
    6782:	20 81       	ld	r18, Z
    6784:	42 2f       	mov	r20, r18
    6786:	2b 85       	ldd	r18, Y+11	; 0x0b
    6788:	3c 85       	ldd	r19, Y+12	; 0x0c
    678a:	f9 01       	movw	r30, r18
    678c:	24 a9       	ldd	r18, Z+52	; 0x34
    678e:	20 95       	com	r18
    6790:	24 23       	and	r18, r20
    6792:	fc 01       	movw	r30, r24
    6794:	20 83       	st	Z, r18
    6796:	25 e0       	ldi	r18, 0x05	; 5
    6798:	8b 85       	ldd	r24, Y+11	; 0x0b
    679a:	9c 85       	ldd	r25, Y+12	; 0x0c
    679c:	42 2f       	mov	r20, r18
    679e:	62 ea       	ldi	r22, 0xA2	; 162
    67a0:	7d e0       	ldi	r23, 0x0D	; 13
    67a2:	0e 94 82 28 	call	0x5104	; 0x5104 <_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh>
    67a6:	8b 85       	ldd	r24, Y+11	; 0x0b
    67a8:	9c 85       	ldd	r25, Y+12	; 0x0c
    67aa:	fc 01       	movw	r30, r24
    67ac:	84 81       	ldd	r24, Z+4	; 0x04
    67ae:	95 81       	ldd	r25, Z+5	; 0x05
    67b0:	2f ef       	ldi	r18, 0xFF	; 255
    67b2:	28 0f       	add	r18, r24
    67b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    67b6:	9c 85       	ldd	r25, Y+12	; 0x0c
    67b8:	62 2f       	mov	r22, r18
    67ba:	0e 94 9f 27 	call	0x4f3e	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
    67be:	8b 85       	ldd	r24, Y+11	; 0x0b
    67c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    67c2:	fc 01       	movw	r30, r24
    67c4:	24 81       	ldd	r18, Z+4	; 0x04
    67c6:	35 81       	ldd	r19, Z+5	; 0x05
    67c8:	8b 85       	ldd	r24, Y+11	; 0x0b
    67ca:	9c 85       	ldd	r25, Y+12	; 0x0c
    67cc:	fc 01       	movw	r30, r24
    67ce:	86 81       	ldd	r24, Z+6	; 0x06
    67d0:	97 81       	ldd	r25, Z+7	; 0x07
    67d2:	07 96       	adiw	r24, 0x07	; 7
    67d4:	99 23       	and	r25, r25
    67d6:	0c f4       	brge	.+2      	; 0x67da <_ZN16Adafruit_SSD13067displayEv+0xd4>
    67d8:	07 96       	adiw	r24, 0x07	; 7
    67da:	95 95       	asr	r25
    67dc:	87 95       	ror	r24
    67de:	95 95       	asr	r25
    67e0:	87 95       	ror	r24
    67e2:	95 95       	asr	r25
    67e4:	87 95       	ror	r24
    67e6:	ac 01       	movw	r20, r24
    67e8:	24 9f       	mul	r18, r20
    67ea:	c0 01       	movw	r24, r0
    67ec:	25 9f       	mul	r18, r21
    67ee:	90 0d       	add	r25, r0
    67f0:	34 9f       	mul	r19, r20
    67f2:	90 0d       	add	r25, r0
    67f4:	11 24       	eor	r1, r1
    67f6:	9a 83       	std	Y+2, r25	; 0x02
    67f8:	89 83       	std	Y+1, r24	; 0x01
    67fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    67fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    67fe:	fc 01       	movw	r30, r24
    6800:	87 8d       	ldd	r24, Z+31	; 0x1f
    6802:	90 a1       	ldd	r25, Z+32	; 0x20
    6804:	9c 83       	std	Y+4, r25	; 0x04
    6806:	8b 83       	std	Y+3, r24	; 0x03
    6808:	8b 85       	ldd	r24, Y+11	; 0x0b
    680a:	9c 85       	ldd	r25, Y+12	; 0x0c
    680c:	fc 01       	movw	r30, r24
    680e:	85 8d       	ldd	r24, Z+29	; 0x1d
    6810:	96 8d       	ldd	r25, Z+30	; 0x1e
    6812:	89 2b       	or	r24, r25
    6814:	09 f4       	brne	.+2      	; 0x6818 <_ZN16Adafruit_SSD13067displayEv+0x112>
    6816:	8f c0       	rjmp	.+286    	; 0x6936 <_ZN16Adafruit_SSD13067displayEv+0x230>
    6818:	8b 85       	ldd	r24, Y+11	; 0x0b
    681a:	9c 85       	ldd	r25, Y+12	; 0x0c
    681c:	fc 01       	movw	r30, r24
    681e:	81 a1       	ldd	r24, Z+33	; 0x21
    6820:	28 2f       	mov	r18, r24
    6822:	88 0f       	add	r24, r24
    6824:	33 0b       	sbc	r19, r19
    6826:	8b 85       	ldd	r24, Y+11	; 0x0b
    6828:	9c 85       	ldd	r25, Y+12	; 0x0c
    682a:	fc 01       	movw	r30, r24
    682c:	85 8d       	ldd	r24, Z+29	; 0x1d
    682e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6830:	b9 01       	movw	r22, r18
    6832:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    6836:	8b 85       	ldd	r24, Y+11	; 0x0b
    6838:	9c 85       	ldd	r25, Y+12	; 0x0c
    683a:	fc 01       	movw	r30, r24
    683c:	85 8d       	ldd	r24, Z+29	; 0x1d
    683e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6840:	fc 01       	movw	r30, r24
    6842:	80 81       	ld	r24, Z
    6844:	91 81       	ldd	r25, Z+1	; 0x01
    6846:	fc 01       	movw	r30, r24
    6848:	20 81       	ld	r18, Z
    684a:	31 81       	ldd	r19, Z+1	; 0x01
    684c:	8b 85       	ldd	r24, Y+11	; 0x0b
    684e:	9c 85       	ldd	r25, Y+12	; 0x0c
    6850:	fc 01       	movw	r30, r24
    6852:	85 8d       	ldd	r24, Z+29	; 0x1d
    6854:	96 8d       	ldd	r25, Z+30	; 0x1e
    6856:	60 e4       	ldi	r22, 0x40	; 64
    6858:	f9 01       	movw	r30, r18
    685a:	19 95       	eicall
    685c:	81 e0       	ldi	r24, 0x01	; 1
    685e:	90 e0       	ldi	r25, 0x00	; 0
    6860:	9e 83       	std	Y+6, r25	; 0x06
    6862:	8d 83       	std	Y+5, r24	; 0x05
    6864:	89 81       	ldd	r24, Y+1	; 0x01
    6866:	9a 81       	ldd	r25, Y+2	; 0x02
    6868:	9c 01       	movw	r18, r24
    686a:	21 50       	subi	r18, 0x01	; 1
    686c:	31 09       	sbc	r19, r1
    686e:	3a 83       	std	Y+2, r19	; 0x02
    6870:	29 83       	std	Y+1, r18	; 0x01
    6872:	21 e0       	ldi	r18, 0x01	; 1
    6874:	89 2b       	or	r24, r25
    6876:	09 f4       	brne	.+2      	; 0x687a <_ZN16Adafruit_SSD13067displayEv+0x174>
    6878:	20 e0       	ldi	r18, 0x00	; 0
    687a:	22 23       	and	r18, r18
    687c:	09 f4       	brne	.+2      	; 0x6880 <_ZN16Adafruit_SSD13067displayEv+0x17a>
    687e:	53 c0       	rjmp	.+166    	; 0x6926 <_ZN16Adafruit_SSD13067displayEv+0x220>
    6880:	8d 81       	ldd	r24, Y+5	; 0x05
    6882:	9e 81       	ldd	r25, Y+6	; 0x06
    6884:	80 97       	sbiw	r24, 0x20	; 32
    6886:	68 f1       	brcs	.+90     	; 0x68e2 <_ZN16Adafruit_SSD13067displayEv+0x1dc>
    6888:	8b 85       	ldd	r24, Y+11	; 0x0b
    688a:	9c 85       	ldd	r25, Y+12	; 0x0c
    688c:	fc 01       	movw	r30, r24
    688e:	85 8d       	ldd	r24, Z+29	; 0x1d
    6890:	96 8d       	ldd	r25, Z+30	; 0x1e
    6892:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    6896:	8b 85       	ldd	r24, Y+11	; 0x0b
    6898:	9c 85       	ldd	r25, Y+12	; 0x0c
    689a:	fc 01       	movw	r30, r24
    689c:	81 a1       	ldd	r24, Z+33	; 0x21
    689e:	28 2f       	mov	r18, r24
    68a0:	88 0f       	add	r24, r24
    68a2:	33 0b       	sbc	r19, r19
    68a4:	8b 85       	ldd	r24, Y+11	; 0x0b
    68a6:	9c 85       	ldd	r25, Y+12	; 0x0c
    68a8:	fc 01       	movw	r30, r24
    68aa:	85 8d       	ldd	r24, Z+29	; 0x1d
    68ac:	96 8d       	ldd	r25, Z+30	; 0x1e
    68ae:	b9 01       	movw	r22, r18
    68b0:	0e 94 91 3d 	call	0x7b22	; 0x7b22 <_ZN7TwoWire17beginTransmissionEi>
    68b4:	8b 85       	ldd	r24, Y+11	; 0x0b
    68b6:	9c 85       	ldd	r25, Y+12	; 0x0c
    68b8:	fc 01       	movw	r30, r24
    68ba:	85 8d       	ldd	r24, Z+29	; 0x1d
    68bc:	96 8d       	ldd	r25, Z+30	; 0x1e
    68be:	fc 01       	movw	r30, r24
    68c0:	80 81       	ld	r24, Z
    68c2:	91 81       	ldd	r25, Z+1	; 0x01
    68c4:	fc 01       	movw	r30, r24
    68c6:	20 81       	ld	r18, Z
    68c8:	31 81       	ldd	r19, Z+1	; 0x01
    68ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    68cc:	9c 85       	ldd	r25, Y+12	; 0x0c
    68ce:	fc 01       	movw	r30, r24
    68d0:	85 8d       	ldd	r24, Z+29	; 0x1d
    68d2:	96 8d       	ldd	r25, Z+30	; 0x1e
    68d4:	60 e4       	ldi	r22, 0x40	; 64
    68d6:	f9 01       	movw	r30, r18
    68d8:	19 95       	eicall
    68da:	81 e0       	ldi	r24, 0x01	; 1
    68dc:	90 e0       	ldi	r25, 0x00	; 0
    68de:	9e 83       	std	Y+6, r25	; 0x06
    68e0:	8d 83       	std	Y+5, r24	; 0x05
    68e2:	8b 85       	ldd	r24, Y+11	; 0x0b
    68e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    68e6:	fc 01       	movw	r30, r24
    68e8:	85 8d       	ldd	r24, Z+29	; 0x1d
    68ea:	96 8d       	ldd	r25, Z+30	; 0x1e
    68ec:	fc 01       	movw	r30, r24
    68ee:	80 81       	ld	r24, Z
    68f0:	91 81       	ldd	r25, Z+1	; 0x01
    68f2:	fc 01       	movw	r30, r24
    68f4:	20 81       	ld	r18, Z
    68f6:	31 81       	ldd	r19, Z+1	; 0x01
    68f8:	8b 81       	ldd	r24, Y+3	; 0x03
    68fa:	9c 81       	ldd	r25, Y+4	; 0x04
    68fc:	ac 01       	movw	r20, r24
    68fe:	4f 5f       	subi	r20, 0xFF	; 255
    6900:	5f 4f       	sbci	r21, 0xFF	; 255
    6902:	5c 83       	std	Y+4, r21	; 0x04
    6904:	4b 83       	std	Y+3, r20	; 0x03
    6906:	fc 01       	movw	r30, r24
    6908:	40 81       	ld	r20, Z
    690a:	8b 85       	ldd	r24, Y+11	; 0x0b
    690c:	9c 85       	ldd	r25, Y+12	; 0x0c
    690e:	fc 01       	movw	r30, r24
    6910:	85 8d       	ldd	r24, Z+29	; 0x1d
    6912:	96 8d       	ldd	r25, Z+30	; 0x1e
    6914:	64 2f       	mov	r22, r20
    6916:	f9 01       	movw	r30, r18
    6918:	19 95       	eicall
    691a:	8d 81       	ldd	r24, Y+5	; 0x05
    691c:	9e 81       	ldd	r25, Y+6	; 0x06
    691e:	01 96       	adiw	r24, 0x01	; 1
    6920:	9e 83       	std	Y+6, r25	; 0x06
    6922:	8d 83       	std	Y+5, r24	; 0x05
    6924:	9f cf       	rjmp	.-194    	; 0x6864 <_ZN16Adafruit_SSD13067displayEv+0x15e>
    6926:	8b 85       	ldd	r24, Y+11	; 0x0b
    6928:	9c 85       	ldd	r25, Y+12	; 0x0c
    692a:	fc 01       	movw	r30, r24
    692c:	85 8d       	ldd	r24, Z+29	; 0x1d
    692e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6930:	0e 94 cc 3d 	call	0x7b98	; 0x7b98 <_ZN7TwoWire15endTransmissionEv>
    6934:	9c c0       	rjmp	.+312    	; 0x6a6e <_ZN16Adafruit_SSD13067displayEv+0x368>
    6936:	8b 85       	ldd	r24, Y+11	; 0x0b
    6938:	9c 85       	ldd	r25, Y+12	; 0x0c
    693a:	fc 01       	movw	r30, r24
    693c:	85 a5       	ldd	r24, Z+45	; 0x2d
    693e:	96 a5       	ldd	r25, Z+46	; 0x2e
    6940:	2b 85       	ldd	r18, Y+11	; 0x0b
    6942:	3c 85       	ldd	r19, Y+12	; 0x0c
    6944:	f9 01       	movw	r30, r18
    6946:	25 a5       	ldd	r18, Z+45	; 0x2d
    6948:	36 a5       	ldd	r19, Z+46	; 0x2e
    694a:	f9 01       	movw	r30, r18
    694c:	40 81       	ld	r20, Z
    694e:	2b 85       	ldd	r18, Y+11	; 0x0b
    6950:	3c 85       	ldd	r19, Y+12	; 0x0c
    6952:	f9 01       	movw	r30, r18
    6954:	23 a9       	ldd	r18, Z+51	; 0x33
    6956:	24 2b       	or	r18, r20
    6958:	fc 01       	movw	r30, r24
    695a:	20 83       	st	Z, r18
    695c:	89 81       	ldd	r24, Y+1	; 0x01
    695e:	9a 81       	ldd	r25, Y+2	; 0x02
    6960:	9c 01       	movw	r18, r24
    6962:	21 50       	subi	r18, 0x01	; 1
    6964:	31 09       	sbc	r19, r1
    6966:	3a 83       	std	Y+2, r19	; 0x02
    6968:	29 83       	std	Y+1, r18	; 0x01
    696a:	21 e0       	ldi	r18, 0x01	; 1
    696c:	89 2b       	or	r24, r25
    696e:	09 f4       	brne	.+2      	; 0x6972 <_ZN16Adafruit_SSD13067displayEv+0x26c>
    6970:	20 e0       	ldi	r18, 0x00	; 0
    6972:	22 23       	and	r18, r18
    6974:	09 f4       	brne	.+2      	; 0x6978 <_ZN16Adafruit_SSD13067displayEv+0x272>
    6976:	7b c0       	rjmp	.+246    	; 0x6a6e <_ZN16Adafruit_SSD13067displayEv+0x368>
    6978:	8b 81       	ldd	r24, Y+3	; 0x03
    697a:	9c 81       	ldd	r25, Y+4	; 0x04
    697c:	9c 01       	movw	r18, r24
    697e:	2f 5f       	subi	r18, 0xFF	; 255
    6980:	3f 4f       	sbci	r19, 0xFF	; 255
    6982:	3c 83       	std	Y+4, r19	; 0x04
    6984:	2b 83       	std	Y+3, r18	; 0x03
    6986:	fc 01       	movw	r30, r24
    6988:	20 81       	ld	r18, Z
    698a:	8b 85       	ldd	r24, Y+11	; 0x0b
    698c:	9c 85       	ldd	r25, Y+12	; 0x0c
    698e:	98 87       	std	Y+8, r25	; 0x08
    6990:	8f 83       	std	Y+7, r24	; 0x07
    6992:	29 87       	std	Y+9, r18	; 0x09
    6994:	8f 81       	ldd	r24, Y+7	; 0x07
    6996:	98 85       	ldd	r25, Y+8	; 0x08
    6998:	fc 01       	movw	r30, r24
    699a:	83 8d       	ldd	r24, Z+27	; 0x1b
    699c:	94 8d       	ldd	r25, Z+28	; 0x1c
    699e:	89 2b       	or	r24, r25
    69a0:	21 f0       	breq	.+8      	; 0x69aa <_ZN16Adafruit_SSD13067displayEv+0x2a4>
    69a2:	89 85       	ldd	r24, Y+9	; 0x09
    69a4:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN8SPIClass8transferEh>
    69a8:	d9 cf       	rjmp	.-78     	; 0x695c <_ZN16Adafruit_SSD13067displayEv+0x256>
    69aa:	80 e8       	ldi	r24, 0x80	; 128
    69ac:	8a 87       	std	Y+10, r24	; 0x0a
    69ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    69b0:	88 23       	and	r24, r24
    69b2:	a1 f2       	breq	.-88     	; 0x695c <_ZN16Adafruit_SSD13067displayEv+0x256>
    69b4:	99 85       	ldd	r25, Y+9	; 0x09
    69b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    69b8:	89 23       	and	r24, r25
    69ba:	88 23       	and	r24, r24
    69bc:	a1 f0       	breq	.+40     	; 0x69e6 <_ZN16Adafruit_SSD13067displayEv+0x2e0>
    69be:	8f 81       	ldd	r24, Y+7	; 0x07
    69c0:	98 85       	ldd	r25, Y+8	; 0x08
    69c2:	fc 01       	movw	r30, r24
    69c4:	81 a5       	ldd	r24, Z+41	; 0x29
    69c6:	92 a5       	ldd	r25, Z+42	; 0x2a
    69c8:	2f 81       	ldd	r18, Y+7	; 0x07
    69ca:	38 85       	ldd	r19, Y+8	; 0x08
    69cc:	f9 01       	movw	r30, r18
    69ce:	21 a5       	ldd	r18, Z+41	; 0x29
    69d0:	32 a5       	ldd	r19, Z+42	; 0x2a
    69d2:	f9 01       	movw	r30, r18
    69d4:	40 81       	ld	r20, Z
    69d6:	2f 81       	ldd	r18, Y+7	; 0x07
    69d8:	38 85       	ldd	r19, Y+8	; 0x08
    69da:	f9 01       	movw	r30, r18
    69dc:	21 a9       	ldd	r18, Z+49	; 0x31
    69de:	24 2b       	or	r18, r20
    69e0:	fc 01       	movw	r30, r24
    69e2:	20 83       	st	Z, r18
    69e4:	15 c0       	rjmp	.+42     	; 0x6a10 <_ZN16Adafruit_SSD13067displayEv+0x30a>
    69e6:	8f 81       	ldd	r24, Y+7	; 0x07
    69e8:	98 85       	ldd	r25, Y+8	; 0x08
    69ea:	fc 01       	movw	r30, r24
    69ec:	81 a5       	ldd	r24, Z+41	; 0x29
    69ee:	92 a5       	ldd	r25, Z+42	; 0x2a
    69f0:	2f 81       	ldd	r18, Y+7	; 0x07
    69f2:	38 85       	ldd	r19, Y+8	; 0x08
    69f4:	f9 01       	movw	r30, r18
    69f6:	21 a5       	ldd	r18, Z+41	; 0x29
    69f8:	32 a5       	ldd	r19, Z+42	; 0x2a
    69fa:	f9 01       	movw	r30, r18
    69fc:	20 81       	ld	r18, Z
    69fe:	42 2f       	mov	r20, r18
    6a00:	2f 81       	ldd	r18, Y+7	; 0x07
    6a02:	38 85       	ldd	r19, Y+8	; 0x08
    6a04:	f9 01       	movw	r30, r18
    6a06:	21 a9       	ldd	r18, Z+49	; 0x31
    6a08:	20 95       	com	r18
    6a0a:	24 23       	and	r18, r20
    6a0c:	fc 01       	movw	r30, r24
    6a0e:	20 83       	st	Z, r18
    6a10:	8f 81       	ldd	r24, Y+7	; 0x07
    6a12:	98 85       	ldd	r25, Y+8	; 0x08
    6a14:	fc 01       	movw	r30, r24
    6a16:	83 a5       	ldd	r24, Z+43	; 0x2b
    6a18:	94 a5       	ldd	r25, Z+44	; 0x2c
    6a1a:	2f 81       	ldd	r18, Y+7	; 0x07
    6a1c:	38 85       	ldd	r19, Y+8	; 0x08
    6a1e:	f9 01       	movw	r30, r18
    6a20:	23 a5       	ldd	r18, Z+43	; 0x2b
    6a22:	34 a5       	ldd	r19, Z+44	; 0x2c
    6a24:	f9 01       	movw	r30, r18
    6a26:	40 81       	ld	r20, Z
    6a28:	2f 81       	ldd	r18, Y+7	; 0x07
    6a2a:	38 85       	ldd	r19, Y+8	; 0x08
    6a2c:	f9 01       	movw	r30, r18
    6a2e:	22 a9       	ldd	r18, Z+50	; 0x32
    6a30:	24 2b       	or	r18, r20
    6a32:	fc 01       	movw	r30, r24
    6a34:	20 83       	st	Z, r18
    6a36:	8f 81       	ldd	r24, Y+7	; 0x07
    6a38:	98 85       	ldd	r25, Y+8	; 0x08
    6a3a:	fc 01       	movw	r30, r24
    6a3c:	83 a5       	ldd	r24, Z+43	; 0x2b
    6a3e:	94 a5       	ldd	r25, Z+44	; 0x2c
    6a40:	2f 81       	ldd	r18, Y+7	; 0x07
    6a42:	38 85       	ldd	r19, Y+8	; 0x08
    6a44:	f9 01       	movw	r30, r18
    6a46:	23 a5       	ldd	r18, Z+43	; 0x2b
    6a48:	34 a5       	ldd	r19, Z+44	; 0x2c
    6a4a:	f9 01       	movw	r30, r18
    6a4c:	20 81       	ld	r18, Z
    6a4e:	42 2f       	mov	r20, r18
    6a50:	2f 81       	ldd	r18, Y+7	; 0x07
    6a52:	38 85       	ldd	r19, Y+8	; 0x08
    6a54:	f9 01       	movw	r30, r18
    6a56:	22 a9       	ldd	r18, Z+50	; 0x32
    6a58:	20 95       	com	r18
    6a5a:	24 23       	and	r18, r20
    6a5c:	fc 01       	movw	r30, r24
    6a5e:	20 83       	st	Z, r18
    6a60:	8a 85       	ldd	r24, Y+10	; 0x0a
    6a62:	88 2f       	mov	r24, r24
    6a64:	90 e0       	ldi	r25, 0x00	; 0
    6a66:	95 95       	asr	r25
    6a68:	87 95       	ror	r24
    6a6a:	8a 87       	std	Y+10, r24	; 0x0a
    6a6c:	a0 cf       	rjmp	.-192    	; 0x69ae <_ZN16Adafruit_SSD13067displayEv+0x2a8>
    6a6e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6a70:	9c 85       	ldd	r25, Y+12	; 0x0c
    6a72:	fc 01       	movw	r30, r24
    6a74:	85 8d       	ldd	r24, Z+29	; 0x1d
    6a76:	96 8d       	ldd	r25, Z+30	; 0x1e
    6a78:	89 2b       	or	r24, r25
    6a7a:	89 f0       	breq	.+34     	; 0x6a9e <_ZN16Adafruit_SSD13067displayEv+0x398>
    6a7c:	8b 85       	ldd	r24, Y+11	; 0x0b
    6a7e:	9c 85       	ldd	r25, Y+12	; 0x0c
    6a80:	fc 01       	movw	r30, r24
    6a82:	81 ad       	ldd	r24, Z+57	; 0x39
    6a84:	92 ad       	ldd	r25, Z+58	; 0x3a
    6a86:	a3 ad       	ldd	r26, Z+59	; 0x3b
    6a88:	b4 ad       	ldd	r27, Z+60	; 0x3c
    6a8a:	2b 85       	ldd	r18, Y+11	; 0x0b
    6a8c:	3c 85       	ldd	r19, Y+12	; 0x0c
    6a8e:	f9 01       	movw	r30, r18
    6a90:	25 8d       	ldd	r18, Z+29	; 0x1d
    6a92:	36 8d       	ldd	r19, Z+30	; 0x1e
    6a94:	ac 01       	movw	r20, r24
    6a96:	bd 01       	movw	r22, r26
    6a98:	c9 01       	movw	r24, r18
    6a9a:	56 d7       	rcall	.+3756   	; 0x7948 <_ZN7TwoWire8setClockEm>
    6a9c:	1c c0       	rjmp	.+56     	; 0x6ad6 <_ZN16Adafruit_SSD13067displayEv+0x3d0>
    6a9e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6aa0:	9c 85       	ldd	r25, Y+12	; 0x0c
    6aa2:	fc 01       	movw	r30, r24
    6aa4:	87 a5       	ldd	r24, Z+47	; 0x2f
    6aa6:	90 a9       	ldd	r25, Z+48	; 0x30
    6aa8:	2b 85       	ldd	r18, Y+11	; 0x0b
    6aaa:	3c 85       	ldd	r19, Y+12	; 0x0c
    6aac:	f9 01       	movw	r30, r18
    6aae:	27 a5       	ldd	r18, Z+47	; 0x2f
    6ab0:	30 a9       	ldd	r19, Z+48	; 0x30
    6ab2:	f9 01       	movw	r30, r18
    6ab4:	40 81       	ld	r20, Z
    6ab6:	2b 85       	ldd	r18, Y+11	; 0x0b
    6ab8:	3c 85       	ldd	r19, Y+12	; 0x0c
    6aba:	f9 01       	movw	r30, r18
    6abc:	24 a9       	ldd	r18, Z+52	; 0x34
    6abe:	24 2b       	or	r18, r20
    6ac0:	fc 01       	movw	r30, r24
    6ac2:	20 83       	st	Z, r18
    6ac4:	8b 85       	ldd	r24, Y+11	; 0x0b
    6ac6:	9c 85       	ldd	r25, Y+12	; 0x0c
    6ac8:	fc 01       	movw	r30, r24
    6aca:	83 8d       	ldd	r24, Z+27	; 0x1b
    6acc:	94 8d       	ldd	r25, Z+28	; 0x1c
    6ace:	89 2b       	or	r24, r25
    6ad0:	11 f0       	breq	.+4      	; 0x6ad6 <_ZN16Adafruit_SSD13067displayEv+0x3d0>
    6ad2:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <_ZN8SPIClass14endTransactionEv>
    6ad6:	00 00       	nop
    6ad8:	2c 96       	adiw	r28, 0x0c	; 12
    6ada:	0f b6       	in	r0, 0x3f	; 63
    6adc:	f8 94       	cli
    6ade:	de bf       	out	0x3e, r29	; 62
    6ae0:	0f be       	out	0x3f, r0	; 63
    6ae2:	cd bf       	out	0x3d, r28	; 61
    6ae4:	df 91       	pop	r29
    6ae6:	cf 91       	pop	r28
    6ae8:	08 95       	ret

00006aea <_ZN16Adafruit_SSD130613invertDisplayEb>:
            display() function -- buffer contents are not changed, rather a
            different pixel mode of the display hardware is used. When
            enabled, drawing SSD1306_BLACK (value 0) pixels will actually draw
   white, SSD1306_WHITE (value 1) will draw black.
*/
void Adafruit_SSD1306::invertDisplay(bool i) {
    6aea:	cf 93       	push	r28
    6aec:	df 93       	push	r29
    6aee:	00 d0       	rcall	.+0      	; 0x6af0 <_ZN16Adafruit_SSD130613invertDisplayEb+0x6>
    6af0:	cd b7       	in	r28, 0x3d	; 61
    6af2:	de b7       	in	r29, 0x3e	; 62
    6af4:	9a 83       	std	Y+2, r25	; 0x02
    6af6:	89 83       	std	Y+1, r24	; 0x01
    6af8:	6b 83       	std	Y+3, r22	; 0x03
  TRANSACTION_START
    6afa:	89 81       	ldd	r24, Y+1	; 0x01
    6afc:	9a 81       	ldd	r25, Y+2	; 0x02
    6afe:	fc 01       	movw	r30, r24
    6b00:	85 8d       	ldd	r24, Z+29	; 0x1d
    6b02:	96 8d       	ldd	r25, Z+30	; 0x1e
    6b04:	89 2b       	or	r24, r25
    6b06:	89 f0       	breq	.+34     	; 0x6b2a <_ZN16Adafruit_SSD130613invertDisplayEb+0x40>
    6b08:	89 81       	ldd	r24, Y+1	; 0x01
    6b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b0c:	fc 01       	movw	r30, r24
    6b0e:	85 a9       	ldd	r24, Z+53	; 0x35
    6b10:	96 a9       	ldd	r25, Z+54	; 0x36
    6b12:	a7 a9       	ldd	r26, Z+55	; 0x37
    6b14:	b0 ad       	ldd	r27, Z+56	; 0x38
    6b16:	29 81       	ldd	r18, Y+1	; 0x01
    6b18:	3a 81       	ldd	r19, Y+2	; 0x02
    6b1a:	f9 01       	movw	r30, r18
    6b1c:	25 8d       	ldd	r18, Z+29	; 0x1d
    6b1e:	36 8d       	ldd	r19, Z+30	; 0x1e
    6b20:	ac 01       	movw	r20, r24
    6b22:	bd 01       	movw	r22, r26
    6b24:	c9 01       	movw	r24, r18
    6b26:	10 d7       	rcall	.+3616   	; 0x7948 <_ZN7TwoWire8setClockEm>
    6b28:	23 c0       	rjmp	.+70     	; 0x6b70 <_ZN16Adafruit_SSD130613invertDisplayEb+0x86>
    6b2a:	89 81       	ldd	r24, Y+1	; 0x01
    6b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    6b2e:	fc 01       	movw	r30, r24
    6b30:	83 8d       	ldd	r24, Z+27	; 0x1b
    6b32:	94 8d       	ldd	r25, Z+28	; 0x1c
    6b34:	89 2b       	or	r24, r25
    6b36:	39 f0       	breq	.+14     	; 0x6b46 <_ZN16Adafruit_SSD130613invertDisplayEb+0x5c>
    6b38:	89 81       	ldd	r24, Y+1	; 0x01
    6b3a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b3c:	fc 01       	movw	r30, r24
    6b3e:	86 ad       	ldd	r24, Z+62	; 0x3e
    6b40:	97 ad       	ldd	r25, Z+63	; 0x3f
    6b42:	0e 94 39 19 	call	0x3272	; 0x3272 <_ZN8SPIClass16beginTransactionE11SPISettings>
    6b46:	89 81       	ldd	r24, Y+1	; 0x01
    6b48:	9a 81       	ldd	r25, Y+2	; 0x02
    6b4a:	fc 01       	movw	r30, r24
    6b4c:	87 a5       	ldd	r24, Z+47	; 0x2f
    6b4e:	90 a9       	ldd	r25, Z+48	; 0x30
    6b50:	29 81       	ldd	r18, Y+1	; 0x01
    6b52:	3a 81       	ldd	r19, Y+2	; 0x02
    6b54:	f9 01       	movw	r30, r18
    6b56:	27 a5       	ldd	r18, Z+47	; 0x2f
    6b58:	30 a9       	ldd	r19, Z+48	; 0x30
    6b5a:	f9 01       	movw	r30, r18
    6b5c:	20 81       	ld	r18, Z
    6b5e:	42 2f       	mov	r20, r18
    6b60:	29 81       	ldd	r18, Y+1	; 0x01
    6b62:	3a 81       	ldd	r19, Y+2	; 0x02
    6b64:	f9 01       	movw	r30, r18
    6b66:	24 a9       	ldd	r18, Z+52	; 0x34
    6b68:	20 95       	com	r18
    6b6a:	24 23       	and	r18, r20
    6b6c:	fc 01       	movw	r30, r24
    6b6e:	20 83       	st	Z, r18
  ssd1306_command1(i ? SSD1306_INVERTDISPLAY : SSD1306_NORMALDISPLAY);
    6b70:	8b 81       	ldd	r24, Y+3	; 0x03
    6b72:	88 23       	and	r24, r24
    6b74:	11 f0       	breq	.+4      	; 0x6b7a <_ZN16Adafruit_SSD130613invertDisplayEb+0x90>
    6b76:	27 ea       	ldi	r18, 0xA7	; 167
    6b78:	01 c0       	rjmp	.+2      	; 0x6b7c <_ZN16Adafruit_SSD130613invertDisplayEb+0x92>
    6b7a:	26 ea       	ldi	r18, 0xA6	; 166
    6b7c:	89 81       	ldd	r24, Y+1	; 0x01
    6b7e:	9a 81       	ldd	r25, Y+2	; 0x02
    6b80:	62 2f       	mov	r22, r18
    6b82:	0e 94 9f 27 	call	0x4f3e	; 0x4f3e <_ZN16Adafruit_SSD130616ssd1306_command1Eh>
  TRANSACTION_END
    6b86:	89 81       	ldd	r24, Y+1	; 0x01
    6b88:	9a 81       	ldd	r25, Y+2	; 0x02
    6b8a:	fc 01       	movw	r30, r24
    6b8c:	85 8d       	ldd	r24, Z+29	; 0x1d
    6b8e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6b90:	89 2b       	or	r24, r25
    6b92:	89 f0       	breq	.+34     	; 0x6bb6 <_ZN16Adafruit_SSD130613invertDisplayEb+0xcc>
    6b94:	89 81       	ldd	r24, Y+1	; 0x01
    6b96:	9a 81       	ldd	r25, Y+2	; 0x02
    6b98:	fc 01       	movw	r30, r24
    6b9a:	81 ad       	ldd	r24, Z+57	; 0x39
    6b9c:	92 ad       	ldd	r25, Z+58	; 0x3a
    6b9e:	a3 ad       	ldd	r26, Z+59	; 0x3b
    6ba0:	b4 ad       	ldd	r27, Z+60	; 0x3c
    6ba2:	29 81       	ldd	r18, Y+1	; 0x01
    6ba4:	3a 81       	ldd	r19, Y+2	; 0x02
    6ba6:	f9 01       	movw	r30, r18
    6ba8:	25 8d       	ldd	r18, Z+29	; 0x1d
    6baa:	36 8d       	ldd	r19, Z+30	; 0x1e
    6bac:	ac 01       	movw	r20, r24
    6bae:	bd 01       	movw	r22, r26
    6bb0:	c9 01       	movw	r24, r18
    6bb2:	ca d6       	rcall	.+3476   	; 0x7948 <_ZN7TwoWire8setClockEm>
}
    6bb4:	1c c0       	rjmp	.+56     	; 0x6bee <_ZN16Adafruit_SSD130613invertDisplayEb+0x104>
   white, SSD1306_WHITE (value 1) will draw black.
*/
void Adafruit_SSD1306::invertDisplay(bool i) {
  TRANSACTION_START
  ssd1306_command1(i ? SSD1306_INVERTDISPLAY : SSD1306_NORMALDISPLAY);
  TRANSACTION_END
    6bb6:	89 81       	ldd	r24, Y+1	; 0x01
    6bb8:	9a 81       	ldd	r25, Y+2	; 0x02
    6bba:	fc 01       	movw	r30, r24
    6bbc:	87 a5       	ldd	r24, Z+47	; 0x2f
    6bbe:	90 a9       	ldd	r25, Z+48	; 0x30
    6bc0:	29 81       	ldd	r18, Y+1	; 0x01
    6bc2:	3a 81       	ldd	r19, Y+2	; 0x02
    6bc4:	f9 01       	movw	r30, r18
    6bc6:	27 a5       	ldd	r18, Z+47	; 0x2f
    6bc8:	30 a9       	ldd	r19, Z+48	; 0x30
    6bca:	f9 01       	movw	r30, r18
    6bcc:	40 81       	ld	r20, Z
    6bce:	29 81       	ldd	r18, Y+1	; 0x01
    6bd0:	3a 81       	ldd	r19, Y+2	; 0x02
    6bd2:	f9 01       	movw	r30, r18
    6bd4:	24 a9       	ldd	r18, Z+52	; 0x34
    6bd6:	24 2b       	or	r18, r20
    6bd8:	fc 01       	movw	r30, r24
    6bda:	20 83       	st	Z, r18
    6bdc:	89 81       	ldd	r24, Y+1	; 0x01
    6bde:	9a 81       	ldd	r25, Y+2	; 0x02
    6be0:	fc 01       	movw	r30, r24
    6be2:	83 8d       	ldd	r24, Z+27	; 0x1b
    6be4:	94 8d       	ldd	r25, Z+28	; 0x1c
    6be6:	89 2b       	or	r24, r25
    6be8:	11 f0       	breq	.+4      	; 0x6bee <_ZN16Adafruit_SSD130613invertDisplayEb+0x104>
    6bea:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <_ZN8SPIClass14endTransactionEv>
}
    6bee:	00 00       	nop
    6bf0:	0f 90       	pop	r0
    6bf2:	0f 90       	pop	r0
    6bf4:	0f 90       	pop	r0
    6bf6:	df 91       	pop	r29
    6bf8:	cf 91       	pop	r28
    6bfa:	08 95       	ret

00006bfc <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    6bfc:	cf 93       	push	r28
    6bfe:	df 93       	push	r29
    6c00:	cd b7       	in	r28, 0x3d	; 61
    6c02:	de b7       	in	r29, 0x3e	; 62
    6c04:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
    6c08:	81 e0       	ldi	r24, 0x01	; 1
    6c0a:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <twi_sendStop>
    6c0e:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <twi_inRepStart>
    6c12:	84 e1       	ldi	r24, 0x14	; 20
    6c14:	61 e0       	ldi	r22, 0x01	; 1
    6c16:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    6c1a:	85 e1       	ldi	r24, 0x15	; 21
    6c1c:	61 e0       	ldi	r22, 0x01	; 1
    6c1e:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    6c22:	89 eb       	ldi	r24, 0xB9	; 185
    6c24:	90 e0       	ldi	r25, 0x00	; 0
    6c26:	29 eb       	ldi	r18, 0xB9	; 185
    6c28:	30 e0       	ldi	r19, 0x00	; 0
    6c2a:	f9 01       	movw	r30, r18
    6c2c:	20 81       	ld	r18, Z
    6c2e:	2e 7f       	andi	r18, 0xFE	; 254
    6c30:	fc 01       	movw	r30, r24
    6c32:	20 83       	st	Z, r18
    6c34:	89 eb       	ldi	r24, 0xB9	; 185
    6c36:	90 e0       	ldi	r25, 0x00	; 0
    6c38:	29 eb       	ldi	r18, 0xB9	; 185
    6c3a:	30 e0       	ldi	r19, 0x00	; 0
    6c3c:	f9 01       	movw	r30, r18
    6c3e:	20 81       	ld	r18, Z
    6c40:	2d 7f       	andi	r18, 0xFD	; 253
    6c42:	fc 01       	movw	r30, r24
    6c44:	20 83       	st	Z, r18
    6c46:	88 eb       	ldi	r24, 0xB8	; 184
    6c48:	90 e0       	ldi	r25, 0x00	; 0
    6c4a:	28 e4       	ldi	r18, 0x48	; 72
    6c4c:	fc 01       	movw	r30, r24
    6c4e:	20 83       	st	Z, r18
    6c50:	8c eb       	ldi	r24, 0xBC	; 188
    6c52:	90 e0       	ldi	r25, 0x00	; 0
    6c54:	25 e4       	ldi	r18, 0x45	; 69
    6c56:	fc 01       	movw	r30, r24
    6c58:	20 83       	st	Z, r18
    6c5a:	00 00       	nop
    6c5c:	df 91       	pop	r29
    6c5e:	cf 91       	pop	r28
    6c60:	08 95       	ret

00006c62 <twi_disable>:
    6c62:	cf 93       	push	r28
    6c64:	df 93       	push	r29
    6c66:	cd b7       	in	r28, 0x3d	; 61
    6c68:	de b7       	in	r29, 0x3e	; 62
    6c6a:	8c eb       	ldi	r24, 0xBC	; 188
    6c6c:	90 e0       	ldi	r25, 0x00	; 0
    6c6e:	2c eb       	ldi	r18, 0xBC	; 188
    6c70:	30 e0       	ldi	r19, 0x00	; 0
    6c72:	f9 01       	movw	r30, r18
    6c74:	20 81       	ld	r18, Z
    6c76:	2a 7b       	andi	r18, 0xBA	; 186
    6c78:	fc 01       	movw	r30, r24
    6c7a:	20 83       	st	Z, r18
    6c7c:	84 e1       	ldi	r24, 0x14	; 20
    6c7e:	60 e0       	ldi	r22, 0x00	; 0
    6c80:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    6c84:	85 e1       	ldi	r24, 0x15	; 21
    6c86:	60 e0       	ldi	r22, 0x00	; 0
    6c88:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    6c8c:	00 00       	nop
    6c8e:	df 91       	pop	r29
    6c90:	cf 91       	pop	r28
    6c92:	08 95       	ret

00006c94 <twi_setFrequency>:
    6c94:	0f 93       	push	r16
    6c96:	1f 93       	push	r17
    6c98:	cf 93       	push	r28
    6c9a:	df 93       	push	r29
    6c9c:	00 d0       	rcall	.+0      	; 0x6c9e <twi_setFrequency+0xa>
    6c9e:	1f 92       	push	r1
    6ca0:	cd b7       	in	r28, 0x3d	; 61
    6ca2:	de b7       	in	r29, 0x3e	; 62
    6ca4:	69 83       	std	Y+1, r22	; 0x01
    6ca6:	7a 83       	std	Y+2, r23	; 0x02
    6ca8:	8b 83       	std	Y+3, r24	; 0x03
    6caa:	9c 83       	std	Y+4, r25	; 0x04
    6cac:	08 eb       	ldi	r16, 0xB8	; 184
    6cae:	10 e0       	ldi	r17, 0x00	; 0
    6cb0:	80 e0       	ldi	r24, 0x00	; 0
    6cb2:	94 e2       	ldi	r25, 0x24	; 36
    6cb4:	a4 ef       	ldi	r26, 0xF4	; 244
    6cb6:	b0 e0       	ldi	r27, 0x00	; 0
    6cb8:	29 81       	ldd	r18, Y+1	; 0x01
    6cba:	3a 81       	ldd	r19, Y+2	; 0x02
    6cbc:	4b 81       	ldd	r20, Y+3	; 0x03
    6cbe:	5c 81       	ldd	r21, Y+4	; 0x04
    6cc0:	bc 01       	movw	r22, r24
    6cc2:	cd 01       	movw	r24, r26
    6cc4:	0e 94 39 4c 	call	0x9872	; 0x9872 <__udivmodsi4>
    6cc8:	da 01       	movw	r26, r20
    6cca:	c9 01       	movw	r24, r18
    6ccc:	40 97       	sbiw	r24, 0x10	; 16
    6cce:	a1 09       	sbc	r26, r1
    6cd0:	b1 09       	sbc	r27, r1
    6cd2:	b6 95       	lsr	r27
    6cd4:	a7 95       	ror	r26
    6cd6:	97 95       	ror	r25
    6cd8:	87 95       	ror	r24
    6cda:	f8 01       	movw	r30, r16
    6cdc:	80 83       	st	Z, r24
    6cde:	00 00       	nop
    6ce0:	0f 90       	pop	r0
    6ce2:	0f 90       	pop	r0
    6ce4:	0f 90       	pop	r0
    6ce6:	0f 90       	pop	r0
    6ce8:	df 91       	pop	r29
    6cea:	cf 91       	pop	r28
    6cec:	1f 91       	pop	r17
    6cee:	0f 91       	pop	r16
    6cf0:	08 95       	ret

00006cf2 <twi_readFrom>:
    6cf2:	cf 93       	push	r28
    6cf4:	df 93       	push	r29
    6cf6:	cd b7       	in	r28, 0x3d	; 61
    6cf8:	de b7       	in	r29, 0x3e	; 62
    6cfa:	2a 97       	sbiw	r28, 0x0a	; 10
    6cfc:	0f b6       	in	r0, 0x3f	; 63
    6cfe:	f8 94       	cli
    6d00:	de bf       	out	0x3e, r29	; 62
    6d02:	0f be       	out	0x3f, r0	; 63
    6d04:	cd bf       	out	0x3d, r28	; 61
    6d06:	8e 83       	std	Y+6, r24	; 0x06
    6d08:	78 87       	std	Y+8, r23	; 0x08
    6d0a:	6f 83       	std	Y+7, r22	; 0x07
    6d0c:	49 87       	std	Y+9, r20	; 0x09
    6d0e:	2a 87       	std	Y+10, r18	; 0x0a
    6d10:	89 85       	ldd	r24, Y+9	; 0x09
    6d12:	81 32       	cpi	r24, 0x21	; 33
    6d14:	10 f0       	brcs	.+4      	; 0x6d1a <twi_readFrom+0x28>
    6d16:	80 e0       	ldi	r24, 0x00	; 0
    6d18:	01 c1       	rjmp	.+514    	; 0x6f1c <twi_readFrom+0x22a>
    6d1a:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6d1e:	dc 01       	movw	r26, r24
    6d20:	cb 01       	movw	r24, r22
    6d22:	8a 83       	std	Y+2, r24	; 0x02
    6d24:	9b 83       	std	Y+3, r25	; 0x03
    6d26:	ac 83       	std	Y+4, r26	; 0x04
    6d28:	bd 83       	std	Y+5, r27	; 0x05
    6d2a:	2a c0       	rjmp	.+84     	; 0x6d80 <twi_readFrom+0x8e>
    6d2c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6d30:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6d34:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6d38:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6d3c:	89 2b       	or	r24, r25
    6d3e:	8a 2b       	or	r24, r26
    6d40:	8b 2b       	or	r24, r27
    6d42:	f1 f0       	breq	.+60     	; 0x6d80 <twi_readFrom+0x8e>
    6d44:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6d48:	9b 01       	movw	r18, r22
    6d4a:	ac 01       	movw	r20, r24
    6d4c:	8a 81       	ldd	r24, Y+2	; 0x02
    6d4e:	9b 81       	ldd	r25, Y+3	; 0x03
    6d50:	ac 81       	ldd	r26, Y+4	; 0x04
    6d52:	bd 81       	ldd	r27, Y+5	; 0x05
    6d54:	28 1b       	sub	r18, r24
    6d56:	39 0b       	sbc	r19, r25
    6d58:	4a 0b       	sbc	r20, r26
    6d5a:	5b 0b       	sbc	r21, r27
    6d5c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6d60:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6d64:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6d68:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6d6c:	82 17       	cp	r24, r18
    6d6e:	93 07       	cpc	r25, r19
    6d70:	a4 07       	cpc	r26, r20
    6d72:	b5 07       	cpc	r27, r21
    6d74:	28 f4       	brcc	.+10     	; 0x6d80 <twi_readFrom+0x8e>
    6d76:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    6d7a:	fe d3       	rcall	.+2044   	; 0x7578 <twi_handleTimeout>
    6d7c:	80 e0       	ldi	r24, 0x00	; 0
    6d7e:	ce c0       	rjmp	.+412    	; 0x6f1c <twi_readFrom+0x22a>
    6d80:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <twi_state>
    6d84:	88 23       	and	r24, r24
    6d86:	91 f6       	brne	.-92     	; 0x6d2c <twi_readFrom+0x3a>
    6d88:	81 e0       	ldi	r24, 0x01	; 1
    6d8a:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <twi_state>
    6d8e:	8a 85       	ldd	r24, Y+10	; 0x0a
    6d90:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <twi_sendStop>
    6d94:	8f ef       	ldi	r24, 0xFF	; 255
    6d96:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <twi_error>
    6d9a:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <twi_masterBufferIndex>
    6d9e:	89 85       	ldd	r24, Y+9	; 0x09
    6da0:	81 50       	subi	r24, 0x01	; 1
    6da2:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <twi_masterBufferLength>
    6da6:	81 e0       	ldi	r24, 0x01	; 1
    6da8:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <twi_slarw>
    6dac:	8e 81       	ldd	r24, Y+6	; 0x06
    6dae:	88 2f       	mov	r24, r24
    6db0:	90 e0       	ldi	r25, 0x00	; 0
    6db2:	88 0f       	add	r24, r24
    6db4:	99 1f       	adc	r25, r25
    6db6:	98 2f       	mov	r25, r24
    6db8:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <twi_slarw>
    6dbc:	89 2b       	or	r24, r25
    6dbe:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <twi_slarw>
    6dc2:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <twi_inRepStart>
    6dc6:	81 30       	cpi	r24, 0x01	; 1
    6dc8:	09 f0       	breq	.+2      	; 0x6dcc <twi_readFrom+0xda>
    6dca:	4a c0       	rjmp	.+148    	; 0x6e60 <twi_readFrom+0x16e>
    6dcc:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <twi_inRepStart>
    6dd0:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6dd4:	dc 01       	movw	r26, r24
    6dd6:	cb 01       	movw	r24, r22
    6dd8:	8a 83       	std	Y+2, r24	; 0x02
    6dda:	9b 83       	std	Y+3, r25	; 0x03
    6ddc:	ac 83       	std	Y+4, r26	; 0x04
    6dde:	bd 83       	std	Y+5, r27	; 0x05
    6de0:	8b eb       	ldi	r24, 0xBB	; 187
    6de2:	90 e0       	ldi	r25, 0x00	; 0
    6de4:	20 91 2a 03 	lds	r18, 0x032A	; 0x80032a <twi_slarw>
    6de8:	fc 01       	movw	r30, r24
    6dea:	20 83       	st	Z, r18
    6dec:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6df0:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6df4:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6df8:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6dfc:	89 2b       	or	r24, r25
    6dfe:	8a 2b       	or	r24, r26
    6e00:	8b 2b       	or	r24, r27
    6e02:	f1 f0       	breq	.+60     	; 0x6e40 <twi_readFrom+0x14e>
    6e04:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6e08:	9b 01       	movw	r18, r22
    6e0a:	ac 01       	movw	r20, r24
    6e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    6e0e:	9b 81       	ldd	r25, Y+3	; 0x03
    6e10:	ac 81       	ldd	r26, Y+4	; 0x04
    6e12:	bd 81       	ldd	r27, Y+5	; 0x05
    6e14:	28 1b       	sub	r18, r24
    6e16:	39 0b       	sbc	r19, r25
    6e18:	4a 0b       	sbc	r20, r26
    6e1a:	5b 0b       	sbc	r21, r27
    6e1c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6e20:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6e24:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6e28:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6e2c:	82 17       	cp	r24, r18
    6e2e:	93 07       	cpc	r25, r19
    6e30:	a4 07       	cpc	r26, r20
    6e32:	b5 07       	cpc	r27, r21
    6e34:	28 f4       	brcc	.+10     	; 0x6e40 <twi_readFrom+0x14e>
    6e36:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    6e3a:	9e d3       	rcall	.+1852   	; 0x7578 <twi_handleTimeout>
    6e3c:	80 e0       	ldi	r24, 0x00	; 0
    6e3e:	6e c0       	rjmp	.+220    	; 0x6f1c <twi_readFrom+0x22a>
    6e40:	8c eb       	ldi	r24, 0xBC	; 188
    6e42:	90 e0       	ldi	r25, 0x00	; 0
    6e44:	fc 01       	movw	r30, r24
    6e46:	80 81       	ld	r24, Z
    6e48:	88 2f       	mov	r24, r24
    6e4a:	90 e0       	ldi	r25, 0x00	; 0
    6e4c:	88 70       	andi	r24, 0x08	; 8
    6e4e:	99 27       	eor	r25, r25
    6e50:	89 2b       	or	r24, r25
    6e52:	31 f6       	brne	.-116    	; 0x6de0 <twi_readFrom+0xee>
    6e54:	8c eb       	ldi	r24, 0xBC	; 188
    6e56:	90 e0       	ldi	r25, 0x00	; 0
    6e58:	25 ec       	ldi	r18, 0xC5	; 197
    6e5a:	fc 01       	movw	r30, r24
    6e5c:	20 83       	st	Z, r18
    6e5e:	05 c0       	rjmp	.+10     	; 0x6e6a <twi_readFrom+0x178>
    6e60:	8c eb       	ldi	r24, 0xBC	; 188
    6e62:	90 e0       	ldi	r25, 0x00	; 0
    6e64:	25 ee       	ldi	r18, 0xE5	; 229
    6e66:	fc 01       	movw	r30, r24
    6e68:	20 83       	st	Z, r18
    6e6a:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6e6e:	dc 01       	movw	r26, r24
    6e70:	cb 01       	movw	r24, r22
    6e72:	8a 83       	std	Y+2, r24	; 0x02
    6e74:	9b 83       	std	Y+3, r25	; 0x03
    6e76:	ac 83       	std	Y+4, r26	; 0x04
    6e78:	bd 83       	std	Y+5, r27	; 0x05
    6e7a:	2a c0       	rjmp	.+84     	; 0x6ed0 <twi_readFrom+0x1de>
    6e7c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6e80:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6e84:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6e88:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6e8c:	89 2b       	or	r24, r25
    6e8e:	8a 2b       	or	r24, r26
    6e90:	8b 2b       	or	r24, r27
    6e92:	f1 f0       	breq	.+60     	; 0x6ed0 <twi_readFrom+0x1de>
    6e94:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6e98:	9b 01       	movw	r18, r22
    6e9a:	ac 01       	movw	r20, r24
    6e9c:	8a 81       	ldd	r24, Y+2	; 0x02
    6e9e:	9b 81       	ldd	r25, Y+3	; 0x03
    6ea0:	ac 81       	ldd	r26, Y+4	; 0x04
    6ea2:	bd 81       	ldd	r27, Y+5	; 0x05
    6ea4:	28 1b       	sub	r18, r24
    6ea6:	39 0b       	sbc	r19, r25
    6ea8:	4a 0b       	sbc	r20, r26
    6eaa:	5b 0b       	sbc	r21, r27
    6eac:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6eb0:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6eb4:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6eb8:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6ebc:	82 17       	cp	r24, r18
    6ebe:	93 07       	cpc	r25, r19
    6ec0:	a4 07       	cpc	r26, r20
    6ec2:	b5 07       	cpc	r27, r21
    6ec4:	28 f4       	brcc	.+10     	; 0x6ed0 <twi_readFrom+0x1de>
    6ec6:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    6eca:	56 d3       	rcall	.+1708   	; 0x7578 <twi_handleTimeout>
    6ecc:	80 e0       	ldi	r24, 0x00	; 0
    6ece:	26 c0       	rjmp	.+76     	; 0x6f1c <twi_readFrom+0x22a>
    6ed0:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <twi_state>
    6ed4:	81 30       	cpi	r24, 0x01	; 1
    6ed6:	91 f2       	breq	.-92     	; 0x6e7c <twi_readFrom+0x18a>
    6ed8:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <twi_masterBufferIndex>
    6edc:	89 85       	ldd	r24, Y+9	; 0x09
    6ede:	98 17       	cp	r25, r24
    6ee0:	18 f4       	brcc	.+6      	; 0x6ee8 <twi_readFrom+0x1f6>
    6ee2:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <twi_masterBufferIndex>
    6ee6:	89 87       	std	Y+9, r24	; 0x09
    6ee8:	19 82       	std	Y+1, r1	; 0x01
    6eea:	13 c0       	rjmp	.+38     	; 0x6f12 <twi_readFrom+0x220>
    6eec:	89 81       	ldd	r24, Y+1	; 0x01
    6eee:	88 2f       	mov	r24, r24
    6ef0:	90 e0       	ldi	r25, 0x00	; 0
    6ef2:	2f 81       	ldd	r18, Y+7	; 0x07
    6ef4:	38 85       	ldd	r19, Y+8	; 0x08
    6ef6:	82 0f       	add	r24, r18
    6ef8:	93 1f       	adc	r25, r19
    6efa:	29 81       	ldd	r18, Y+1	; 0x01
    6efc:	22 2f       	mov	r18, r18
    6efe:	30 e0       	ldi	r19, 0x00	; 0
    6f00:	29 5c       	subi	r18, 0xC9	; 201
    6f02:	3c 4f       	sbci	r19, 0xFC	; 252
    6f04:	f9 01       	movw	r30, r18
    6f06:	20 81       	ld	r18, Z
    6f08:	fc 01       	movw	r30, r24
    6f0a:	20 83       	st	Z, r18
    6f0c:	89 81       	ldd	r24, Y+1	; 0x01
    6f0e:	8f 5f       	subi	r24, 0xFF	; 255
    6f10:	89 83       	std	Y+1, r24	; 0x01
    6f12:	99 81       	ldd	r25, Y+1	; 0x01
    6f14:	89 85       	ldd	r24, Y+9	; 0x09
    6f16:	98 17       	cp	r25, r24
    6f18:	48 f3       	brcs	.-46     	; 0x6eec <twi_readFrom+0x1fa>
    6f1a:	89 85       	ldd	r24, Y+9	; 0x09
    6f1c:	2a 96       	adiw	r28, 0x0a	; 10
    6f1e:	0f b6       	in	r0, 0x3f	; 63
    6f20:	f8 94       	cli
    6f22:	de bf       	out	0x3e, r29	; 62
    6f24:	0f be       	out	0x3f, r0	; 63
    6f26:	cd bf       	out	0x3d, r28	; 61
    6f28:	df 91       	pop	r29
    6f2a:	cf 91       	pop	r28
    6f2c:	08 95       	ret

00006f2e <twi_writeTo>:
    6f2e:	0f 93       	push	r16
    6f30:	cf 93       	push	r28
    6f32:	df 93       	push	r29
    6f34:	cd b7       	in	r28, 0x3d	; 61
    6f36:	de b7       	in	r29, 0x3e	; 62
    6f38:	2b 97       	sbiw	r28, 0x0b	; 11
    6f3a:	0f b6       	in	r0, 0x3f	; 63
    6f3c:	f8 94       	cli
    6f3e:	de bf       	out	0x3e, r29	; 62
    6f40:	0f be       	out	0x3f, r0	; 63
    6f42:	cd bf       	out	0x3d, r28	; 61
    6f44:	8e 83       	std	Y+6, r24	; 0x06
    6f46:	78 87       	std	Y+8, r23	; 0x08
    6f48:	6f 83       	std	Y+7, r22	; 0x07
    6f4a:	49 87       	std	Y+9, r20	; 0x09
    6f4c:	2a 87       	std	Y+10, r18	; 0x0a
    6f4e:	0b 87       	std	Y+11, r16	; 0x0b
    6f50:	89 85       	ldd	r24, Y+9	; 0x09
    6f52:	81 32       	cpi	r24, 0x21	; 33
    6f54:	10 f0       	brcs	.+4      	; 0x6f5a <twi_writeTo+0x2c>
    6f56:	81 e0       	ldi	r24, 0x01	; 1
    6f58:	0c c1       	rjmp	.+536    	; 0x7172 <twi_writeTo+0x244>
    6f5a:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6f5e:	dc 01       	movw	r26, r24
    6f60:	cb 01       	movw	r24, r22
    6f62:	8a 83       	std	Y+2, r24	; 0x02
    6f64:	9b 83       	std	Y+3, r25	; 0x03
    6f66:	ac 83       	std	Y+4, r26	; 0x04
    6f68:	bd 83       	std	Y+5, r27	; 0x05
    6f6a:	2a c0       	rjmp	.+84     	; 0x6fc0 <twi_writeTo+0x92>
    6f6c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6f70:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6f74:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6f78:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6f7c:	89 2b       	or	r24, r25
    6f7e:	8a 2b       	or	r24, r26
    6f80:	8b 2b       	or	r24, r27
    6f82:	f1 f0       	breq	.+60     	; 0x6fc0 <twi_writeTo+0x92>
    6f84:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    6f88:	9b 01       	movw	r18, r22
    6f8a:	ac 01       	movw	r20, r24
    6f8c:	8a 81       	ldd	r24, Y+2	; 0x02
    6f8e:	9b 81       	ldd	r25, Y+3	; 0x03
    6f90:	ac 81       	ldd	r26, Y+4	; 0x04
    6f92:	bd 81       	ldd	r27, Y+5	; 0x05
    6f94:	28 1b       	sub	r18, r24
    6f96:	39 0b       	sbc	r19, r25
    6f98:	4a 0b       	sbc	r20, r26
    6f9a:	5b 0b       	sbc	r21, r27
    6f9c:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    6fa0:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    6fa4:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    6fa8:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    6fac:	82 17       	cp	r24, r18
    6fae:	93 07       	cpc	r25, r19
    6fb0:	a4 07       	cpc	r26, r20
    6fb2:	b5 07       	cpc	r27, r21
    6fb4:	28 f4       	brcc	.+10     	; 0x6fc0 <twi_writeTo+0x92>
    6fb6:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    6fba:	de d2       	rcall	.+1468   	; 0x7578 <twi_handleTimeout>
    6fbc:	85 e0       	ldi	r24, 0x05	; 5
    6fbe:	d9 c0       	rjmp	.+434    	; 0x7172 <twi_writeTo+0x244>
    6fc0:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <twi_state>
    6fc4:	88 23       	and	r24, r24
    6fc6:	91 f6       	brne	.-92     	; 0x6f6c <twi_writeTo+0x3e>
    6fc8:	82 e0       	ldi	r24, 0x02	; 2
    6fca:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <twi_state>
    6fce:	8b 85       	ldd	r24, Y+11	; 0x0b
    6fd0:	80 93 2b 03 	sts	0x032B, r24	; 0x80032b <twi_sendStop>
    6fd4:	8f ef       	ldi	r24, 0xFF	; 255
    6fd6:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <twi_error>
    6fda:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <twi_masterBufferIndex>
    6fde:	89 85       	ldd	r24, Y+9	; 0x09
    6fe0:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <twi_masterBufferLength>
    6fe4:	19 82       	std	Y+1, r1	; 0x01
    6fe6:	13 c0       	rjmp	.+38     	; 0x700e <twi_writeTo+0xe0>
    6fe8:	89 81       	ldd	r24, Y+1	; 0x01
    6fea:	88 2f       	mov	r24, r24
    6fec:	90 e0       	ldi	r25, 0x00	; 0
    6fee:	29 81       	ldd	r18, Y+1	; 0x01
    6ff0:	22 2f       	mov	r18, r18
    6ff2:	30 e0       	ldi	r19, 0x00	; 0
    6ff4:	4f 81       	ldd	r20, Y+7	; 0x07
    6ff6:	58 85       	ldd	r21, Y+8	; 0x08
    6ff8:	24 0f       	add	r18, r20
    6ffa:	35 1f       	adc	r19, r21
    6ffc:	f9 01       	movw	r30, r18
    6ffe:	20 81       	ld	r18, Z
    7000:	89 5c       	subi	r24, 0xC9	; 201
    7002:	9c 4f       	sbci	r25, 0xFC	; 252
    7004:	fc 01       	movw	r30, r24
    7006:	20 83       	st	Z, r18
    7008:	89 81       	ldd	r24, Y+1	; 0x01
    700a:	8f 5f       	subi	r24, 0xFF	; 255
    700c:	89 83       	std	Y+1, r24	; 0x01
    700e:	99 81       	ldd	r25, Y+1	; 0x01
    7010:	89 85       	ldd	r24, Y+9	; 0x09
    7012:	98 17       	cp	r25, r24
    7014:	48 f3       	brcs	.-46     	; 0x6fe8 <twi_writeTo+0xba>
    7016:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <twi_slarw>
    701a:	8e 81       	ldd	r24, Y+6	; 0x06
    701c:	88 2f       	mov	r24, r24
    701e:	90 e0       	ldi	r25, 0x00	; 0
    7020:	88 0f       	add	r24, r24
    7022:	99 1f       	adc	r25, r25
    7024:	98 2f       	mov	r25, r24
    7026:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <twi_slarw>
    702a:	89 2b       	or	r24, r25
    702c:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <twi_slarw>
    7030:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <twi_inRepStart>
    7034:	81 30       	cpi	r24, 0x01	; 1
    7036:	09 f0       	breq	.+2      	; 0x703a <twi_writeTo+0x10c>
    7038:	4a c0       	rjmp	.+148    	; 0x70ce <twi_writeTo+0x1a0>
    703a:	10 92 2c 03 	sts	0x032C, r1	; 0x80032c <twi_inRepStart>
    703e:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    7042:	dc 01       	movw	r26, r24
    7044:	cb 01       	movw	r24, r22
    7046:	8a 83       	std	Y+2, r24	; 0x02
    7048:	9b 83       	std	Y+3, r25	; 0x03
    704a:	ac 83       	std	Y+4, r26	; 0x04
    704c:	bd 83       	std	Y+5, r27	; 0x05
    704e:	8b eb       	ldi	r24, 0xBB	; 187
    7050:	90 e0       	ldi	r25, 0x00	; 0
    7052:	20 91 2a 03 	lds	r18, 0x032A	; 0x80032a <twi_slarw>
    7056:	fc 01       	movw	r30, r24
    7058:	20 83       	st	Z, r18
    705a:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    705e:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    7062:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    7066:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    706a:	89 2b       	or	r24, r25
    706c:	8a 2b       	or	r24, r26
    706e:	8b 2b       	or	r24, r27
    7070:	f1 f0       	breq	.+60     	; 0x70ae <twi_writeTo+0x180>
    7072:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    7076:	9b 01       	movw	r18, r22
    7078:	ac 01       	movw	r20, r24
    707a:	8a 81       	ldd	r24, Y+2	; 0x02
    707c:	9b 81       	ldd	r25, Y+3	; 0x03
    707e:	ac 81       	ldd	r26, Y+4	; 0x04
    7080:	bd 81       	ldd	r27, Y+5	; 0x05
    7082:	28 1b       	sub	r18, r24
    7084:	39 0b       	sbc	r19, r25
    7086:	4a 0b       	sbc	r20, r26
    7088:	5b 0b       	sbc	r21, r27
    708a:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    708e:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    7092:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    7096:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    709a:	82 17       	cp	r24, r18
    709c:	93 07       	cpc	r25, r19
    709e:	a4 07       	cpc	r26, r20
    70a0:	b5 07       	cpc	r27, r21
    70a2:	28 f4       	brcc	.+10     	; 0x70ae <twi_writeTo+0x180>
    70a4:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    70a8:	67 d2       	rcall	.+1230   	; 0x7578 <twi_handleTimeout>
    70aa:	85 e0       	ldi	r24, 0x05	; 5
    70ac:	62 c0       	rjmp	.+196    	; 0x7172 <twi_writeTo+0x244>
    70ae:	8c eb       	ldi	r24, 0xBC	; 188
    70b0:	90 e0       	ldi	r25, 0x00	; 0
    70b2:	fc 01       	movw	r30, r24
    70b4:	80 81       	ld	r24, Z
    70b6:	88 2f       	mov	r24, r24
    70b8:	90 e0       	ldi	r25, 0x00	; 0
    70ba:	88 70       	andi	r24, 0x08	; 8
    70bc:	99 27       	eor	r25, r25
    70be:	89 2b       	or	r24, r25
    70c0:	31 f6       	brne	.-116    	; 0x704e <twi_writeTo+0x120>
    70c2:	8c eb       	ldi	r24, 0xBC	; 188
    70c4:	90 e0       	ldi	r25, 0x00	; 0
    70c6:	25 ec       	ldi	r18, 0xC5	; 197
    70c8:	fc 01       	movw	r30, r24
    70ca:	20 83       	st	Z, r18
    70cc:	05 c0       	rjmp	.+10     	; 0x70d8 <twi_writeTo+0x1aa>
    70ce:	8c eb       	ldi	r24, 0xBC	; 188
    70d0:	90 e0       	ldi	r25, 0x00	; 0
    70d2:	25 ee       	ldi	r18, 0xE5	; 229
    70d4:	fc 01       	movw	r30, r24
    70d6:	20 83       	st	Z, r18
    70d8:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    70dc:	dc 01       	movw	r26, r24
    70de:	cb 01       	movw	r24, r22
    70e0:	8a 83       	std	Y+2, r24	; 0x02
    70e2:	9b 83       	std	Y+3, r25	; 0x03
    70e4:	ac 83       	std	Y+4, r26	; 0x04
    70e6:	bd 83       	std	Y+5, r27	; 0x05
    70e8:	2a c0       	rjmp	.+84     	; 0x713e <twi_writeTo+0x210>
    70ea:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    70ee:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    70f2:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    70f6:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    70fa:	89 2b       	or	r24, r25
    70fc:	8a 2b       	or	r24, r26
    70fe:	8b 2b       	or	r24, r27
    7100:	f1 f0       	breq	.+60     	; 0x713e <twi_writeTo+0x210>
    7102:	0e 94 94 49 	call	0x9328	; 0x9328 <micros>
    7106:	9b 01       	movw	r18, r22
    7108:	ac 01       	movw	r20, r24
    710a:	8a 81       	ldd	r24, Y+2	; 0x02
    710c:	9b 81       	ldd	r25, Y+3	; 0x03
    710e:	ac 81       	ldd	r26, Y+4	; 0x04
    7110:	bd 81       	ldd	r27, Y+5	; 0x05
    7112:	28 1b       	sub	r18, r24
    7114:	39 0b       	sbc	r19, r25
    7116:	4a 0b       	sbc	r20, r26
    7118:	5b 0b       	sbc	r21, r27
    711a:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    711e:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    7122:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    7126:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    712a:	82 17       	cp	r24, r18
    712c:	93 07       	cpc	r25, r19
    712e:	a4 07       	cpc	r26, r20
    7130:	b5 07       	cpc	r27, r21
    7132:	28 f4       	brcc	.+10     	; 0x713e <twi_writeTo+0x210>
    7134:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    7138:	1f d2       	rcall	.+1086   	; 0x7578 <twi_handleTimeout>
    713a:	85 e0       	ldi	r24, 0x05	; 5
    713c:	1a c0       	rjmp	.+52     	; 0x7172 <twi_writeTo+0x244>
    713e:	8a 85       	ldd	r24, Y+10	; 0x0a
    7140:	88 23       	and	r24, r24
    7142:	21 f0       	breq	.+8      	; 0x714c <twi_writeTo+0x21e>
    7144:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <twi_state>
    7148:	82 30       	cpi	r24, 0x02	; 2
    714a:	79 f2       	breq	.-98     	; 0x70ea <twi_writeTo+0x1bc>
    714c:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <twi_error>
    7150:	8f 3f       	cpi	r24, 0xFF	; 255
    7152:	11 f4       	brne	.+4      	; 0x7158 <twi_writeTo+0x22a>
    7154:	80 e0       	ldi	r24, 0x00	; 0
    7156:	0d c0       	rjmp	.+26     	; 0x7172 <twi_writeTo+0x244>
    7158:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <twi_error>
    715c:	80 32       	cpi	r24, 0x20	; 32
    715e:	11 f4       	brne	.+4      	; 0x7164 <twi_writeTo+0x236>
    7160:	82 e0       	ldi	r24, 0x02	; 2
    7162:	07 c0       	rjmp	.+14     	; 0x7172 <twi_writeTo+0x244>
    7164:	80 91 9c 03 	lds	r24, 0x039C	; 0x80039c <twi_error>
    7168:	80 33       	cpi	r24, 0x30	; 48
    716a:	11 f4       	brne	.+4      	; 0x7170 <twi_writeTo+0x242>
    716c:	83 e0       	ldi	r24, 0x03	; 3
    716e:	01 c0       	rjmp	.+2      	; 0x7172 <twi_writeTo+0x244>
    7170:	84 e0       	ldi	r24, 0x04	; 4
    7172:	2b 96       	adiw	r28, 0x0b	; 11
    7174:	0f b6       	in	r0, 0x3f	; 63
    7176:	f8 94       	cli
    7178:	de bf       	out	0x3e, r29	; 62
    717a:	0f be       	out	0x3f, r0	; 63
    717c:	cd bf       	out	0x3d, r28	; 61
    717e:	df 91       	pop	r29
    7180:	cf 91       	pop	r28
    7182:	0f 91       	pop	r16
    7184:	08 95       	ret

00007186 <twi_transmit>:
    7186:	cf 93       	push	r28
    7188:	df 93       	push	r29
    718a:	00 d0       	rcall	.+0      	; 0x718c <twi_transmit+0x6>
    718c:	1f 92       	push	r1
    718e:	cd b7       	in	r28, 0x3d	; 61
    7190:	de b7       	in	r29, 0x3e	; 62
    7192:	9b 83       	std	Y+3, r25	; 0x03
    7194:	8a 83       	std	Y+2, r24	; 0x02
    7196:	6c 83       	std	Y+4, r22	; 0x04
    7198:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <twi_txBufferLength>
    719c:	28 2f       	mov	r18, r24
    719e:	30 e0       	ldi	r19, 0x00	; 0
    71a0:	8c 81       	ldd	r24, Y+4	; 0x04
    71a2:	88 2f       	mov	r24, r24
    71a4:	90 e0       	ldi	r25, 0x00	; 0
    71a6:	82 0f       	add	r24, r18
    71a8:	93 1f       	adc	r25, r19
    71aa:	81 97       	sbiw	r24, 0x21	; 33
    71ac:	14 f0       	brlt	.+4      	; 0x71b2 <twi_transmit+0x2c>
    71ae:	81 e0       	ldi	r24, 0x01	; 1
    71b0:	2c c0       	rjmp	.+88     	; 0x720a <twi_transmit+0x84>
    71b2:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <twi_state>
    71b6:	84 30       	cpi	r24, 0x04	; 4
    71b8:	11 f0       	breq	.+4      	; 0x71be <twi_transmit+0x38>
    71ba:	82 e0       	ldi	r24, 0x02	; 2
    71bc:	26 c0       	rjmp	.+76     	; 0x720a <twi_transmit+0x84>
    71be:	19 82       	std	Y+1, r1	; 0x01
    71c0:	19 c0       	rjmp	.+50     	; 0x71f4 <twi_transmit+0x6e>
    71c2:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <twi_txBufferLength>
    71c6:	28 2f       	mov	r18, r24
    71c8:	30 e0       	ldi	r19, 0x00	; 0
    71ca:	89 81       	ldd	r24, Y+1	; 0x01
    71cc:	88 2f       	mov	r24, r24
    71ce:	90 e0       	ldi	r25, 0x00	; 0
    71d0:	82 0f       	add	r24, r18
    71d2:	93 1f       	adc	r25, r19
    71d4:	29 81       	ldd	r18, Y+1	; 0x01
    71d6:	22 2f       	mov	r18, r18
    71d8:	30 e0       	ldi	r19, 0x00	; 0
    71da:	4a 81       	ldd	r20, Y+2	; 0x02
    71dc:	5b 81       	ldd	r21, Y+3	; 0x03
    71de:	24 0f       	add	r18, r20
    71e0:	35 1f       	adc	r19, r21
    71e2:	f9 01       	movw	r30, r18
    71e4:	20 81       	ld	r18, Z
    71e6:	87 5a       	subi	r24, 0xA7	; 167
    71e8:	9c 4f       	sbci	r25, 0xFC	; 252
    71ea:	fc 01       	movw	r30, r24
    71ec:	20 83       	st	Z, r18
    71ee:	89 81       	ldd	r24, Y+1	; 0x01
    71f0:	8f 5f       	subi	r24, 0xFF	; 255
    71f2:	89 83       	std	Y+1, r24	; 0x01
    71f4:	99 81       	ldd	r25, Y+1	; 0x01
    71f6:	8c 81       	ldd	r24, Y+4	; 0x04
    71f8:	98 17       	cp	r25, r24
    71fa:	18 f3       	brcs	.-58     	; 0x71c2 <twi_transmit+0x3c>
    71fc:	90 91 7a 03 	lds	r25, 0x037A	; 0x80037a <twi_txBufferLength>
    7200:	8c 81       	ldd	r24, Y+4	; 0x04
    7202:	89 0f       	add	r24, r25
    7204:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <twi_txBufferLength>
    7208:	80 e0       	ldi	r24, 0x00	; 0
    720a:	0f 90       	pop	r0
    720c:	0f 90       	pop	r0
    720e:	0f 90       	pop	r0
    7210:	0f 90       	pop	r0
    7212:	df 91       	pop	r29
    7214:	cf 91       	pop	r28
    7216:	08 95       	ret

00007218 <twi_attachSlaveRxEvent>:
    7218:	cf 93       	push	r28
    721a:	df 93       	push	r29
    721c:	1f 92       	push	r1
    721e:	1f 92       	push	r1
    7220:	cd b7       	in	r28, 0x3d	; 61
    7222:	de b7       	in	r29, 0x3e	; 62
    7224:	9a 83       	std	Y+2, r25	; 0x02
    7226:	89 83       	std	Y+1, r24	; 0x01
    7228:	89 81       	ldd	r24, Y+1	; 0x01
    722a:	9a 81       	ldd	r25, Y+2	; 0x02
    722c:	90 93 36 03 	sts	0x0336, r25	; 0x800336 <twi_onSlaveReceive+0x1>
    7230:	80 93 35 03 	sts	0x0335, r24	; 0x800335 <twi_onSlaveReceive>
    7234:	00 00       	nop
    7236:	0f 90       	pop	r0
    7238:	0f 90       	pop	r0
    723a:	df 91       	pop	r29
    723c:	cf 91       	pop	r28
    723e:	08 95       	ret

00007240 <twi_attachSlaveTxEvent>:
    7240:	cf 93       	push	r28
    7242:	df 93       	push	r29
    7244:	1f 92       	push	r1
    7246:	1f 92       	push	r1
    7248:	cd b7       	in	r28, 0x3d	; 61
    724a:	de b7       	in	r29, 0x3e	; 62
    724c:	9a 83       	std	Y+2, r25	; 0x02
    724e:	89 83       	std	Y+1, r24	; 0x01
    7250:	89 81       	ldd	r24, Y+1	; 0x01
    7252:	9a 81       	ldd	r25, Y+2	; 0x02
    7254:	90 93 34 03 	sts	0x0334, r25	; 0x800334 <twi_onSlaveTransmit+0x1>
    7258:	80 93 33 03 	sts	0x0333, r24	; 0x800333 <twi_onSlaveTransmit>
    725c:	00 00       	nop
    725e:	0f 90       	pop	r0
    7260:	0f 90       	pop	r0
    7262:	df 91       	pop	r29
    7264:	cf 91       	pop	r28
    7266:	08 95       	ret

00007268 <twi_reply>:
    7268:	cf 93       	push	r28
    726a:	df 93       	push	r29
    726c:	1f 92       	push	r1
    726e:	cd b7       	in	r28, 0x3d	; 61
    7270:	de b7       	in	r29, 0x3e	; 62
    7272:	89 83       	std	Y+1, r24	; 0x01
    7274:	89 81       	ldd	r24, Y+1	; 0x01
    7276:	88 23       	and	r24, r24
    7278:	31 f0       	breq	.+12     	; 0x7286 <twi_reply+0x1e>
    727a:	8c eb       	ldi	r24, 0xBC	; 188
    727c:	90 e0       	ldi	r25, 0x00	; 0
    727e:	25 ec       	ldi	r18, 0xC5	; 197
    7280:	fc 01       	movw	r30, r24
    7282:	20 83       	st	Z, r18
    7284:	05 c0       	rjmp	.+10     	; 0x7290 <twi_reply+0x28>
    7286:	8c eb       	ldi	r24, 0xBC	; 188
    7288:	90 e0       	ldi	r25, 0x00	; 0
    728a:	25 e8       	ldi	r18, 0x85	; 133
    728c:	fc 01       	movw	r30, r24
    728e:	20 83       	st	Z, r18
    7290:	00 00       	nop
    7292:	0f 90       	pop	r0
    7294:	df 91       	pop	r29
    7296:	cf 91       	pop	r28
    7298:	08 95       	ret

0000729a <twi_stop>:
    729a:	cf 93       	push	r28
    729c:	df 93       	push	r29
    729e:	cd b7       	in	r28, 0x3d	; 61
    72a0:	de b7       	in	r29, 0x3e	; 62
    72a2:	a5 97       	sbiw	r28, 0x25	; 37
    72a4:	0f b6       	in	r0, 0x3f	; 63
    72a6:	f8 94       	cli
    72a8:	de bf       	out	0x3e, r29	; 62
    72aa:	0f be       	out	0x3f, r0	; 63
    72ac:	cd bf       	out	0x3d, r28	; 61
    72ae:	8c eb       	ldi	r24, 0xBC	; 188
    72b0:	90 e0       	ldi	r25, 0x00	; 0
    72b2:	25 ed       	ldi	r18, 0xD5	; 213
    72b4:	fc 01       	movw	r30, r24
    72b6:	20 83       	st	Z, r18
    72b8:	88 e0       	ldi	r24, 0x08	; 8
    72ba:	8d 83       	std	Y+5, r24	; 0x05
    72bc:	8d 81       	ldd	r24, Y+5	; 0x05
    72be:	28 2f       	mov	r18, r24
    72c0:	30 e0       	ldi	r19, 0x00	; 0
    72c2:	40 e0       	ldi	r20, 0x00	; 0
    72c4:	50 e0       	ldi	r21, 0x00	; 0
    72c6:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    72ca:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    72ce:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    72d2:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    72d6:	82 0f       	add	r24, r18
    72d8:	93 1f       	adc	r25, r19
    72da:	a4 1f       	adc	r26, r20
    72dc:	b5 1f       	adc	r27, r21
    72de:	01 97       	sbiw	r24, 0x01	; 1
    72e0:	a1 09       	sbc	r26, r1
    72e2:	b1 09       	sbc	r27, r1
    72e4:	2d 81       	ldd	r18, Y+5	; 0x05
    72e6:	22 2f       	mov	r18, r18
    72e8:	30 e0       	ldi	r19, 0x00	; 0
    72ea:	40 e0       	ldi	r20, 0x00	; 0
    72ec:	50 e0       	ldi	r21, 0x00	; 0
    72ee:	bc 01       	movw	r22, r24
    72f0:	cd 01       	movw	r24, r26
    72f2:	0e 94 39 4c 	call	0x9872	; 0x9872 <__udivmodsi4>
    72f6:	da 01       	movw	r26, r20
    72f8:	c9 01       	movw	r24, r18
    72fa:	89 83       	std	Y+1, r24	; 0x01
    72fc:	9a 83       	std	Y+2, r25	; 0x02
    72fe:	ab 83       	std	Y+3, r26	; 0x03
    7300:	bc 83       	std	Y+4, r27	; 0x04
    7302:	15 c1       	rjmp	.+554    	; 0x752e <twi_stop+0x294>
    7304:	80 91 2d 03 	lds	r24, 0x032D	; 0x80032d <twi_timeout_us>
    7308:	90 91 2e 03 	lds	r25, 0x032E	; 0x80032e <twi_timeout_us+0x1>
    730c:	a0 91 2f 03 	lds	r26, 0x032F	; 0x80032f <twi_timeout_us+0x2>
    7310:	b0 91 30 03 	lds	r27, 0x0330	; 0x800330 <twi_timeout_us+0x3>
    7314:	89 2b       	or	r24, r25
    7316:	8a 2b       	or	r24, r26
    7318:	8b 2b       	or	r24, r27
    731a:	09 f4       	brne	.+2      	; 0x731e <twi_stop+0x84>
    731c:	08 c1       	rjmp	.+528    	; 0x752e <twi_stop+0x294>
    731e:	89 81       	ldd	r24, Y+1	; 0x01
    7320:	9a 81       	ldd	r25, Y+2	; 0x02
    7322:	ab 81       	ldd	r26, Y+3	; 0x03
    7324:	bc 81       	ldd	r27, Y+4	; 0x04
    7326:	89 2b       	or	r24, r25
    7328:	8a 2b       	or	r24, r26
    732a:	8b 2b       	or	r24, r27
    732c:	09 f4       	brne	.+2      	; 0x7330 <twi_stop+0x96>
    732e:	fb c0       	rjmp	.+502    	; 0x7526 <twi_stop+0x28c>
    7330:	80 e0       	ldi	r24, 0x00	; 0
    7332:	90 e0       	ldi	r25, 0x00	; 0
    7334:	a0 e2       	ldi	r26, 0x20	; 32
    7336:	b1 e4       	ldi	r27, 0x41	; 65
    7338:	8e 83       	std	Y+6, r24	; 0x06
    733a:	9f 83       	std	Y+7, r25	; 0x07
    733c:	a8 87       	std	Y+8, r26	; 0x08
    733e:	b9 87       	std	Y+9, r27	; 0x09
    7340:	2b ea       	ldi	r18, 0xAB	; 171
    7342:	3a ea       	ldi	r19, 0xAA	; 170
    7344:	4a ea       	ldi	r20, 0xAA	; 170
    7346:	50 e4       	ldi	r21, 0x40	; 64
    7348:	6e 81       	ldd	r22, Y+6	; 0x06
    734a:	7f 81       	ldd	r23, Y+7	; 0x07
    734c:	88 85       	ldd	r24, Y+8	; 0x08
    734e:	99 85       	ldd	r25, Y+9	; 0x09
    7350:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    7354:	dc 01       	movw	r26, r24
    7356:	cb 01       	movw	r24, r22
    7358:	8a 87       	std	Y+10, r24	; 0x0a
    735a:	9b 87       	std	Y+11, r25	; 0x0b
    735c:	ac 87       	std	Y+12, r26	; 0x0c
    735e:	bd 87       	std	Y+13, r27	; 0x0d
    7360:	20 e0       	ldi	r18, 0x00	; 0
    7362:	30 e0       	ldi	r19, 0x00	; 0
    7364:	40 e8       	ldi	r20, 0x80	; 128
    7366:	50 e4       	ldi	r21, 0x40	; 64
    7368:	6e 81       	ldd	r22, Y+6	; 0x06
    736a:	7f 81       	ldd	r23, Y+7	; 0x07
    736c:	88 85       	ldd	r24, Y+8	; 0x08
    736e:	99 85       	ldd	r25, Y+9	; 0x09
    7370:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    7374:	dc 01       	movw	r26, r24
    7376:	cb 01       	movw	r24, r22
    7378:	8e 87       	std	Y+14, r24	; 0x0e
    737a:	9f 87       	std	Y+15, r25	; 0x0f
    737c:	a8 8b       	std	Y+16, r26	; 0x10
    737e:	b9 8b       	std	Y+17, r27	; 0x11
    7380:	20 e0       	ldi	r18, 0x00	; 0
    7382:	30 e0       	ldi	r19, 0x00	; 0
    7384:	40 e8       	ldi	r20, 0x80	; 128
    7386:	5f e3       	ldi	r21, 0x3F	; 63
    7388:	6a 85       	ldd	r22, Y+10	; 0x0a
    738a:	7b 85       	ldd	r23, Y+11	; 0x0b
    738c:	8c 85       	ldd	r24, Y+12	; 0x0c
    738e:	9d 85       	ldd	r25, Y+13	; 0x0d
    7390:	0e 94 a8 42 	call	0x8550	; 0x8550 <__cmpsf2>
    7394:	88 23       	and	r24, r24
    7396:	1c f4       	brge	.+6      	; 0x739e <twi_stop+0x104>
    7398:	81 e0       	ldi	r24, 0x01	; 1
    739a:	8a 8b       	std	Y+18, r24	; 0x12
    739c:	b2 c0       	rjmp	.+356    	; 0x7502 <twi_stop+0x268>
    739e:	20 e0       	ldi	r18, 0x00	; 0
    73a0:	3f ef       	ldi	r19, 0xFF	; 255
    73a2:	4f e7       	ldi	r20, 0x7F	; 127
    73a4:	57 e4       	ldi	r21, 0x47	; 71
    73a6:	6e 85       	ldd	r22, Y+14	; 0x0e
    73a8:	7f 85       	ldd	r23, Y+15	; 0x0f
    73aa:	88 89       	ldd	r24, Y+16	; 0x10
    73ac:	99 89       	ldd	r25, Y+17	; 0x11
    73ae:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    73b2:	18 16       	cp	r1, r24
    73b4:	0c f0       	brlt	.+2      	; 0x73b8 <twi_stop+0x11e>
    73b6:	7b c0       	rjmp	.+246    	; 0x74ae <twi_stop+0x214>
    73b8:	20 e0       	ldi	r18, 0x00	; 0
    73ba:	30 e0       	ldi	r19, 0x00	; 0
    73bc:	4a e7       	ldi	r20, 0x7A	; 122
    73be:	54 e4       	ldi	r21, 0x44	; 68
    73c0:	6e 81       	ldd	r22, Y+6	; 0x06
    73c2:	7f 81       	ldd	r23, Y+7	; 0x07
    73c4:	88 85       	ldd	r24, Y+8	; 0x08
    73c6:	99 85       	ldd	r25, Y+9	; 0x09
    73c8:	0e 94 ac 42 	call	0x8558	; 0x8558 <__divsf3>
    73cc:	dc 01       	movw	r26, r24
    73ce:	cb 01       	movw	r24, r22
    73d0:	8b 8b       	std	Y+19, r24	; 0x13
    73d2:	9c 8b       	std	Y+20, r25	; 0x14
    73d4:	ad 8b       	std	Y+21, r26	; 0x15
    73d6:	be 8b       	std	Y+22, r27	; 0x16
    73d8:	20 e0       	ldi	r18, 0x00	; 0
    73da:	30 e0       	ldi	r19, 0x00	; 0
    73dc:	4a e7       	ldi	r20, 0x7A	; 122
    73de:	55 e4       	ldi	r21, 0x45	; 69
    73e0:	6b 89       	ldd	r22, Y+19	; 0x13
    73e2:	7c 89       	ldd	r23, Y+20	; 0x14
    73e4:	8d 89       	ldd	r24, Y+21	; 0x15
    73e6:	9e 89       	ldd	r25, Y+22	; 0x16
    73e8:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    73ec:	dc 01       	movw	r26, r24
    73ee:	cb 01       	movw	r24, r22
    73f0:	8f 8b       	std	Y+23, r24	; 0x17
    73f2:	98 8f       	std	Y+24, r25	; 0x18
    73f4:	a9 8f       	std	Y+25, r26	; 0x19
    73f6:	ba 8f       	std	Y+26, r27	; 0x1a
    73f8:	20 e0       	ldi	r18, 0x00	; 0
    73fa:	30 e0       	ldi	r19, 0x00	; 0
    73fc:	40 e8       	ldi	r20, 0x80	; 128
    73fe:	5f e3       	ldi	r21, 0x3F	; 63
    7400:	6f 89       	ldd	r22, Y+23	; 0x17
    7402:	78 8d       	ldd	r23, Y+24	; 0x18
    7404:	89 8d       	ldd	r24, Y+25	; 0x19
    7406:	9a 8d       	ldd	r25, Y+26	; 0x1a
    7408:	0e 94 a8 42 	call	0x8550	; 0x8550 <__cmpsf2>
    740c:	88 23       	and	r24, r24
    740e:	2c f4       	brge	.+10     	; 0x741a <twi_stop+0x180>
    7410:	81 e0       	ldi	r24, 0x01	; 1
    7412:	90 e0       	ldi	r25, 0x00	; 0
    7414:	9c 8f       	std	Y+28, r25	; 0x1c
    7416:	8b 8f       	std	Y+27, r24	; 0x1b
    7418:	3f c0       	rjmp	.+126    	; 0x7498 <twi_stop+0x1fe>
    741a:	20 e0       	ldi	r18, 0x00	; 0
    741c:	3f ef       	ldi	r19, 0xFF	; 255
    741e:	4f e7       	ldi	r20, 0x7F	; 127
    7420:	57 e4       	ldi	r21, 0x47	; 71
    7422:	6f 89       	ldd	r22, Y+23	; 0x17
    7424:	78 8d       	ldd	r23, Y+24	; 0x18
    7426:	89 8d       	ldd	r24, Y+25	; 0x19
    7428:	9a 8d       	ldd	r25, Y+26	; 0x1a
    742a:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    742e:	18 16       	cp	r1, r24
    7430:	4c f5       	brge	.+82     	; 0x7484 <twi_stop+0x1ea>
    7432:	20 e0       	ldi	r18, 0x00	; 0
    7434:	30 e0       	ldi	r19, 0x00	; 0
    7436:	40 e2       	ldi	r20, 0x20	; 32
    7438:	51 e4       	ldi	r21, 0x41	; 65
    743a:	6b 89       	ldd	r22, Y+19	; 0x13
    743c:	7c 89       	ldd	r23, Y+20	; 0x14
    743e:	8d 89       	ldd	r24, Y+21	; 0x15
    7440:	9e 89       	ldd	r25, Y+22	; 0x16
    7442:	0e 94 fb 43 	call	0x87f6	; 0x87f6 <__mulsf3>
    7446:	dc 01       	movw	r26, r24
    7448:	cb 01       	movw	r24, r22
    744a:	bc 01       	movw	r22, r24
    744c:	cd 01       	movw	r24, r26
    744e:	0e 94 19 43 	call	0x8632	; 0x8632 <__fixunssfsi>
    7452:	dc 01       	movw	r26, r24
    7454:	cb 01       	movw	r24, r22
    7456:	9c 8f       	std	Y+28, r25	; 0x1c
    7458:	8b 8f       	std	Y+27, r24	; 0x1b
    745a:	0f c0       	rjmp	.+30     	; 0x747a <twi_stop+0x1e0>
    745c:	80 e9       	ldi	r24, 0x90	; 144
    745e:	91 e0       	ldi	r25, 0x01	; 1
    7460:	9e 8f       	std	Y+30, r25	; 0x1e
    7462:	8d 8f       	std	Y+29, r24	; 0x1d
    7464:	8d 8d       	ldd	r24, Y+29	; 0x1d
    7466:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7468:	01 97       	sbiw	r24, 0x01	; 1
    746a:	f1 f7       	brne	.-4      	; 0x7468 <twi_stop+0x1ce>
    746c:	9e 8f       	std	Y+30, r25	; 0x1e
    746e:	8d 8f       	std	Y+29, r24	; 0x1d
    7470:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7472:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7474:	01 97       	sbiw	r24, 0x01	; 1
    7476:	9c 8f       	std	Y+28, r25	; 0x1c
    7478:	8b 8f       	std	Y+27, r24	; 0x1b
    747a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    747c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    747e:	89 2b       	or	r24, r25
    7480:	69 f7       	brne	.-38     	; 0x745c <twi_stop+0x1c2>
    7482:	3f c0       	rjmp	.+126    	; 0x7502 <twi_stop+0x268>
    7484:	6f 89       	ldd	r22, Y+23	; 0x17
    7486:	78 8d       	ldd	r23, Y+24	; 0x18
    7488:	89 8d       	ldd	r24, Y+25	; 0x19
    748a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    748c:	0e 94 19 43 	call	0x8632	; 0x8632 <__fixunssfsi>
    7490:	dc 01       	movw	r26, r24
    7492:	cb 01       	movw	r24, r22
    7494:	9c 8f       	std	Y+28, r25	; 0x1c
    7496:	8b 8f       	std	Y+27, r24	; 0x1b
    7498:	8b 8d       	ldd	r24, Y+27	; 0x1b
    749a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    749c:	98 a3       	std	Y+32, r25	; 0x20
    749e:	8f 8f       	std	Y+31, r24	; 0x1f
    74a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    74a2:	98 a1       	ldd	r25, Y+32	; 0x20
    74a4:	01 97       	sbiw	r24, 0x01	; 1
    74a6:	f1 f7       	brne	.-4      	; 0x74a4 <twi_stop+0x20a>
    74a8:	98 a3       	std	Y+32, r25	; 0x20
    74aa:	8f 8f       	std	Y+31, r24	; 0x1f
    74ac:	2a c0       	rjmp	.+84     	; 0x7502 <twi_stop+0x268>
    74ae:	20 e0       	ldi	r18, 0x00	; 0
    74b0:	30 e0       	ldi	r19, 0x00	; 0
    74b2:	4f e7       	ldi	r20, 0x7F	; 127
    74b4:	53 e4       	ldi	r21, 0x43	; 67
    74b6:	6a 85       	ldd	r22, Y+10	; 0x0a
    74b8:	7b 85       	ldd	r23, Y+11	; 0x0b
    74ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    74bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    74be:	0e 94 f7 43 	call	0x87ee	; 0x87ee <__gesf2>
    74c2:	18 16       	cp	r1, r24
    74c4:	ac f4       	brge	.+42     	; 0x74f0 <twi_stop+0x256>
    74c6:	6e 85       	ldd	r22, Y+14	; 0x0e
    74c8:	7f 85       	ldd	r23, Y+15	; 0x0f
    74ca:	88 89       	ldd	r24, Y+16	; 0x10
    74cc:	99 89       	ldd	r25, Y+17	; 0x11
    74ce:	0e 94 19 43 	call	0x8632	; 0x8632 <__fixunssfsi>
    74d2:	dc 01       	movw	r26, r24
    74d4:	cb 01       	movw	r24, r22
    74d6:	9a a3       	std	Y+34, r25	; 0x22
    74d8:	89 a3       	std	Y+33, r24	; 0x21
    74da:	89 a1       	ldd	r24, Y+33	; 0x21
    74dc:	9a a1       	ldd	r25, Y+34	; 0x22
    74de:	9c a3       	std	Y+36, r25	; 0x24
    74e0:	8b a3       	std	Y+35, r24	; 0x23
    74e2:	8b a1       	ldd	r24, Y+35	; 0x23
    74e4:	9c a1       	ldd	r25, Y+36	; 0x24
    74e6:	01 97       	sbiw	r24, 0x01	; 1
    74e8:	f1 f7       	brne	.-4      	; 0x74e6 <twi_stop+0x24c>
    74ea:	9c a3       	std	Y+36, r25	; 0x24
    74ec:	8b a3       	std	Y+35, r24	; 0x23
    74ee:	0f c0       	rjmp	.+30     	; 0x750e <twi_stop+0x274>
    74f0:	6a 85       	ldd	r22, Y+10	; 0x0a
    74f2:	7b 85       	ldd	r23, Y+11	; 0x0b
    74f4:	8c 85       	ldd	r24, Y+12	; 0x0c
    74f6:	9d 85       	ldd	r25, Y+13	; 0x0d
    74f8:	0e 94 19 43 	call	0x8632	; 0x8632 <__fixunssfsi>
    74fc:	dc 01       	movw	r26, r24
    74fe:	cb 01       	movw	r24, r22
    7500:	8a 8b       	std	Y+18, r24	; 0x12
    7502:	8a 89       	ldd	r24, Y+18	; 0x12
    7504:	8d a3       	std	Y+37, r24	; 0x25
    7506:	8d a1       	ldd	r24, Y+37	; 0x25
    7508:	8a 95       	dec	r24
    750a:	f1 f7       	brne	.-4      	; 0x7508 <twi_stop+0x26e>
    750c:	8d a3       	std	Y+37, r24	; 0x25
    750e:	89 81       	ldd	r24, Y+1	; 0x01
    7510:	9a 81       	ldd	r25, Y+2	; 0x02
    7512:	ab 81       	ldd	r26, Y+3	; 0x03
    7514:	bc 81       	ldd	r27, Y+4	; 0x04
    7516:	01 97       	sbiw	r24, 0x01	; 1
    7518:	a1 09       	sbc	r26, r1
    751a:	b1 09       	sbc	r27, r1
    751c:	89 83       	std	Y+1, r24	; 0x01
    751e:	9a 83       	std	Y+2, r25	; 0x02
    7520:	ab 83       	std	Y+3, r26	; 0x03
    7522:	bc 83       	std	Y+4, r27	; 0x04
    7524:	04 c0       	rjmp	.+8      	; 0x752e <twi_stop+0x294>
    7526:	80 91 32 03 	lds	r24, 0x0332	; 0x800332 <twi_do_reset_on_timeout>
    752a:	26 d0       	rcall	.+76     	; 0x7578 <twi_handleTimeout>
    752c:	0d c0       	rjmp	.+26     	; 0x7548 <twi_stop+0x2ae>
    752e:	8c eb       	ldi	r24, 0xBC	; 188
    7530:	90 e0       	ldi	r25, 0x00	; 0
    7532:	fc 01       	movw	r30, r24
    7534:	80 81       	ld	r24, Z
    7536:	88 2f       	mov	r24, r24
    7538:	90 e0       	ldi	r25, 0x00	; 0
    753a:	80 71       	andi	r24, 0x10	; 16
    753c:	99 27       	eor	r25, r25
    753e:	89 2b       	or	r24, r25
    7540:	09 f0       	breq	.+2      	; 0x7544 <twi_stop+0x2aa>
    7542:	e0 ce       	rjmp	.-576    	; 0x7304 <twi_stop+0x6a>
    7544:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
    7548:	a5 96       	adiw	r28, 0x25	; 37
    754a:	0f b6       	in	r0, 0x3f	; 63
    754c:	f8 94       	cli
    754e:	de bf       	out	0x3e, r29	; 62
    7550:	0f be       	out	0x3f, r0	; 63
    7552:	cd bf       	out	0x3d, r28	; 61
    7554:	df 91       	pop	r29
    7556:	cf 91       	pop	r28
    7558:	08 95       	ret

0000755a <twi_releaseBus>:
    755a:	cf 93       	push	r28
    755c:	df 93       	push	r29
    755e:	cd b7       	in	r28, 0x3d	; 61
    7560:	de b7       	in	r29, 0x3e	; 62
    7562:	8c eb       	ldi	r24, 0xBC	; 188
    7564:	90 e0       	ldi	r25, 0x00	; 0
    7566:	25 ec       	ldi	r18, 0xC5	; 197
    7568:	fc 01       	movw	r30, r24
    756a:	20 83       	st	Z, r18
    756c:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
    7570:	00 00       	nop
    7572:	df 91       	pop	r29
    7574:	cf 91       	pop	r28
    7576:	08 95       	ret

00007578 <twi_handleTimeout>:
    7578:	cf 93       	push	r28
    757a:	df 93       	push	r29
    757c:	00 d0       	rcall	.+0      	; 0x757e <twi_handleTimeout+0x6>
    757e:	cd b7       	in	r28, 0x3d	; 61
    7580:	de b7       	in	r29, 0x3e	; 62
    7582:	8b 83       	std	Y+3, r24	; 0x03
    7584:	81 e0       	ldi	r24, 0x01	; 1
    7586:	80 93 31 03 	sts	0x0331, r24	; 0x800331 <twi_timed_out_flag>
    758a:	8b 81       	ldd	r24, Y+3	; 0x03
    758c:	88 23       	and	r24, r24
    758e:	b1 f0       	breq	.+44     	; 0x75bc <twi_handleTimeout+0x44>
    7590:	88 eb       	ldi	r24, 0xB8	; 184
    7592:	90 e0       	ldi	r25, 0x00	; 0
    7594:	fc 01       	movw	r30, r24
    7596:	80 81       	ld	r24, Z
    7598:	89 83       	std	Y+1, r24	; 0x01
    759a:	8a eb       	ldi	r24, 0xBA	; 186
    759c:	90 e0       	ldi	r25, 0x00	; 0
    759e:	fc 01       	movw	r30, r24
    75a0:	80 81       	ld	r24, Z
    75a2:	8a 83       	std	Y+2, r24	; 0x02
    75a4:	5e db       	rcall	.-2372   	; 0x6c62 <twi_disable>
    75a6:	2a db       	rcall	.-2476   	; 0x6bfc <twi_init>
    75a8:	8a eb       	ldi	r24, 0xBA	; 186
    75aa:	90 e0       	ldi	r25, 0x00	; 0
    75ac:	2a 81       	ldd	r18, Y+2	; 0x02
    75ae:	fc 01       	movw	r30, r24
    75b0:	20 83       	st	Z, r18
    75b2:	88 eb       	ldi	r24, 0xB8	; 184
    75b4:	90 e0       	ldi	r25, 0x00	; 0
    75b6:	29 81       	ldd	r18, Y+1	; 0x01
    75b8:	fc 01       	movw	r30, r24
    75ba:	20 83       	st	Z, r18
    75bc:	00 00       	nop
    75be:	0f 90       	pop	r0
    75c0:	0f 90       	pop	r0
    75c2:	0f 90       	pop	r0
    75c4:	df 91       	pop	r29
    75c6:	cf 91       	pop	r28
    75c8:	08 95       	ret

000075ca <__vector_39>:

ISR(TWI_vect)
{
    75ca:	1f 92       	push	r1
    75cc:	0f 92       	push	r0
    75ce:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    75d2:	0f 92       	push	r0
    75d4:	11 24       	eor	r1, r1
    75d6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    75da:	0f 92       	push	r0
    75dc:	2f 93       	push	r18
    75de:	3f 93       	push	r19
    75e0:	4f 93       	push	r20
    75e2:	5f 93       	push	r21
    75e4:	6f 93       	push	r22
    75e6:	7f 93       	push	r23
    75e8:	8f 93       	push	r24
    75ea:	9f 93       	push	r25
    75ec:	af 93       	push	r26
    75ee:	bf 93       	push	r27
    75f0:	ef 93       	push	r30
    75f2:	ff 93       	push	r31
    75f4:	cf 93       	push	r28
    75f6:	df 93       	push	r29
    75f8:	cd b7       	in	r28, 0x3d	; 61
    75fa:	de b7       	in	r29, 0x3e	; 62
  switch(TW_STATUS){
    75fc:	89 eb       	ldi	r24, 0xB9	; 185
    75fe:	90 e0       	ldi	r25, 0x00	; 0
    7600:	fc 01       	movw	r30, r24
    7602:	80 81       	ld	r24, Z
    7604:	88 2f       	mov	r24, r24
    7606:	90 e0       	ldi	r25, 0x00	; 0
    7608:	88 7f       	andi	r24, 0xF8	; 248
    760a:	99 27       	eor	r25, r25
    760c:	09 2e       	mov	r0, r25
    760e:	00 0c       	add	r0, r0
    7610:	aa 0b       	sbc	r26, r26
    7612:	bb 0b       	sbc	r27, r27
    7614:	40 e0       	ldi	r20, 0x00	; 0
    7616:	50 e0       	ldi	r21, 0x00	; 0
    7618:	28 ef       	ldi	r18, 0xF8	; 248
    761a:	30 e0       	ldi	r19, 0x00	; 0
    761c:	84 1b       	sub	r24, r20
    761e:	95 0b       	sbc	r25, r21
    7620:	28 17       	cp	r18, r24
    7622:	39 07       	cpc	r19, r25
    7624:	08 f4       	brcc	.+2      	; 0x7628 <__vector_39+0x5e>
    7626:	06 c1       	rjmp	.+524    	; 0x7834 <__vector_39+0x26a>
    7628:	fc 01       	movw	r30, r24
    762a:	88 27       	eor	r24, r24
    762c:	ee 58       	subi	r30, 0x8E	; 142
    762e:	ff 4f       	sbci	r31, 0xFF	; 255
    7630:	8f 4f       	sbci	r24, 0xFF	; 255
    7632:	0c 94 5b 4c 	jmp	0x98b6	; 0x98b6 <__tablejump2__>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    7636:	8b eb       	ldi	r24, 0xBB	; 187
    7638:	90 e0       	ldi	r25, 0x00	; 0
    763a:	20 91 2a 03 	lds	r18, 0x032A	; 0x80032a <twi_slarw>
    763e:	fc 01       	movw	r30, r24
    7640:	20 83       	st	Z, r18
      twi_reply(1);
    7642:	81 e0       	ldi	r24, 0x01	; 1
    7644:	11 de       	rcall	.-990    	; 0x7268 <twi_reply>
      break;
    7646:	f6 c0       	rjmp	.+492    	; 0x7834 <__vector_39+0x26a>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    7648:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <twi_masterBufferIndex>
    764c:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_masterBufferLength>
    7650:	98 17       	cp	r25, r24
    7652:	98 f4       	brcc	.+38     	; 0x767a <__vector_39+0xb0>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    7654:	8b eb       	ldi	r24, 0xBB	; 187
    7656:	90 e0       	ldi	r25, 0x00	; 0
    7658:	20 91 57 03 	lds	r18, 0x0357	; 0x800357 <twi_masterBufferIndex>
    765c:	31 e0       	ldi	r19, 0x01	; 1
    765e:	32 0f       	add	r19, r18
    7660:	30 93 57 03 	sts	0x0357, r19	; 0x800357 <twi_masterBufferIndex>
    7664:	22 2f       	mov	r18, r18
    7666:	30 e0       	ldi	r19, 0x00	; 0
    7668:	29 5c       	subi	r18, 0xC9	; 201
    766a:	3c 4f       	sbci	r19, 0xFC	; 252
    766c:	f9 01       	movw	r30, r18
    766e:	20 81       	ld	r18, Z
    7670:	fc 01       	movw	r30, r24
    7672:	20 83       	st	Z, r18
        twi_reply(1);
    7674:	81 e0       	ldi	r24, 0x01	; 1
    7676:	f8 dd       	rcall	.-1040   	; 0x7268 <twi_reply>
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
         twi_state = TWI_READY;
        }
      }
      break;
    7678:	dd c0       	rjmp	.+442    	; 0x7834 <__vector_39+0x26a>
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
        twi_reply(1);
      }else{
        if (twi_sendStop){
    767a:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <twi_sendStop>
    767e:	88 23       	and	r24, r24
          twi_stop();
    7680:	11 f0       	breq	.+4      	; 0x7686 <__vector_39+0xbc>
    7682:	0b de       	rcall	.-1002   	; 0x729a <twi_stop>
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
         twi_state = TWI_READY;
        }
      }
      break;
    7684:	d7 c0       	rjmp	.+430    	; 0x7834 <__vector_39+0x26a>
        twi_reply(1);
      }else{
        if (twi_sendStop){
          twi_stop();
       } else {
         twi_inRepStart = true;	// we're gonna send the START
    7686:	81 e0       	ldi	r24, 0x01	; 1
    7688:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <twi_inRepStart>
         // don't enable the interrupt. We'll generate the start, but we
         // avoid handling the interrupt until we're in the next transaction,
         // at the point where we would normally issue the start.
         TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    768c:	8c eb       	ldi	r24, 0xBC	; 188
    768e:	90 e0       	ldi	r25, 0x00	; 0
    7690:	24 ea       	ldi	r18, 0xA4	; 164
    7692:	fc 01       	movw	r30, r24
    7694:	20 83       	st	Z, r18
         twi_state = TWI_READY;
    7696:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
        }
      }
      break;
    769a:	cc c0       	rjmp	.+408    	; 0x7834 <__vector_39+0x26a>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
    769c:	80 e2       	ldi	r24, 0x20	; 32
    769e:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <twi_error>
      twi_stop();
    76a2:	fb dd       	rcall	.-1034   	; 0x729a <twi_stop>
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    76a4:	c7 c0       	rjmp	.+398    	; 0x7834 <__vector_39+0x26a>
    76a6:	80 e3       	ldi	r24, 0x30	; 48
    76a8:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <twi_error>
      twi_stop();
      break;
    76ac:	f6 dd       	rcall	.-1044   	; 0x729a <twi_stop>
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    76ae:	c2 c0       	rjmp	.+388    	; 0x7834 <__vector_39+0x26a>
    76b0:	88 e3       	ldi	r24, 0x38	; 56
    76b2:	80 93 9c 03 	sts	0x039C, r24	; 0x80039c <twi_error>
      twi_releaseBus();
    76b6:	51 df       	rcall	.-350    	; 0x755a <twi_releaseBus>
      break;
    76b8:	bd c0       	rjmp	.+378    	; 0x7834 <__vector_39+0x26a>

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    76ba:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <twi_masterBufferIndex>
    76be:	91 e0       	ldi	r25, 0x01	; 1
    76c0:	98 0f       	add	r25, r24
    76c2:	90 93 57 03 	sts	0x0357, r25	; 0x800357 <twi_masterBufferIndex>
    76c6:	88 2f       	mov	r24, r24
    76c8:	90 e0       	ldi	r25, 0x00	; 0
    76ca:	2b eb       	ldi	r18, 0xBB	; 187
    76cc:	30 e0       	ldi	r19, 0x00	; 0
    76ce:	f9 01       	movw	r30, r18
    76d0:	20 81       	ld	r18, Z
    76d2:	89 5c       	subi	r24, 0xC9	; 201
    76d4:	9c 4f       	sbci	r25, 0xFC	; 252
    76d6:	fc 01       	movw	r30, r24
    76d8:	20 83       	st	Z, r18
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    76da:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <twi_masterBufferIndex>
    76de:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <twi_masterBufferLength>
        twi_reply(1);
    76e2:	98 17       	cp	r25, r24
    76e4:	18 f4       	brcc	.+6      	; 0x76ec <__vector_39+0x122>
    76e6:	81 e0       	ldi	r24, 0x01	; 1
      }else{
        twi_reply(0);
      }
      break;
    76e8:	bf dd       	rcall	.-1154   	; 0x7268 <twi_reply>
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
        twi_reply(1);
      }else{
        twi_reply(0);
    76ea:	a4 c0       	rjmp	.+328    	; 0x7834 <__vector_39+0x26a>
    76ec:	80 e0       	ldi	r24, 0x00	; 0
    76ee:	bc dd       	rcall	.-1160   	; 0x7268 <twi_reply>
      }
      break;
    76f0:	a1 c0       	rjmp	.+322    	; 0x7834 <__vector_39+0x26a>
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    76f2:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <twi_masterBufferIndex>
    76f6:	91 e0       	ldi	r25, 0x01	; 1
    76f8:	98 0f       	add	r25, r24
    76fa:	90 93 57 03 	sts	0x0357, r25	; 0x800357 <twi_masterBufferIndex>
    76fe:	88 2f       	mov	r24, r24
    7700:	90 e0       	ldi	r25, 0x00	; 0
    7702:	2b eb       	ldi	r18, 0xBB	; 187
    7704:	30 e0       	ldi	r19, 0x00	; 0
    7706:	f9 01       	movw	r30, r18
    7708:	20 81       	ld	r18, Z
    770a:	89 5c       	subi	r24, 0xC9	; 201
    770c:	9c 4f       	sbci	r25, 0xFC	; 252
    770e:	fc 01       	movw	r30, r24
      if (twi_sendStop){
    7710:	20 83       	st	Z, r18
    7712:	80 91 2b 03 	lds	r24, 0x032B	; 0x80032b <twi_sendStop>
    7716:	88 23       	and	r24, r24
        twi_stop();
    7718:	11 f0       	breq	.+4      	; 0x771e <__vector_39+0x154>
    771a:	bf dd       	rcall	.-1154   	; 0x729a <twi_stop>
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
        twi_state = TWI_READY;
      }
      break;
    771c:	8b c0       	rjmp	.+278    	; 0x7834 <__vector_39+0x26a>
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
      if (twi_sendStop){
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
    771e:	81 e0       	ldi	r24, 0x01	; 1
    7720:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    7724:	8c eb       	ldi	r24, 0xBC	; 188
    7726:	90 e0       	ldi	r25, 0x00	; 0
    7728:	24 ea       	ldi	r18, 0xA4	; 164
    772a:	fc 01       	movw	r30, r24
        twi_state = TWI_READY;
    772c:	20 83       	st	Z, r18
    772e:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
      }
      break;
    case TW_MR_SLA_NACK: // address sent, nack received
      twi_stop();
    7732:	80 c0       	rjmp	.+256    	; 0x7834 <__vector_39+0x26a>
      break;
    7734:	b2 dd       	rcall	.-1180   	; 0x729a <twi_stop>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    7736:	7e c0       	rjmp	.+252    	; 0x7834 <__vector_39+0x26a>
    7738:	83 e0       	ldi	r24, 0x03	; 3
    773a:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    773e:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <twi_rxBufferIndex>
      twi_reply(1);
    7742:	81 e0       	ldi	r24, 0x01	; 1
    7744:	91 dd       	rcall	.-1246   	; 0x7268 <twi_reply>
      break;
    7746:	76 c0       	rjmp	.+236    	; 0x7834 <__vector_39+0x26a>
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    7748:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <twi_rxBufferIndex>
    774c:	80 32       	cpi	r24, 0x20	; 32
    774e:	98 f4       	brcc	.+38     	; 0x7776 <__vector_39+0x1ac>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    7750:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <twi_rxBufferIndex>
    7754:	91 e0       	ldi	r25, 0x01	; 1
    7756:	98 0f       	add	r25, r24
    7758:	90 93 9b 03 	sts	0x039B, r25	; 0x80039b <twi_rxBufferIndex>
    775c:	88 2f       	mov	r24, r24
    775e:	90 e0       	ldi	r25, 0x00	; 0
    7760:	2b eb       	ldi	r18, 0xBB	; 187
    7762:	30 e0       	ldi	r19, 0x00	; 0
    7764:	f9 01       	movw	r30, r18
    7766:	20 81       	ld	r18, Z
    7768:	85 58       	subi	r24, 0x85	; 133
        twi_reply(1);
    776a:	9c 4f       	sbci	r25, 0xFC	; 252
    776c:	fc 01       	movw	r30, r24
    776e:	20 83       	st	Z, r18
      }else{
        // otherwise nack
        twi_reply(0);
      }
      break;
    7770:	81 e0       	ldi	r24, 0x01	; 1
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
        twi_reply(1);
      }else{
        // otherwise nack
        twi_reply(0);
    7772:	7a dd       	rcall	.-1292   	; 0x7268 <twi_reply>
    7774:	5f c0       	rjmp	.+190    	; 0x7834 <__vector_39+0x26a>
    7776:	80 e0       	ldi	r24, 0x00	; 0
      }
      break;
    7778:	77 dd       	rcall	.-1298   	; 0x7268 <twi_reply>
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    777a:	5c c0       	rjmp	.+184    	; 0x7834 <__vector_39+0x26a>
    777c:	ee de       	rcall	.-548    	; 0x755a <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    777e:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <twi_rxBufferIndex>
    7782:	80 32       	cpi	r24, 0x20	; 32
    7784:	40 f4       	brcc	.+16     	; 0x7796 <__vector_39+0x1cc>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    7786:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <twi_rxBufferIndex>
    778a:	88 2f       	mov	r24, r24
    778c:	90 e0       	ldi	r25, 0x00	; 0
    778e:	85 58       	subi	r24, 0x85	; 133
    7790:	9c 4f       	sbci	r25, 0xFC	; 252
    7792:	fc 01       	movw	r30, r24
    7794:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    7796:	20 91 35 03 	lds	r18, 0x0335	; 0x800335 <twi_onSlaveReceive>
    779a:	30 91 36 03 	lds	r19, 0x0336	; 0x800336 <twi_onSlaveReceive+0x1>
    779e:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <twi_rxBufferIndex>
    77a2:	88 2f       	mov	r24, r24
    77a4:	90 e0       	ldi	r25, 0x00	; 0
    77a6:	bc 01       	movw	r22, r24
    77a8:	8b e7       	ldi	r24, 0x7B	; 123
    77aa:	93 e0       	ldi	r25, 0x03	; 3
    77ac:	f9 01       	movw	r30, r18
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    77ae:	19 95       	eicall
    77b0:	10 92 9b 03 	sts	0x039B, r1	; 0x80039b <twi_rxBufferIndex>
      break;
    case TW_SR_DATA_NACK:       // data received, returned nack
    case TW_SR_GCALL_DATA_NACK: // data received generally, returned nack
      // nack back at master
      twi_reply(0);
    77b4:	3f c0       	rjmp	.+126    	; 0x7834 <__vector_39+0x26a>
    77b6:	80 e0       	ldi	r24, 0x00	; 0
    77b8:	57 dd       	rcall	.-1362   	; 0x7268 <twi_reply>
      break;
    77ba:	3c c0       	rjmp	.+120    	; 0x7834 <__vector_39+0x26a>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    77bc:	84 e0       	ldi	r24, 0x04	; 4
    77be:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    77c2:	10 92 79 03 	sts	0x0379, r1	; 0x800379 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    77c6:	10 92 7a 03 	sts	0x037A, r1	; 0x80037a <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    77ca:	80 91 33 03 	lds	r24, 0x0333	; 0x800333 <twi_onSlaveTransmit>
    77ce:	90 91 34 03 	lds	r25, 0x0334	; 0x800334 <twi_onSlaveTransmit+0x1>
    77d2:	fc 01       	movw	r30, r24
    77d4:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    77d6:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <twi_txBufferLength>
    77da:	88 23       	and	r24, r24
    77dc:	29 f4       	brne	.+10     	; 0x77e8 <__vector_39+0x21e>
        twi_txBufferLength = 1;
    77de:	81 e0       	ldi	r24, 0x01	; 1
    77e0:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    77e4:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    77e8:	8b eb       	ldi	r24, 0xBB	; 187
    77ea:	90 e0       	ldi	r25, 0x00	; 0
    77ec:	20 91 79 03 	lds	r18, 0x0379	; 0x800379 <twi_txBufferIndex>
    77f0:	31 e0       	ldi	r19, 0x01	; 1
    77f2:	32 0f       	add	r19, r18
    77f4:	30 93 79 03 	sts	0x0379, r19	; 0x800379 <twi_txBufferIndex>
    77f8:	22 2f       	mov	r18, r18
    77fa:	30 e0       	ldi	r19, 0x00	; 0
    77fc:	27 5a       	subi	r18, 0xA7	; 167
    77fe:	3c 4f       	sbci	r19, 0xFC	; 252
    7800:	f9 01       	movw	r30, r18
    7802:	20 81       	ld	r18, Z
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    7804:	fc 01       	movw	r30, r24
    7806:	20 83       	st	Z, r18
    7808:	90 91 79 03 	lds	r25, 0x0379	; 0x800379 <twi_txBufferIndex>
    780c:	80 91 7a 03 	lds	r24, 0x037A	; 0x80037a <twi_txBufferLength>
        twi_reply(1);
    7810:	98 17       	cp	r25, r24
    7812:	18 f4       	brcc	.+6      	; 0x781a <__vector_39+0x250>
      }else{
        twi_reply(0);
      }
      break;
    7814:	81 e0       	ldi	r24, 0x01	; 1
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
        twi_reply(1);
      }else{
        twi_reply(0);
    7816:	28 dd       	rcall	.-1456   	; 0x7268 <twi_reply>
    7818:	0d c0       	rjmp	.+26     	; 0x7834 <__vector_39+0x26a>
    781a:	80 e0       	ldi	r24, 0x00	; 0
      }
      break;
    781c:	25 dd       	rcall	.-1462   	; 0x7268 <twi_reply>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
    781e:	0a c0       	rjmp	.+20     	; 0x7834 <__vector_39+0x26a>
    7820:	81 e0       	ldi	r24, 0x01	; 1
    7822:	22 dd       	rcall	.-1468   	; 0x7268 <twi_reply>
      // leave slave receiver state
      twi_state = TWI_READY;
    7824:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <twi_state>
      break;
    7828:	05 c0       	rjmp	.+10     	; 0x7834 <__vector_39+0x26a>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    782a:	10 92 9c 03 	sts	0x039C, r1	; 0x80039c <twi_error>
      twi_stop();
    782e:	35 dd       	rcall	.-1430   	; 0x729a <twi_stop>
    7830:	01 c0       	rjmp	.+2      	; 0x7834 <__vector_39+0x26a>
      break;
    7832:	00 00       	nop
      twi_state = TWI_READY;
      break;

    // All
    case TW_NO_INFO:   // no state information
      break;
    7834:	00 00       	nop
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    7836:	df 91       	pop	r29
    7838:	cf 91       	pop	r28
    783a:	ff 91       	pop	r31
    783c:	ef 91       	pop	r30
    783e:	bf 91       	pop	r27
    7840:	af 91       	pop	r26
    7842:	9f 91       	pop	r25
    7844:	8f 91       	pop	r24
    7846:	7f 91       	pop	r23
    7848:	6f 91       	pop	r22
    784a:	5f 91       	pop	r21
    784c:	4f 91       	pop	r20
    784e:	3f 91       	pop	r19
    7850:	2f 91       	pop	r18
    7852:	0f 90       	pop	r0
    7854:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    7858:	0f 90       	pop	r0
    785a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    785e:	0f 90       	pop	r0
    7860:	1f 90       	pop	r1
    7862:	18 95       	reti

00007864 <_ZN5Print13setWriteErrorEi>:
    7864:	cf 93       	push	r28

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    7866:	df 93       	push	r29
    7868:	00 d0       	rcall	.+0      	; 0x786a <_ZN5Print13setWriteErrorEi+0x6>
    786a:	1f 92       	push	r1
    786c:	cd b7       	in	r28, 0x3d	; 61
    786e:	de b7       	in	r29, 0x3e	; 62
    7870:	9a 83       	std	Y+2, r25	; 0x02
    7872:	89 83       	std	Y+1, r24	; 0x01
    7874:	7c 83       	std	Y+4, r23	; 0x04
    7876:	6b 83       	std	Y+3, r22	; 0x03
    7878:	89 81       	ldd	r24, Y+1	; 0x01
    787a:	9a 81       	ldd	r25, Y+2	; 0x02
    787c:	2b 81       	ldd	r18, Y+3	; 0x03
    787e:	3c 81       	ldd	r19, Y+4	; 0x04
    7880:	fc 01       	movw	r30, r24
    7882:	33 83       	std	Z+3, r19	; 0x03
    7884:	22 83       	std	Z+2, r18	; 0x02
    7886:	00 00       	nop
    7888:	0f 90       	pop	r0
    788a:	0f 90       	pop	r0
    788c:	0f 90       	pop	r0
    788e:	0f 90       	pop	r0
    7890:	df 91       	pop	r29
    7892:	cf 91       	pop	r28
    7894:	08 95       	ret

00007896 <_ZN6StreamC1Ev>:
    7896:	cf 93       	push	r28
    7898:	df 93       	push	r29
    789a:	1f 92       	push	r1
    789c:	1f 92       	push	r1
    789e:	cd b7       	in	r28, 0x3d	; 61
    78a0:	de b7       	in	r29, 0x3e	; 62
    78a2:	9a 83       	std	Y+2, r25	; 0x02
    78a4:	89 83       	std	Y+1, r24	; 0x01
    78a6:	89 81       	ldd	r24, Y+1	; 0x01
    78a8:	9a 81       	ldd	r25, Y+2	; 0x02
    78aa:	0e 94 a5 19 	call	0x334a	; 0x334a <_ZN5PrintC1Ev>
    78ae:	29 e7       	ldi	r18, 0x79	; 121
    78b0:	32 e0       	ldi	r19, 0x02	; 2
    78b2:	89 81       	ldd	r24, Y+1	; 0x01
    78b4:	9a 81       	ldd	r25, Y+2	; 0x02
    78b6:	fc 01       	movw	r30, r24
    78b8:	31 83       	std	Z+1, r19	; 0x01
    78ba:	20 83       	st	Z, r18
    78bc:	29 81       	ldd	r18, Y+1	; 0x01
    78be:	3a 81       	ldd	r19, Y+2	; 0x02
    78c0:	88 ee       	ldi	r24, 0xE8	; 232
    78c2:	93 e0       	ldi	r25, 0x03	; 3
    78c4:	a0 e0       	ldi	r26, 0x00	; 0
    78c6:	b0 e0       	ldi	r27, 0x00	; 0
    78c8:	f9 01       	movw	r30, r18
    78ca:	84 83       	std	Z+4, r24	; 0x04
    78cc:	95 83       	std	Z+5, r25	; 0x05
    78ce:	a6 83       	std	Z+6, r26	; 0x06
    78d0:	b7 83       	std	Z+7, r27	; 0x07
    78d2:	00 00       	nop
    78d4:	0f 90       	pop	r0
    78d6:	0f 90       	pop	r0
    78d8:	df 91       	pop	r29
    78da:	cf 91       	pop	r28
    78dc:	08 95       	ret

000078de <_ZN7TwoWireC1Ev>:
    78de:	cf 93       	push	r28
    78e0:	df 93       	push	r29
    78e2:	1f 92       	push	r1
    78e4:	1f 92       	push	r1
    78e6:	cd b7       	in	r28, 0x3d	; 61
    78e8:	de b7       	in	r29, 0x3e	; 62
    78ea:	9a 83       	std	Y+2, r25	; 0x02
    78ec:	89 83       	std	Y+1, r24	; 0x01
    78ee:	89 81       	ldd	r24, Y+1	; 0x01
    78f0:	9a 81       	ldd	r25, Y+2	; 0x02
    78f2:	d1 df       	rcall	.-94     	; 0x7896 <_ZN6StreamC1Ev>
    78f4:	27 e6       	ldi	r18, 0x67	; 103
    78f6:	32 e0       	ldi	r19, 0x02	; 2
    78f8:	89 81       	ldd	r24, Y+1	; 0x01
    78fa:	9a 81       	ldd	r25, Y+2	; 0x02
    78fc:	fc 01       	movw	r30, r24
    78fe:	31 83       	std	Z+1, r19	; 0x01
    7900:	20 83       	st	Z, r18
    7902:	00 00       	nop
    7904:	0f 90       	pop	r0
    7906:	0f 90       	pop	r0
    7908:	df 91       	pop	r29
    790a:	cf 91       	pop	r28
    790c:	08 95       	ret

0000790e <_ZN7TwoWire5beginEv>:
    790e:	cf 93       	push	r28
    7910:	df 93       	push	r29
    7912:	1f 92       	push	r1
    7914:	1f 92       	push	r1
    7916:	cd b7       	in	r28, 0x3d	; 61
    7918:	de b7       	in	r29, 0x3e	; 62
    791a:	9a 83       	std	Y+2, r25	; 0x02
    791c:	89 83       	std	Y+1, r24	; 0x01
    791e:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7922:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7926:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    792a:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    792e:	66 d9       	rcall	.-3380   	; 0x6bfc <twi_init>
    7930:	83 e2       	ldi	r24, 0x23	; 35
    7932:	9f e3       	ldi	r25, 0x3F	; 63
    7934:	85 dc       	rcall	.-1782   	; 0x7240 <twi_attachSlaveTxEvent>
    7936:	86 ed       	ldi	r24, 0xD6	; 214
    7938:	9e e3       	ldi	r25, 0x3E	; 62
    793a:	6e dc       	rcall	.-1828   	; 0x7218 <twi_attachSlaveRxEvent>
    793c:	00 00       	nop
    793e:	0f 90       	pop	r0
    7940:	0f 90       	pop	r0
    7942:	df 91       	pop	r29
    7944:	cf 91       	pop	r28
    7946:	08 95       	ret

00007948 <_ZN7TwoWire8setClockEm>:
    7948:	cf 93       	push	r28
    794a:	df 93       	push	r29
    794c:	00 d0       	rcall	.+0      	; 0x794e <_ZN7TwoWire8setClockEm+0x6>
    794e:	00 d0       	rcall	.+0      	; 0x7950 <_ZN7TwoWire8setClockEm+0x8>
    7950:	cd b7       	in	r28, 0x3d	; 61
    7952:	de b7       	in	r29, 0x3e	; 62
    7954:	9a 83       	std	Y+2, r25	; 0x02
    7956:	89 83       	std	Y+1, r24	; 0x01
    7958:	4b 83       	std	Y+3, r20	; 0x03
    795a:	5c 83       	std	Y+4, r21	; 0x04
    795c:	6d 83       	std	Y+5, r22	; 0x05
    795e:	7e 83       	std	Y+6, r23	; 0x06
    7960:	8b 81       	ldd	r24, Y+3	; 0x03
    7962:	9c 81       	ldd	r25, Y+4	; 0x04
    7964:	ad 81       	ldd	r26, Y+5	; 0x05
    7966:	be 81       	ldd	r27, Y+6	; 0x06
    7968:	bc 01       	movw	r22, r24
    796a:	cd 01       	movw	r24, r26
    796c:	93 d9       	rcall	.-3290   	; 0x6c94 <twi_setFrequency>
    796e:	00 00       	nop
    7970:	26 96       	adiw	r28, 0x06	; 6
    7972:	0f b6       	in	r0, 0x3f	; 63
    7974:	f8 94       	cli
    7976:	de bf       	out	0x3e, r29	; 62
    7978:	0f be       	out	0x3f, r0	; 63
    797a:	cd bf       	out	0x3d, r28	; 61
    797c:	df 91       	pop	r29
    797e:	cf 91       	pop	r28
    7980:	08 95       	ret

00007982 <_ZN7TwoWire11requestFromEhhmhh>:
    7982:	cf 92       	push	r12
    7984:	ef 92       	push	r14
    7986:	0f 93       	push	r16
    7988:	1f 93       	push	r17
    798a:	cf 93       	push	r28
    798c:	df 93       	push	r29
    798e:	cd b7       	in	r28, 0x3d	; 61
    7990:	de b7       	in	r29, 0x3e	; 62
    7992:	2b 97       	sbiw	r28, 0x0b	; 11
    7994:	0f b6       	in	r0, 0x3f	; 63
    7996:	f8 94       	cli
    7998:	de bf       	out	0x3e, r29	; 62
    799a:	0f be       	out	0x3f, r0	; 63
    799c:	cd bf       	out	0x3d, r28	; 61
    799e:	9b 83       	std	Y+3, r25	; 0x03
    79a0:	8a 83       	std	Y+2, r24	; 0x02
    79a2:	6c 83       	std	Y+4, r22	; 0x04
    79a4:	4d 83       	std	Y+5, r20	; 0x05
    79a6:	0e 83       	std	Y+6, r16	; 0x06
    79a8:	1f 83       	std	Y+7, r17	; 0x07
    79aa:	28 87       	std	Y+8, r18	; 0x08
    79ac:	39 87       	std	Y+9, r19	; 0x09
    79ae:	ea 86       	std	Y+10, r14	; 0x0a
    79b0:	cb 86       	std	Y+11, r12	; 0x0b
    79b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    79b4:	88 23       	and	r24, r24
    79b6:	d9 f1       	breq	.+118    	; 0x7a2e <_ZN7TwoWire11requestFromEhhmhh+0xac>
    79b8:	8a 81       	ldd	r24, Y+2	; 0x02
    79ba:	9b 81       	ldd	r25, Y+3	; 0x03
    79bc:	6c 81       	ldd	r22, Y+4	; 0x04
    79be:	98 d0       	rcall	.+304    	; 0x7af0 <_ZN7TwoWire17beginTransmissionEh>
    79c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    79c2:	84 30       	cpi	r24, 0x04	; 4
    79c4:	10 f0       	brcs	.+4      	; 0x79ca <_ZN7TwoWire11requestFromEhhmhh+0x48>
    79c6:	83 e0       	ldi	r24, 0x03	; 3
    79c8:	8a 87       	std	Y+10, r24	; 0x0a
    79ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    79cc:	9f ef       	ldi	r25, 0xFF	; 255
    79ce:	98 0f       	add	r25, r24
    79d0:	9a 87       	std	Y+10, r25	; 0x0a
    79d2:	91 e0       	ldi	r25, 0x01	; 1
    79d4:	88 23       	and	r24, r24
    79d6:	09 f4       	brne	.+2      	; 0x79da <_ZN7TwoWire11requestFromEhhmhh+0x58>
    79d8:	90 e0       	ldi	r25, 0x00	; 0
    79da:	99 23       	and	r25, r25
    79dc:	21 f1       	breq	.+72     	; 0x7a26 <_ZN7TwoWire11requestFromEhhmhh+0xa4>
    79de:	8a 81       	ldd	r24, Y+2	; 0x02
    79e0:	9b 81       	ldd	r25, Y+3	; 0x03
    79e2:	fc 01       	movw	r30, r24
    79e4:	80 81       	ld	r24, Z
    79e6:	91 81       	ldd	r25, Z+1	; 0x01
    79e8:	fc 01       	movw	r30, r24
    79ea:	20 81       	ld	r18, Z
    79ec:	31 81       	ldd	r19, Z+1	; 0x01
    79ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    79f0:	88 2f       	mov	r24, r24
    79f2:	90 e0       	ldi	r25, 0x00	; 0
    79f4:	ac 01       	movw	r20, r24
    79f6:	44 0f       	add	r20, r20
    79f8:	55 1f       	adc	r21, r21
    79fa:	44 0f       	add	r20, r20
    79fc:	55 1f       	adc	r21, r21
    79fe:	44 0f       	add	r20, r20
    7a00:	55 1f       	adc	r21, r21
    7a02:	8e 81       	ldd	r24, Y+6	; 0x06
    7a04:	9f 81       	ldd	r25, Y+7	; 0x07
    7a06:	a8 85       	ldd	r26, Y+8	; 0x08
    7a08:	b9 85       	ldd	r27, Y+9	; 0x09
    7a0a:	04 c0       	rjmp	.+8      	; 0x7a14 <_ZN7TwoWire11requestFromEhhmhh+0x92>
    7a0c:	b6 95       	lsr	r27
    7a0e:	a7 95       	ror	r26
    7a10:	97 95       	ror	r25
    7a12:	87 95       	ror	r24
    7a14:	4a 95       	dec	r20
    7a16:	d2 f7       	brpl	.-12     	; 0x7a0c <_ZN7TwoWire11requestFromEhhmhh+0x8a>
    7a18:	48 2f       	mov	r20, r24
    7a1a:	8a 81       	ldd	r24, Y+2	; 0x02
    7a1c:	9b 81       	ldd	r25, Y+3	; 0x03
    7a1e:	64 2f       	mov	r22, r20
    7a20:	f9 01       	movw	r30, r18
    7a22:	19 95       	eicall
    7a24:	d2 cf       	rjmp	.-92     	; 0x79ca <_ZN7TwoWire11requestFromEhhmhh+0x48>
    7a26:	8a 81       	ldd	r24, Y+2	; 0x02
    7a28:	9b 81       	ldd	r25, Y+3	; 0x03
    7a2a:	60 e0       	ldi	r22, 0x00	; 0
    7a2c:	91 d0       	rcall	.+290    	; 0x7b50 <_ZN7TwoWire15endTransmissionEh>
    7a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    7a30:	81 32       	cpi	r24, 0x21	; 33
    7a32:	10 f0       	brcs	.+4      	; 0x7a38 <_ZN7TwoWire11requestFromEhhmhh+0xb6>
    7a34:	80 e2       	ldi	r24, 0x20	; 32
    7a36:	8d 83       	std	Y+5, r24	; 0x05
    7a38:	2b 85       	ldd	r18, Y+11	; 0x0b
    7a3a:	4d 81       	ldd	r20, Y+5	; 0x05
    7a3c:	6d e9       	ldi	r22, 0x9D	; 157
    7a3e:	73 e0       	ldi	r23, 0x03	; 3
    7a40:	8c 81       	ldd	r24, Y+4	; 0x04
    7a42:	57 d9       	rcall	.-3410   	; 0x6cf2 <twi_readFrom>
    7a44:	89 83       	std	Y+1, r24	; 0x01
    7a46:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7a4a:	89 81       	ldd	r24, Y+1	; 0x01
    7a4c:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7a50:	89 81       	ldd	r24, Y+1	; 0x01
    7a52:	2b 96       	adiw	r28, 0x0b	; 11
    7a54:	0f b6       	in	r0, 0x3f	; 63
    7a56:	f8 94       	cli
    7a58:	de bf       	out	0x3e, r29	; 62
    7a5a:	0f be       	out	0x3f, r0	; 63
    7a5c:	cd bf       	out	0x3d, r28	; 61
    7a5e:	df 91       	pop	r29
    7a60:	cf 91       	pop	r28
    7a62:	1f 91       	pop	r17
    7a64:	0f 91       	pop	r16
    7a66:	ef 90       	pop	r14
    7a68:	cf 90       	pop	r12
    7a6a:	08 95       	ret

00007a6c <_ZN7TwoWire11requestFromEhhh>:
    7a6c:	cf 92       	push	r12
    7a6e:	ef 92       	push	r14
    7a70:	0f 93       	push	r16
    7a72:	1f 93       	push	r17
    7a74:	cf 93       	push	r28
    7a76:	df 93       	push	r29
    7a78:	00 d0       	rcall	.+0      	; 0x7a7a <_ZN7TwoWire11requestFromEhhh+0xe>
    7a7a:	1f 92       	push	r1
    7a7c:	1f 92       	push	r1
    7a7e:	cd b7       	in	r28, 0x3d	; 61
    7a80:	de b7       	in	r29, 0x3e	; 62
    7a82:	9a 83       	std	Y+2, r25	; 0x02
    7a84:	89 83       	std	Y+1, r24	; 0x01
    7a86:	6b 83       	std	Y+3, r22	; 0x03
    7a88:	4c 83       	std	Y+4, r20	; 0x04
    7a8a:	2d 83       	std	Y+5, r18	; 0x05
    7a8c:	89 81       	ldd	r24, Y+1	; 0x01
    7a8e:	9a 81       	ldd	r25, Y+2	; 0x02
    7a90:	cd 80       	ldd	r12, Y+5	; 0x05
    7a92:	e1 2c       	mov	r14, r1
    7a94:	00 e0       	ldi	r16, 0x00	; 0
    7a96:	10 e0       	ldi	r17, 0x00	; 0
    7a98:	98 01       	movw	r18, r16
    7a9a:	4c 81       	ldd	r20, Y+4	; 0x04
    7a9c:	6b 81       	ldd	r22, Y+3	; 0x03
    7a9e:	71 df       	rcall	.-286    	; 0x7982 <_ZN7TwoWire11requestFromEhhmhh>
    7aa0:	0f 90       	pop	r0
    7aa2:	0f 90       	pop	r0
    7aa4:	0f 90       	pop	r0
    7aa6:	0f 90       	pop	r0
    7aa8:	0f 90       	pop	r0
    7aaa:	df 91       	pop	r29
    7aac:	cf 91       	pop	r28
    7aae:	1f 91       	pop	r17
    7ab0:	0f 91       	pop	r16
    7ab2:	ef 90       	pop	r14
    7ab4:	cf 90       	pop	r12
    7ab6:	08 95       	ret

00007ab8 <_ZN7TwoWire11requestFromEii>:
    7ab8:	cf 93       	push	r28
    7aba:	df 93       	push	r29
    7abc:	00 d0       	rcall	.+0      	; 0x7abe <_ZN7TwoWire11requestFromEii+0x6>
    7abe:	00 d0       	rcall	.+0      	; 0x7ac0 <_ZN7TwoWire11requestFromEii+0x8>
    7ac0:	cd b7       	in	r28, 0x3d	; 61
    7ac2:	de b7       	in	r29, 0x3e	; 62
    7ac4:	9a 83       	std	Y+2, r25	; 0x02
    7ac6:	89 83       	std	Y+1, r24	; 0x01
    7ac8:	7c 83       	std	Y+4, r23	; 0x04
    7aca:	6b 83       	std	Y+3, r22	; 0x03
    7acc:	5e 83       	std	Y+6, r21	; 0x06
    7ace:	4d 83       	std	Y+5, r20	; 0x05
    7ad0:	4d 81       	ldd	r20, Y+5	; 0x05
    7ad2:	3b 81       	ldd	r19, Y+3	; 0x03
    7ad4:	89 81       	ldd	r24, Y+1	; 0x01
    7ad6:	9a 81       	ldd	r25, Y+2	; 0x02
    7ad8:	21 e0       	ldi	r18, 0x01	; 1
    7ada:	63 2f       	mov	r22, r19
    7adc:	c7 df       	rcall	.-114    	; 0x7a6c <_ZN7TwoWire11requestFromEhhh>
    7ade:	26 96       	adiw	r28, 0x06	; 6
    7ae0:	0f b6       	in	r0, 0x3f	; 63
    7ae2:	f8 94       	cli
    7ae4:	de bf       	out	0x3e, r29	; 62
    7ae6:	0f be       	out	0x3f, r0	; 63
    7ae8:	cd bf       	out	0x3d, r28	; 61
    7aea:	df 91       	pop	r29
    7aec:	cf 91       	pop	r28
    7aee:	08 95       	ret

00007af0 <_ZN7TwoWire17beginTransmissionEh>:
    7af0:	cf 93       	push	r28
    7af2:	df 93       	push	r29
    7af4:	00 d0       	rcall	.+0      	; 0x7af6 <_ZN7TwoWire17beginTransmissionEh+0x6>
    7af6:	cd b7       	in	r28, 0x3d	; 61
    7af8:	de b7       	in	r29, 0x3e	; 62
    7afa:	9a 83       	std	Y+2, r25	; 0x02
    7afc:	89 83       	std	Y+1, r24	; 0x01
    7afe:	6b 83       	std	Y+3, r22	; 0x03
    7b00:	81 e0       	ldi	r24, 0x01	; 1
    7b02:	80 93 e2 03 	sts	0x03E2, r24	; 0x8003e2 <_ZN7TwoWire12transmittingE>
    7b06:	8b 81       	ldd	r24, Y+3	; 0x03
    7b08:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <_ZN7TwoWire9txAddressE>
    7b0c:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7b10:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7b14:	00 00       	nop
    7b16:	0f 90       	pop	r0
    7b18:	0f 90       	pop	r0
    7b1a:	0f 90       	pop	r0
    7b1c:	df 91       	pop	r29
    7b1e:	cf 91       	pop	r28
    7b20:	08 95       	ret

00007b22 <_ZN7TwoWire17beginTransmissionEi>:
    7b22:	cf 93       	push	r28
    7b24:	df 93       	push	r29
    7b26:	00 d0       	rcall	.+0      	; 0x7b28 <_ZN7TwoWire17beginTransmissionEi+0x6>
    7b28:	1f 92       	push	r1
    7b2a:	cd b7       	in	r28, 0x3d	; 61
    7b2c:	de b7       	in	r29, 0x3e	; 62
    7b2e:	9a 83       	std	Y+2, r25	; 0x02
    7b30:	89 83       	std	Y+1, r24	; 0x01
    7b32:	7c 83       	std	Y+4, r23	; 0x04
    7b34:	6b 83       	std	Y+3, r22	; 0x03
    7b36:	2b 81       	ldd	r18, Y+3	; 0x03
    7b38:	89 81       	ldd	r24, Y+1	; 0x01
    7b3a:	9a 81       	ldd	r25, Y+2	; 0x02
    7b3c:	62 2f       	mov	r22, r18
    7b3e:	d8 df       	rcall	.-80     	; 0x7af0 <_ZN7TwoWire17beginTransmissionEh>
    7b40:	00 00       	nop
    7b42:	0f 90       	pop	r0
    7b44:	0f 90       	pop	r0
    7b46:	0f 90       	pop	r0
    7b48:	0f 90       	pop	r0
    7b4a:	df 91       	pop	r29
    7b4c:	cf 91       	pop	r28
    7b4e:	08 95       	ret

00007b50 <_ZN7TwoWire15endTransmissionEh>:
    7b50:	0f 93       	push	r16
    7b52:	cf 93       	push	r28
    7b54:	df 93       	push	r29
    7b56:	00 d0       	rcall	.+0      	; 0x7b58 <_ZN7TwoWire15endTransmissionEh+0x8>
    7b58:	1f 92       	push	r1
    7b5a:	cd b7       	in	r28, 0x3d	; 61
    7b5c:	de b7       	in	r29, 0x3e	; 62
    7b5e:	9b 83       	std	Y+3, r25	; 0x03
    7b60:	8a 83       	std	Y+2, r24	; 0x02
    7b62:	6c 83       	std	Y+4, r22	; 0x04
    7b64:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7b68:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <_ZN7TwoWire9txAddressE>
    7b6c:	0c 81       	ldd	r16, Y+4	; 0x04
    7b6e:	21 e0       	ldi	r18, 0x01	; 1
    7b70:	49 2f       	mov	r20, r25
    7b72:	60 ec       	ldi	r22, 0xC0	; 192
    7b74:	73 e0       	ldi	r23, 0x03	; 3
    7b76:	db d9       	rcall	.-3146   	; 0x6f2e <twi_writeTo>
    7b78:	89 83       	std	Y+1, r24	; 0x01
    7b7a:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7b7e:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7b82:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <_ZN7TwoWire12transmittingE>
    7b86:	89 81       	ldd	r24, Y+1	; 0x01
    7b88:	0f 90       	pop	r0
    7b8a:	0f 90       	pop	r0
    7b8c:	0f 90       	pop	r0
    7b8e:	0f 90       	pop	r0
    7b90:	df 91       	pop	r29
    7b92:	cf 91       	pop	r28
    7b94:	0f 91       	pop	r16
    7b96:	08 95       	ret

00007b98 <_ZN7TwoWire15endTransmissionEv>:
    7b98:	cf 93       	push	r28
    7b9a:	df 93       	push	r29
    7b9c:	1f 92       	push	r1
    7b9e:	1f 92       	push	r1
    7ba0:	cd b7       	in	r28, 0x3d	; 61
    7ba2:	de b7       	in	r29, 0x3e	; 62
    7ba4:	9a 83       	std	Y+2, r25	; 0x02
    7ba6:	89 83       	std	Y+1, r24	; 0x01
    7ba8:	89 81       	ldd	r24, Y+1	; 0x01
    7baa:	9a 81       	ldd	r25, Y+2	; 0x02
    7bac:	61 e0       	ldi	r22, 0x01	; 1
    7bae:	d0 df       	rcall	.-96     	; 0x7b50 <_ZN7TwoWire15endTransmissionEh>
    7bb0:	0f 90       	pop	r0
    7bb2:	0f 90       	pop	r0
    7bb4:	df 91       	pop	r29
    7bb6:	cf 91       	pop	r28
    7bb8:	08 95       	ret

00007bba <_ZN7TwoWire5writeEh>:
    7bba:	cf 93       	push	r28
    7bbc:	df 93       	push	r29
    7bbe:	00 d0       	rcall	.+0      	; 0x7bc0 <_ZN7TwoWire5writeEh+0x6>
    7bc0:	cd b7       	in	r28, 0x3d	; 61
    7bc2:	de b7       	in	r29, 0x3e	; 62
    7bc4:	9a 83       	std	Y+2, r25	; 0x02
    7bc6:	89 83       	std	Y+1, r24	; 0x01
    7bc8:	6b 83       	std	Y+3, r22	; 0x03
    7bca:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <_ZN7TwoWire12transmittingE>
    7bce:	88 23       	and	r24, r24
    7bd0:	f9 f0       	breq	.+62     	; 0x7c10 <_ZN7TwoWire5writeEh+0x56>
    7bd2:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7bd6:	80 32       	cpi	r24, 0x20	; 32
    7bd8:	40 f0       	brcs	.+16     	; 0x7bea <_ZN7TwoWire5writeEh+0x30>
    7bda:	89 81       	ldd	r24, Y+1	; 0x01
    7bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    7bde:	61 e0       	ldi	r22, 0x01	; 1
    7be0:	70 e0       	ldi	r23, 0x00	; 0
    7be2:	40 de       	rcall	.-896    	; 0x7864 <_ZN5Print13setWriteErrorEi>
    7be4:	80 e0       	ldi	r24, 0x00	; 0
    7be6:	90 e0       	ldi	r25, 0x00	; 0
    7be8:	19 c0       	rjmp	.+50     	; 0x7c1c <_ZN7TwoWire5writeEh+0x62>
    7bea:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7bee:	88 2f       	mov	r24, r24
    7bf0:	90 e0       	ldi	r25, 0x00	; 0
    7bf2:	2b 81       	ldd	r18, Y+3	; 0x03
    7bf4:	80 54       	subi	r24, 0x40	; 64
    7bf6:	9c 4f       	sbci	r25, 0xFC	; 252
    7bf8:	fc 01       	movw	r30, r24
    7bfa:	20 83       	st	Z, r18
    7bfc:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7c00:	8f 5f       	subi	r24, 0xFF	; 255
    7c02:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7c06:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7c0a:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7c0e:	04 c0       	rjmp	.+8      	; 0x7c18 <_ZN7TwoWire5writeEh+0x5e>
    7c10:	ce 01       	movw	r24, r28
    7c12:	03 96       	adiw	r24, 0x03	; 3
    7c14:	61 e0       	ldi	r22, 0x01	; 1
    7c16:	b7 da       	rcall	.-2706   	; 0x7186 <twi_transmit>
    7c18:	81 e0       	ldi	r24, 0x01	; 1
    7c1a:	90 e0       	ldi	r25, 0x00	; 0
    7c1c:	0f 90       	pop	r0
    7c1e:	0f 90       	pop	r0
    7c20:	0f 90       	pop	r0
    7c22:	df 91       	pop	r29
    7c24:	cf 91       	pop	r28
    7c26:	08 95       	ret

00007c28 <_ZN7TwoWire5writeEPKhj>:
    7c28:	cf 93       	push	r28
    7c2a:	df 93       	push	r29
    7c2c:	cd b7       	in	r28, 0x3d	; 61
    7c2e:	de b7       	in	r29, 0x3e	; 62
    7c30:	28 97       	sbiw	r28, 0x08	; 8
    7c32:	0f b6       	in	r0, 0x3f	; 63
    7c34:	f8 94       	cli
    7c36:	de bf       	out	0x3e, r29	; 62
    7c38:	0f be       	out	0x3f, r0	; 63
    7c3a:	cd bf       	out	0x3d, r28	; 61
    7c3c:	9c 83       	std	Y+4, r25	; 0x04
    7c3e:	8b 83       	std	Y+3, r24	; 0x03
    7c40:	7e 83       	std	Y+6, r23	; 0x06
    7c42:	6d 83       	std	Y+5, r22	; 0x05
    7c44:	58 87       	std	Y+8, r21	; 0x08
    7c46:	4f 83       	std	Y+7, r20	; 0x07
    7c48:	80 91 e2 03 	lds	r24, 0x03E2	; 0x8003e2 <_ZN7TwoWire12transmittingE>
    7c4c:	88 23       	and	r24, r24
    7c4e:	21 f1       	breq	.+72     	; 0x7c98 <_ZN7TwoWire5writeEPKhj+0x70>
    7c50:	1a 82       	std	Y+2, r1	; 0x02
    7c52:	19 82       	std	Y+1, r1	; 0x01
    7c54:	29 81       	ldd	r18, Y+1	; 0x01
    7c56:	3a 81       	ldd	r19, Y+2	; 0x02
    7c58:	8f 81       	ldd	r24, Y+7	; 0x07
    7c5a:	98 85       	ldd	r25, Y+8	; 0x08
    7c5c:	28 17       	cp	r18, r24
    7c5e:	39 07       	cpc	r19, r25
    7c60:	00 f5       	brcc	.+64     	; 0x7ca2 <_ZN7TwoWire5writeEPKhj+0x7a>
    7c62:	8b 81       	ldd	r24, Y+3	; 0x03
    7c64:	9c 81       	ldd	r25, Y+4	; 0x04
    7c66:	fc 01       	movw	r30, r24
    7c68:	80 81       	ld	r24, Z
    7c6a:	91 81       	ldd	r25, Z+1	; 0x01
    7c6c:	fc 01       	movw	r30, r24
    7c6e:	20 81       	ld	r18, Z
    7c70:	31 81       	ldd	r19, Z+1	; 0x01
    7c72:	4d 81       	ldd	r20, Y+5	; 0x05
    7c74:	5e 81       	ldd	r21, Y+6	; 0x06
    7c76:	89 81       	ldd	r24, Y+1	; 0x01
    7c78:	9a 81       	ldd	r25, Y+2	; 0x02
    7c7a:	84 0f       	add	r24, r20
    7c7c:	95 1f       	adc	r25, r21
    7c7e:	fc 01       	movw	r30, r24
    7c80:	40 81       	ld	r20, Z
    7c82:	8b 81       	ldd	r24, Y+3	; 0x03
    7c84:	9c 81       	ldd	r25, Y+4	; 0x04
    7c86:	64 2f       	mov	r22, r20
    7c88:	f9 01       	movw	r30, r18
    7c8a:	19 95       	eicall
    7c8c:	89 81       	ldd	r24, Y+1	; 0x01
    7c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    7c90:	01 96       	adiw	r24, 0x01	; 1
    7c92:	9a 83       	std	Y+2, r25	; 0x02
    7c94:	89 83       	std	Y+1, r24	; 0x01
    7c96:	de cf       	rjmp	.-68     	; 0x7c54 <_ZN7TwoWire5writeEPKhj+0x2c>
    7c98:	2f 81       	ldd	r18, Y+7	; 0x07
    7c9a:	8d 81       	ldd	r24, Y+5	; 0x05
    7c9c:	9e 81       	ldd	r25, Y+6	; 0x06
    7c9e:	62 2f       	mov	r22, r18
    7ca0:	72 da       	rcall	.-2844   	; 0x7186 <twi_transmit>
    7ca2:	8f 81       	ldd	r24, Y+7	; 0x07
    7ca4:	98 85       	ldd	r25, Y+8	; 0x08
    7ca6:	28 96       	adiw	r28, 0x08	; 8
    7ca8:	0f b6       	in	r0, 0x3f	; 63
    7caa:	f8 94       	cli
    7cac:	de bf       	out	0x3e, r29	; 62
    7cae:	0f be       	out	0x3f, r0	; 63
    7cb0:	cd bf       	out	0x3d, r28	; 61
    7cb2:	df 91       	pop	r29
    7cb4:	cf 91       	pop	r28
    7cb6:	08 95       	ret

00007cb8 <_ZN7TwoWire9availableEv>:
    7cb8:	cf 93       	push	r28
    7cba:	df 93       	push	r29
    7cbc:	1f 92       	push	r1
    7cbe:	1f 92       	push	r1
    7cc0:	cd b7       	in	r28, 0x3d	; 61
    7cc2:	de b7       	in	r29, 0x3e	; 62
    7cc4:	9a 83       	std	Y+2, r25	; 0x02
    7cc6:	89 83       	std	Y+1, r24	; 0x01
    7cc8:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7ccc:	28 2f       	mov	r18, r24
    7cce:	30 e0       	ldi	r19, 0x00	; 0
    7cd0:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7cd4:	88 2f       	mov	r24, r24
    7cd6:	90 e0       	ldi	r25, 0x00	; 0
    7cd8:	a9 01       	movw	r20, r18
    7cda:	48 1b       	sub	r20, r24
    7cdc:	59 0b       	sbc	r21, r25
    7cde:	ca 01       	movw	r24, r20
    7ce0:	0f 90       	pop	r0
    7ce2:	0f 90       	pop	r0
    7ce4:	df 91       	pop	r29
    7ce6:	cf 91       	pop	r28
    7ce8:	08 95       	ret

00007cea <_ZN7TwoWire4readEv>:
    7cea:	cf 93       	push	r28
    7cec:	df 93       	push	r29
    7cee:	00 d0       	rcall	.+0      	; 0x7cf0 <_ZN7TwoWire4readEv+0x6>
    7cf0:	1f 92       	push	r1
    7cf2:	cd b7       	in	r28, 0x3d	; 61
    7cf4:	de b7       	in	r29, 0x3e	; 62
    7cf6:	9c 83       	std	Y+4, r25	; 0x04
    7cf8:	8b 83       	std	Y+3, r24	; 0x03
    7cfa:	8f ef       	ldi	r24, 0xFF	; 255
    7cfc:	9f ef       	ldi	r25, 0xFF	; 255
    7cfe:	9a 83       	std	Y+2, r25	; 0x02
    7d00:	89 83       	std	Y+1, r24	; 0x01
    7d02:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d06:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7d0a:	98 17       	cp	r25, r24
    7d0c:	88 f4       	brcc	.+34     	; 0x7d30 <_ZN7TwoWire4readEv+0x46>
    7d0e:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d12:	88 2f       	mov	r24, r24
    7d14:	90 e0       	ldi	r25, 0x00	; 0
    7d16:	83 56       	subi	r24, 0x63	; 99
    7d18:	9c 4f       	sbci	r25, 0xFC	; 252
    7d1a:	fc 01       	movw	r30, r24
    7d1c:	80 81       	ld	r24, Z
    7d1e:	88 2f       	mov	r24, r24
    7d20:	90 e0       	ldi	r25, 0x00	; 0
    7d22:	9a 83       	std	Y+2, r25	; 0x02
    7d24:	89 83       	std	Y+1, r24	; 0x01
    7d26:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d2a:	8f 5f       	subi	r24, 0xFF	; 255
    7d2c:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d30:	89 81       	ldd	r24, Y+1	; 0x01
    7d32:	9a 81       	ldd	r25, Y+2	; 0x02
    7d34:	0f 90       	pop	r0
    7d36:	0f 90       	pop	r0
    7d38:	0f 90       	pop	r0
    7d3a:	0f 90       	pop	r0
    7d3c:	df 91       	pop	r29
    7d3e:	cf 91       	pop	r28
    7d40:	08 95       	ret

00007d42 <_ZN7TwoWire4peekEv>:
    7d42:	cf 93       	push	r28
    7d44:	df 93       	push	r29
    7d46:	00 d0       	rcall	.+0      	; 0x7d48 <_ZN7TwoWire4peekEv+0x6>
    7d48:	1f 92       	push	r1
    7d4a:	cd b7       	in	r28, 0x3d	; 61
    7d4c:	de b7       	in	r29, 0x3e	; 62
    7d4e:	9c 83       	std	Y+4, r25	; 0x04
    7d50:	8b 83       	std	Y+3, r24	; 0x03
    7d52:	8f ef       	ldi	r24, 0xFF	; 255
    7d54:	9f ef       	ldi	r25, 0xFF	; 255
    7d56:	9a 83       	std	Y+2, r25	; 0x02
    7d58:	89 83       	std	Y+1, r24	; 0x01
    7d5a:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d5e:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7d62:	98 17       	cp	r25, r24
    7d64:	60 f4       	brcc	.+24     	; 0x7d7e <_ZN7TwoWire4peekEv+0x3c>
    7d66:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7d6a:	88 2f       	mov	r24, r24
    7d6c:	90 e0       	ldi	r25, 0x00	; 0
    7d6e:	83 56       	subi	r24, 0x63	; 99
    7d70:	9c 4f       	sbci	r25, 0xFC	; 252
    7d72:	fc 01       	movw	r30, r24
    7d74:	80 81       	ld	r24, Z
    7d76:	88 2f       	mov	r24, r24
    7d78:	90 e0       	ldi	r25, 0x00	; 0
    7d7a:	9a 83       	std	Y+2, r25	; 0x02
    7d7c:	89 83       	std	Y+1, r24	; 0x01
    7d7e:	89 81       	ldd	r24, Y+1	; 0x01
    7d80:	9a 81       	ldd	r25, Y+2	; 0x02
    7d82:	0f 90       	pop	r0
    7d84:	0f 90       	pop	r0
    7d86:	0f 90       	pop	r0
    7d88:	0f 90       	pop	r0
    7d8a:	df 91       	pop	r29
    7d8c:	cf 91       	pop	r28
    7d8e:	08 95       	ret

00007d90 <_ZN7TwoWire5flushEv>:
    7d90:	cf 93       	push	r28
    7d92:	df 93       	push	r29
    7d94:	1f 92       	push	r1
    7d96:	1f 92       	push	r1
    7d98:	cd b7       	in	r28, 0x3d	; 61
    7d9a:	de b7       	in	r29, 0x3e	; 62
    7d9c:	9a 83       	std	Y+2, r25	; 0x02
    7d9e:	89 83       	std	Y+1, r24	; 0x01
    7da0:	00 00       	nop
    7da2:	0f 90       	pop	r0
    7da4:	0f 90       	pop	r0
    7da6:	df 91       	pop	r29
    7da8:	cf 91       	pop	r28
    7daa:	08 95       	ret

00007dac <_ZN7TwoWire16onReceiveServiceEPhi>:
    7dac:	cf 93       	push	r28
    7dae:	df 93       	push	r29
    7db0:	00 d0       	rcall	.+0      	; 0x7db2 <_ZN7TwoWire16onReceiveServiceEPhi+0x6>
    7db2:	1f 92       	push	r1
    7db4:	1f 92       	push	r1
    7db6:	cd b7       	in	r28, 0x3d	; 61
    7db8:	de b7       	in	r29, 0x3e	; 62
    7dba:	9b 83       	std	Y+3, r25	; 0x03
    7dbc:	8a 83       	std	Y+2, r24	; 0x02
    7dbe:	7d 83       	std	Y+5, r23	; 0x05
    7dc0:	6c 83       	std	Y+4, r22	; 0x04
    7dc2:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <_ZN7TwoWire14user_onReceiveE>
    7dc6:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <_ZN7TwoWire14user_onReceiveE+0x1>
    7dca:	89 2b       	or	r24, r25
    7dcc:	89 f1       	breq	.+98     	; 0x7e30 <_ZN7TwoWire16onReceiveServiceEPhi+0x84>
    7dce:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7dd2:	80 91 be 03 	lds	r24, 0x03BE	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7dd6:	98 17       	cp	r25, r24
    7dd8:	68 f1       	brcs	.+90     	; 0x7e34 <_ZN7TwoWire16onReceiveServiceEPhi+0x88>
    7dda:	19 82       	std	Y+1, r1	; 0x01
    7ddc:	89 81       	ldd	r24, Y+1	; 0x01
    7dde:	28 2f       	mov	r18, r24
    7de0:	30 e0       	ldi	r19, 0x00	; 0
    7de2:	8c 81       	ldd	r24, Y+4	; 0x04
    7de4:	9d 81       	ldd	r25, Y+5	; 0x05
    7de6:	28 17       	cp	r18, r24
    7de8:	39 07       	cpc	r19, r25
    7dea:	a4 f4       	brge	.+40     	; 0x7e14 <_ZN7TwoWire16onReceiveServiceEPhi+0x68>
    7dec:	89 81       	ldd	r24, Y+1	; 0x01
    7dee:	88 2f       	mov	r24, r24
    7df0:	90 e0       	ldi	r25, 0x00	; 0
    7df2:	29 81       	ldd	r18, Y+1	; 0x01
    7df4:	22 2f       	mov	r18, r18
    7df6:	30 e0       	ldi	r19, 0x00	; 0
    7df8:	4a 81       	ldd	r20, Y+2	; 0x02
    7dfa:	5b 81       	ldd	r21, Y+3	; 0x03
    7dfc:	24 0f       	add	r18, r20
    7dfe:	35 1f       	adc	r19, r21
    7e00:	f9 01       	movw	r30, r18
    7e02:	20 81       	ld	r18, Z
    7e04:	83 56       	subi	r24, 0x63	; 99
    7e06:	9c 4f       	sbci	r25, 0xFC	; 252
    7e08:	fc 01       	movw	r30, r24
    7e0a:	20 83       	st	Z, r18
    7e0c:	89 81       	ldd	r24, Y+1	; 0x01
    7e0e:	8f 5f       	subi	r24, 0xFF	; 255
    7e10:	89 83       	std	Y+1, r24	; 0x01
    7e12:	e4 cf       	rjmp	.-56     	; 0x7ddc <_ZN7TwoWire16onReceiveServiceEPhi+0x30>
    7e14:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <_ZN7TwoWire13rxBufferIndexE>
    7e18:	8c 81       	ldd	r24, Y+4	; 0x04
    7e1a:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <_ZN7TwoWire14rxBufferLengthE>
    7e1e:	20 91 e5 03 	lds	r18, 0x03E5	; 0x8003e5 <_ZN7TwoWire14user_onReceiveE>
    7e22:	30 91 e6 03 	lds	r19, 0x03E6	; 0x8003e6 <_ZN7TwoWire14user_onReceiveE+0x1>
    7e26:	8c 81       	ldd	r24, Y+4	; 0x04
    7e28:	9d 81       	ldd	r25, Y+5	; 0x05
    7e2a:	f9 01       	movw	r30, r18
    7e2c:	19 95       	eicall
    7e2e:	03 c0       	rjmp	.+6      	; 0x7e36 <_ZN7TwoWire16onReceiveServiceEPhi+0x8a>
    7e30:	00 00       	nop
    7e32:	01 c0       	rjmp	.+2      	; 0x7e36 <_ZN7TwoWire16onReceiveServiceEPhi+0x8a>
    7e34:	00 00       	nop
    7e36:	0f 90       	pop	r0
    7e38:	0f 90       	pop	r0
    7e3a:	0f 90       	pop	r0
    7e3c:	0f 90       	pop	r0
    7e3e:	0f 90       	pop	r0
    7e40:	df 91       	pop	r29
    7e42:	cf 91       	pop	r28
    7e44:	08 95       	ret

00007e46 <_ZN7TwoWire16onRequestServiceEv>:
    7e46:	cf 93       	push	r28
    7e48:	df 93       	push	r29
    7e4a:	cd b7       	in	r28, 0x3d	; 61
    7e4c:	de b7       	in	r29, 0x3e	; 62
    7e4e:	80 91 e3 03 	lds	r24, 0x03E3	; 0x8003e3 <_ZN7TwoWire14user_onRequestE>
    7e52:	90 91 e4 03 	lds	r25, 0x03E4	; 0x8003e4 <_ZN7TwoWire14user_onRequestE+0x1>
    7e56:	89 2b       	or	r24, r25
    7e58:	59 f0       	breq	.+22     	; 0x7e70 <_ZN7TwoWire16onRequestServiceEv+0x2a>
    7e5a:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <_ZN7TwoWire13txBufferIndexE>
    7e5e:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <_ZN7TwoWire14txBufferLengthE>
    7e62:	80 91 e3 03 	lds	r24, 0x03E3	; 0x8003e3 <_ZN7TwoWire14user_onRequestE>
    7e66:	90 91 e4 03 	lds	r25, 0x03E4	; 0x8003e4 <_ZN7TwoWire14user_onRequestE+0x1>
    7e6a:	fc 01       	movw	r30, r24
    7e6c:	19 95       	eicall
    7e6e:	01 c0       	rjmp	.+2      	; 0x7e72 <_ZN7TwoWire16onRequestServiceEv+0x2c>
    7e70:	00 00       	nop
    7e72:	df 91       	pop	r29
    7e74:	cf 91       	pop	r28
    7e76:	08 95       	ret

00007e78 <_Z41__static_initialization_and_destruction_0ii>:

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    7e78:	cf 93       	push	r28
    7e7a:	df 93       	push	r29
    7e7c:	00 d0       	rcall	.+0      	; 0x7e7e <_Z41__static_initialization_and_destruction_0ii+0x6>
    7e7e:	1f 92       	push	r1
    7e80:	cd b7       	in	r28, 0x3d	; 61
    7e82:	de b7       	in	r29, 0x3e	; 62
    7e84:	9a 83       	std	Y+2, r25	; 0x02
    7e86:	89 83       	std	Y+1, r24	; 0x01
    7e88:	7c 83       	std	Y+4, r23	; 0x04
    7e8a:	6b 83       	std	Y+3, r22	; 0x03
    7e8c:	89 81       	ldd	r24, Y+1	; 0x01
    7e8e:	9a 81       	ldd	r25, Y+2	; 0x02
    7e90:	01 97       	sbiw	r24, 0x01	; 1
    7e92:	39 f4       	brne	.+14     	; 0x7ea2 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    7e94:	8b 81       	ldd	r24, Y+3	; 0x03
    7e96:	9c 81       	ldd	r25, Y+4	; 0x04
    7e98:	01 96       	adiw	r24, 0x01	; 1
    7e9a:	19 f4       	brne	.+6      	; 0x7ea2 <_Z41__static_initialization_and_destruction_0ii+0x2a>
    7e9c:	87 ee       	ldi	r24, 0xE7	; 231
    7e9e:	93 e0       	ldi	r25, 0x03	; 3
    7ea0:	1e dd       	rcall	.-1476   	; 0x78de <_ZN7TwoWireC1Ev>
    7ea2:	00 00       	nop
    7ea4:	0f 90       	pop	r0
    7ea6:	0f 90       	pop	r0
    7ea8:	0f 90       	pop	r0
    7eaa:	0f 90       	pop	r0
    7eac:	df 91       	pop	r29
    7eae:	cf 91       	pop	r28
    7eb0:	08 95       	ret

00007eb2 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
    7eb2:	cf 93       	push	r28
    7eb4:	df 93       	push	r29
    7eb6:	cd b7       	in	r28, 0x3d	; 61
    7eb8:	de b7       	in	r29, 0x3e	; 62
    7eba:	6f ef       	ldi	r22, 0xFF	; 255
    7ebc:	7f ef       	ldi	r23, 0xFF	; 255
    7ebe:	81 e0       	ldi	r24, 0x01	; 1
    7ec0:	90 e0       	ldi	r25, 0x00	; 0
    7ec2:	da df       	rcall	.-76     	; 0x7e78 <_Z41__static_initialization_and_destruction_0ii>
    7ec4:	df 91       	pop	r29
    7ec6:	cf 91       	pop	r28
    7ec8:	08 95       	ret

00007eca <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    7eca:	cf 93       	push	r28
    7ecc:	df 93       	push	r29
    7ece:	cd b7       	in	r28, 0x3d	; 61
    7ed0:	de b7       	in	r29, 0x3e	; 62
    7ed2:	2f 97       	sbiw	r28, 0x0f	; 15
    7ed4:	0f b6       	in	r0, 0x3f	; 63
    7ed6:	f8 94       	cli
    7ed8:	de bf       	out	0x3e, r29	; 62
    7eda:	0f be       	out	0x3f, r0	; 63
    7edc:	cd bf       	out	0x3d, r28	; 61
  uint8_t sreg = SREG;
    7ede:	8f e5       	ldi	r24, 0x5F	; 95
    7ee0:	90 e0       	ldi	r25, 0x00	; 0
    7ee2:	fc 01       	movw	r30, r24
    7ee4:	80 81       	ld	r24, Z
    7ee6:	89 83       	std	Y+1, r24	; 0x01
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    7ee8:	f8 94       	cli
  if (!initialized) {
    7eea:	80 91 f3 03 	lds	r24, 0x03F3	; 0x8003f3 <_ZN8SPIClass11initializedE>
    7eee:	88 23       	and	r24, r24
    7ef0:	09 f0       	breq	.+2      	; 0x7ef4 <_ZN8SPIClass5beginEv+0x2a>
    7ef2:	5b c0       	rjmp	.+182    	; 0x7faa <_ZN8SPIClass5beginEv+0xe0>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    7ef4:	88 e6       	ldi	r24, 0x68	; 104
    7ef6:	9e e0       	ldi	r25, 0x0E	; 14
    7ef8:	9b 83       	std	Y+3, r25	; 0x03
    7efa:	8a 83       	std	Y+2, r24	; 0x02
    7efc:	8a 81       	ldd	r24, Y+2	; 0x02
    7efe:	9b 81       	ldd	r25, Y+3	; 0x03
    7f00:	fc 01       	movw	r30, r24
    7f02:	84 91       	lpm	r24, Z
    7f04:	8c 83       	std	Y+4, r24	; 0x04
    7f06:	8c 81       	ldd	r24, Y+4	; 0x04
    7f08:	8d 83       	std	Y+5, r24	; 0x05
    uint8_t bit = digitalPinToBitMask(SS);
    7f0a:	82 e2       	ldi	r24, 0x22	; 34
    7f0c:	9e e0       	ldi	r25, 0x0E	; 14
    7f0e:	9f 83       	std	Y+7, r25	; 0x07
    7f10:	8e 83       	std	Y+6, r24	; 0x06
    7f12:	8e 81       	ldd	r24, Y+6	; 0x06
    7f14:	9f 81       	ldd	r25, Y+7	; 0x07
    7f16:	fc 01       	movw	r30, r24
    7f18:	84 91       	lpm	r24, Z
    7f1a:	88 87       	std	Y+8, r24	; 0x08
    7f1c:	88 85       	ldd	r24, Y+8	; 0x08
    7f1e:	89 87       	std	Y+9, r24	; 0x09
    volatile uint8_t *reg = portModeRegister(port);
    7f20:	8d 81       	ldd	r24, Y+5	; 0x05
    7f22:	88 2f       	mov	r24, r24
    7f24:	90 e0       	ldi	r25, 0x00	; 0
    7f26:	88 0f       	add	r24, r24
    7f28:	99 1f       	adc	r25, r25
    7f2a:	83 55       	subi	r24, 0x53	; 83
    7f2c:	91 4f       	sbci	r25, 0xF1	; 241
    7f2e:	9b 87       	std	Y+11, r25	; 0x0b
    7f30:	8a 87       	std	Y+10, r24	; 0x0a
    7f32:	8a 85       	ldd	r24, Y+10	; 0x0a
    7f34:	9b 85       	ldd	r25, Y+11	; 0x0b
    7f36:	fc 01       	movw	r30, r24
    7f38:	25 91       	lpm	r18, Z+
    7f3a:	34 91       	lpm	r19, Z
    7f3c:	cf 01       	movw	r24, r30
    7f3e:	3d 87       	std	Y+13, r19	; 0x0d
    7f40:	2c 87       	std	Y+12, r18	; 0x0c
    7f42:	9b 87       	std	Y+11, r25	; 0x0b
    7f44:	8a 87       	std	Y+10, r24	; 0x0a
    7f46:	8c 85       	ldd	r24, Y+12	; 0x0c
    7f48:	9d 85       	ldd	r25, Y+13	; 0x0d
    7f4a:	9f 87       	std	Y+15, r25	; 0x0f
    7f4c:	8e 87       	std	Y+14, r24	; 0x0e

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    7f4e:	8e 85       	ldd	r24, Y+14	; 0x0e
    7f50:	9f 85       	ldd	r25, Y+15	; 0x0f
    7f52:	fc 01       	movw	r30, r24
    7f54:	90 81       	ld	r25, Z
    7f56:	89 85       	ldd	r24, Y+9	; 0x09
    7f58:	98 23       	and	r25, r24
    7f5a:	81 e0       	ldi	r24, 0x01	; 1
    7f5c:	99 23       	and	r25, r25
    7f5e:	09 f0       	breq	.+2      	; 0x7f62 <_ZN8SPIClass5beginEv+0x98>
    7f60:	80 e0       	ldi	r24, 0x00	; 0
    7f62:	88 23       	and	r24, r24
    7f64:	21 f0       	breq	.+8      	; 0x7f6e <_ZN8SPIClass5beginEv+0xa4>
      digitalWrite(SS, HIGH);
    7f66:	61 e0       	ldi	r22, 0x01	; 1
    7f68:	85 e3       	ldi	r24, 0x35	; 53
    7f6a:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    7f6e:	61 e0       	ldi	r22, 0x01	; 1
    7f70:	85 e3       	ldi	r24, 0x35	; 53
    7f72:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    7f76:	8c e4       	ldi	r24, 0x4C	; 76
    7f78:	90 e0       	ldi	r25, 0x00	; 0
    7f7a:	2c e4       	ldi	r18, 0x4C	; 76
    7f7c:	30 e0       	ldi	r19, 0x00	; 0
    7f7e:	f9 01       	movw	r30, r18
    7f80:	20 81       	ld	r18, Z
    7f82:	20 61       	ori	r18, 0x10	; 16
    7f84:	fc 01       	movw	r30, r24
    7f86:	20 83       	st	Z, r18
    SPCR |= _BV(SPE);
    7f88:	8c e4       	ldi	r24, 0x4C	; 76
    7f8a:	90 e0       	ldi	r25, 0x00	; 0
    7f8c:	2c e4       	ldi	r18, 0x4C	; 76
    7f8e:	30 e0       	ldi	r19, 0x00	; 0
    7f90:	f9 01       	movw	r30, r18
    7f92:	20 81       	ld	r18, Z
    7f94:	20 64       	ori	r18, 0x40	; 64
    7f96:	fc 01       	movw	r30, r24
    7f98:	20 83       	st	Z, r18
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    7f9a:	61 e0       	ldi	r22, 0x01	; 1
    7f9c:	84 e3       	ldi	r24, 0x34	; 52
    7f9e:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
    pinMode(MOSI, OUTPUT);
    7fa2:	61 e0       	ldi	r22, 0x01	; 1
    7fa4:	83 e3       	ldi	r24, 0x33	; 51
    7fa6:	0e 94 b4 4a 	call	0x9568	; 0x9568 <pinMode>
  }
  initialized++; // reference count
    7faa:	80 91 f3 03 	lds	r24, 0x03F3	; 0x8003f3 <_ZN8SPIClass11initializedE>
    7fae:	8f 5f       	subi	r24, 0xFF	; 255
    7fb0:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <_ZN8SPIClass11initializedE>
  SREG = sreg;
    7fb4:	8f e5       	ldi	r24, 0x5F	; 95
    7fb6:	90 e0       	ldi	r25, 0x00	; 0
    7fb8:	29 81       	ldd	r18, Y+1	; 0x01
    7fba:	fc 01       	movw	r30, r24
    7fbc:	20 83       	st	Z, r18
}
    7fbe:	00 00       	nop
    7fc0:	2f 96       	adiw	r28, 0x0f	; 15
    7fc2:	0f b6       	in	r0, 0x3f	; 63
    7fc4:	f8 94       	cli
    7fc6:	de bf       	out	0x3e, r29	; 62
    7fc8:	0f be       	out	0x3f, r0	; 63
    7fca:	cd bf       	out	0x3d, r28	; 61
    7fcc:	df 91       	pop	r29
    7fce:	cf 91       	pop	r28
    7fd0:	08 95       	ret

00007fd2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>:
#define SERVO_MAX() (MAX_PULSE_WIDTH - this->max * 4)  // maximum value in us for this servo

/************ static functions common to all instances ***********************/

static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatile uint16_t* OCRnA)
{
    7fd2:	cf 93       	push	r28
    7fd4:	df 93       	push	r29
    7fd6:	00 d0       	rcall	.+0      	; 0x7fd8 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x6>
    7fd8:	1f 92       	push	r1
    7fda:	1f 92       	push	r1
    7fdc:	cd b7       	in	r28, 0x3d	; 61
    7fde:	de b7       	in	r29, 0x3e	; 62
    7fe0:	89 83       	std	Y+1, r24	; 0x01
    7fe2:	7b 83       	std	Y+3, r23	; 0x03
    7fe4:	6a 83       	std	Y+2, r22	; 0x02
    7fe6:	5d 83       	std	Y+5, r21	; 0x05
    7fe8:	4c 83       	std	Y+4, r20	; 0x04
  if( Channel[timer] < 0 )
    7fea:	89 81       	ldd	r24, Y+1	; 0x01
    7fec:	88 2f       	mov	r24, r24
    7fee:	90 e0       	ldi	r25, 0x00	; 0
    7ff0:	89 57       	subi	r24, 0x79	; 121
    7ff2:	9b 4f       	sbci	r25, 0xFB	; 251
    7ff4:	fc 01       	movw	r30, r24
    7ff6:	80 81       	ld	r24, Z
    7ff8:	88 1f       	adc	r24, r24
    7ffa:	88 27       	eor	r24, r24
    7ffc:	88 1f       	adc	r24, r24
    7ffe:	88 23       	and	r24, r24
    8000:	31 f0       	breq	.+12     	; 0x800e <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x3c>
    *TCNTn = 0; // channel set to -1 indicated that refresh interval completed so reset the timer
    8002:	8a 81       	ldd	r24, Y+2	; 0x02
    8004:	9b 81       	ldd	r25, Y+3	; 0x03
    8006:	fc 01       	movw	r30, r24
    8008:	11 82       	std	Z+1, r1	; 0x01
    800a:	10 82       	st	Z, r1
    800c:	72 c0       	rjmp	.+228    	; 0x80f2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x120>
  else{
    if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && SERVO(timer,Channel[timer]).Pin.isActive == true )
    800e:	89 81       	ldd	r24, Y+1	; 0x01
    8010:	28 2f       	mov	r18, r24
    8012:	30 e0       	ldi	r19, 0x00	; 0
    8014:	c9 01       	movw	r24, r18
    8016:	88 0f       	add	r24, r24
    8018:	99 1f       	adc	r25, r25
    801a:	82 0f       	add	r24, r18
    801c:	93 1f       	adc	r25, r19
    801e:	88 0f       	add	r24, r24
    8020:	99 1f       	adc	r25, r25
    8022:	88 0f       	add	r24, r24
    8024:	99 1f       	adc	r25, r25
    8026:	9c 01       	movw	r18, r24
    8028:	89 81       	ldd	r24, Y+1	; 0x01
    802a:	88 2f       	mov	r24, r24
    802c:	90 e0       	ldi	r25, 0x00	; 0
    802e:	89 57       	subi	r24, 0x79	; 121
    8030:	9b 4f       	sbci	r25, 0xFB	; 251
    8032:	fc 01       	movw	r30, r24
    8034:	80 81       	ld	r24, Z
    8036:	08 2e       	mov	r0, r24
    8038:	00 0c       	add	r0, r0
    803a:	99 0b       	sbc	r25, r25
    803c:	28 0f       	add	r18, r24
    803e:	39 1f       	adc	r19, r25
    8040:	80 91 8b 04 	lds	r24, 0x048B	; 0x80048b <ServoCount>
    8044:	88 2f       	mov	r24, r24
    8046:	90 e0       	ldi	r25, 0x00	; 0
    8048:	28 17       	cp	r18, r24
    804a:	39 07       	cpc	r19, r25
    804c:	4c f5       	brge	.+82     	; 0x80a0 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xce>
    804e:	89 81       	ldd	r24, Y+1	; 0x01
    8050:	28 2f       	mov	r18, r24
    8052:	30 e0       	ldi	r19, 0x00	; 0
    8054:	c9 01       	movw	r24, r18
    8056:	88 0f       	add	r24, r24
    8058:	99 1f       	adc	r25, r25
    805a:	82 0f       	add	r24, r18
    805c:	93 1f       	adc	r25, r19
    805e:	88 0f       	add	r24, r24
    8060:	99 1f       	adc	r25, r25
    8062:	88 0f       	add	r24, r24
    8064:	99 1f       	adc	r25, r25
    8066:	9c 01       	movw	r18, r24
    8068:	89 81       	ldd	r24, Y+1	; 0x01
    806a:	88 2f       	mov	r24, r24
    806c:	90 e0       	ldi	r25, 0x00	; 0
    806e:	89 57       	subi	r24, 0x79	; 121
    8070:	9b 4f       	sbci	r25, 0xFB	; 251
    8072:	fc 01       	movw	r30, r24
    8074:	80 81       	ld	r24, Z
    8076:	08 2e       	mov	r0, r24
    8078:	00 0c       	add	r0, r0
    807a:	99 0b       	sbc	r25, r25
    807c:	28 0f       	add	r18, r24
    807e:	39 1f       	adc	r19, r25
    8080:	c9 01       	movw	r24, r18
    8082:	88 0f       	add	r24, r24
    8084:	99 1f       	adc	r25, r25
    8086:	82 0f       	add	r24, r18
    8088:	93 1f       	adc	r25, r19
    808a:	89 50       	subi	r24, 0x09	; 9
    808c:	9c 4f       	sbci	r25, 0xFC	; 252
    808e:	fc 01       	movw	r30, r24
    8090:	80 81       	ld	r24, Z
    8092:	86 fb       	bst	r24, 6
    8094:	88 27       	eor	r24, r24
    8096:	80 f9       	bld	r24, 0
    8098:	81 30       	cpi	r24, 0x01	; 1
    809a:	11 f4       	brne	.+4      	; 0x80a0 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xce>
    809c:	81 e0       	ldi	r24, 0x01	; 1
    809e:	01 c0       	rjmp	.+2      	; 0x80a2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0xd0>
    80a0:	80 e0       	ldi	r24, 0x00	; 0
    80a2:	88 23       	and	r24, r24
    80a4:	31 f1       	breq	.+76     	; 0x80f2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x120>
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,LOW); // pulse this channel low if activated
    80a6:	89 81       	ldd	r24, Y+1	; 0x01
    80a8:	28 2f       	mov	r18, r24
    80aa:	30 e0       	ldi	r19, 0x00	; 0
    80ac:	c9 01       	movw	r24, r18
    80ae:	88 0f       	add	r24, r24
    80b0:	99 1f       	adc	r25, r25
    80b2:	82 0f       	add	r24, r18
    80b4:	93 1f       	adc	r25, r19
    80b6:	88 0f       	add	r24, r24
    80b8:	99 1f       	adc	r25, r25
    80ba:	88 0f       	add	r24, r24
    80bc:	99 1f       	adc	r25, r25
    80be:	9c 01       	movw	r18, r24
    80c0:	89 81       	ldd	r24, Y+1	; 0x01
    80c2:	88 2f       	mov	r24, r24
    80c4:	90 e0       	ldi	r25, 0x00	; 0
    80c6:	89 57       	subi	r24, 0x79	; 121
    80c8:	9b 4f       	sbci	r25, 0xFB	; 251
    80ca:	fc 01       	movw	r30, r24
    80cc:	80 81       	ld	r24, Z
    80ce:	08 2e       	mov	r0, r24
    80d0:	00 0c       	add	r0, r0
    80d2:	99 0b       	sbc	r25, r25
    80d4:	28 0f       	add	r18, r24
    80d6:	39 1f       	adc	r19, r25
    80d8:	c9 01       	movw	r24, r18
    80da:	88 0f       	add	r24, r24
    80dc:	99 1f       	adc	r25, r25
    80de:	82 0f       	add	r24, r18
    80e0:	93 1f       	adc	r25, r19
    80e2:	89 50       	subi	r24, 0x09	; 9
    80e4:	9c 4f       	sbci	r25, 0xFC	; 252
    80e6:	fc 01       	movw	r30, r24
    80e8:	80 81       	ld	r24, Z
    80ea:	8f 73       	andi	r24, 0x3F	; 63
    80ec:	60 e0       	ldi	r22, 0x00	; 0
    80ee:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
  }

  Channel[timer]++;    // increment to the next channel
    80f2:	89 81       	ldd	r24, Y+1	; 0x01
    80f4:	88 2f       	mov	r24, r24
    80f6:	90 e0       	ldi	r25, 0x00	; 0
    80f8:	9c 01       	movw	r18, r24
    80fa:	29 57       	subi	r18, 0x79	; 121
    80fc:	3b 4f       	sbci	r19, 0xFB	; 251
    80fe:	f9 01       	movw	r30, r18
    8100:	20 81       	ld	r18, Z
    8102:	2f 5f       	subi	r18, 0xFF	; 255
    8104:	89 57       	subi	r24, 0x79	; 121
    8106:	9b 4f       	sbci	r25, 0xFB	; 251
    8108:	fc 01       	movw	r30, r24
    810a:	20 83       	st	Z, r18
  if( SERVO_INDEX(timer,Channel[timer]) < ServoCount && Channel[timer] < SERVOS_PER_TIMER) {
    810c:	89 81       	ldd	r24, Y+1	; 0x01
    810e:	28 2f       	mov	r18, r24
    8110:	30 e0       	ldi	r19, 0x00	; 0
    8112:	c9 01       	movw	r24, r18
    8114:	88 0f       	add	r24, r24
    8116:	99 1f       	adc	r25, r25
    8118:	82 0f       	add	r24, r18
    811a:	93 1f       	adc	r25, r19
    811c:	88 0f       	add	r24, r24
    811e:	99 1f       	adc	r25, r25
    8120:	88 0f       	add	r24, r24
    8122:	99 1f       	adc	r25, r25
    8124:	9c 01       	movw	r18, r24
    8126:	89 81       	ldd	r24, Y+1	; 0x01
    8128:	88 2f       	mov	r24, r24
    812a:	90 e0       	ldi	r25, 0x00	; 0
    812c:	89 57       	subi	r24, 0x79	; 121
    812e:	9b 4f       	sbci	r25, 0xFB	; 251
    8130:	fc 01       	movw	r30, r24
    8132:	80 81       	ld	r24, Z
    8134:	08 2e       	mov	r0, r24
    8136:	00 0c       	add	r0, r0
    8138:	99 0b       	sbc	r25, r25
    813a:	28 0f       	add	r18, r24
    813c:	39 1f       	adc	r19, r25
    813e:	80 91 8b 04 	lds	r24, 0x048B	; 0x80048b <ServoCount>
    8142:	88 2f       	mov	r24, r24
    8144:	90 e0       	ldi	r25, 0x00	; 0
    8146:	28 17       	cp	r18, r24
    8148:	39 07       	cpc	r19, r25
    814a:	5c f4       	brge	.+22     	; 0x8162 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x190>
    814c:	89 81       	ldd	r24, Y+1	; 0x01
    814e:	88 2f       	mov	r24, r24
    8150:	90 e0       	ldi	r25, 0x00	; 0
    8152:	89 57       	subi	r24, 0x79	; 121
    8154:	9b 4f       	sbci	r25, 0xFB	; 251
    8156:	fc 01       	movw	r30, r24
    8158:	80 81       	ld	r24, Z
    815a:	8c 30       	cpi	r24, 0x0C	; 12
    815c:	14 f4       	brge	.+4      	; 0x8162 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x190>
    815e:	81 e0       	ldi	r24, 0x01	; 1
    8160:	01 c0       	rjmp	.+2      	; 0x8164 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x192>
    8162:	80 e0       	ldi	r24, 0x00	; 0
    8164:	88 23       	and	r24, r24
    8166:	09 f4       	brne	.+2      	; 0x816a <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x198>
    8168:	7f c0       	rjmp	.+254    	; 0x8268 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x296>
    *OCRnA = *TCNTn + SERVO(timer,Channel[timer]).ticks;
    816a:	8a 81       	ldd	r24, Y+2	; 0x02
    816c:	9b 81       	ldd	r25, Y+3	; 0x03
    816e:	fc 01       	movw	r30, r24
    8170:	40 81       	ld	r20, Z
    8172:	51 81       	ldd	r21, Z+1	; 0x01
    8174:	89 81       	ldd	r24, Y+1	; 0x01
    8176:	28 2f       	mov	r18, r24
    8178:	30 e0       	ldi	r19, 0x00	; 0
    817a:	c9 01       	movw	r24, r18
    817c:	88 0f       	add	r24, r24
    817e:	99 1f       	adc	r25, r25
    8180:	82 0f       	add	r24, r18
    8182:	93 1f       	adc	r25, r19
    8184:	88 0f       	add	r24, r24
    8186:	99 1f       	adc	r25, r25
    8188:	88 0f       	add	r24, r24
    818a:	99 1f       	adc	r25, r25
    818c:	9c 01       	movw	r18, r24
    818e:	89 81       	ldd	r24, Y+1	; 0x01
    8190:	88 2f       	mov	r24, r24
    8192:	90 e0       	ldi	r25, 0x00	; 0
    8194:	89 57       	subi	r24, 0x79	; 121
    8196:	9b 4f       	sbci	r25, 0xFB	; 251
    8198:	fc 01       	movw	r30, r24
    819a:	80 81       	ld	r24, Z
    819c:	08 2e       	mov	r0, r24
    819e:	00 0c       	add	r0, r0
    81a0:	99 0b       	sbc	r25, r25
    81a2:	28 0f       	add	r18, r24
    81a4:	39 1f       	adc	r19, r25
    81a6:	c9 01       	movw	r24, r18
    81a8:	88 0f       	add	r24, r24
    81aa:	99 1f       	adc	r25, r25
    81ac:	82 0f       	add	r24, r18
    81ae:	93 1f       	adc	r25, r19
    81b0:	88 50       	subi	r24, 0x08	; 8
    81b2:	9c 4f       	sbci	r25, 0xFC	; 252
    81b4:	fc 01       	movw	r30, r24
    81b6:	80 81       	ld	r24, Z
    81b8:	91 81       	ldd	r25, Z+1	; 0x01
    81ba:	9a 01       	movw	r18, r20
    81bc:	28 0f       	add	r18, r24
    81be:	39 1f       	adc	r19, r25
    81c0:	8c 81       	ldd	r24, Y+4	; 0x04
    81c2:	9d 81       	ldd	r25, Y+5	; 0x05
    81c4:	fc 01       	movw	r30, r24
    81c6:	31 83       	std	Z+1, r19	; 0x01
    81c8:	20 83       	st	Z, r18
    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated
    81ca:	89 81       	ldd	r24, Y+1	; 0x01
    81cc:	28 2f       	mov	r18, r24
    81ce:	30 e0       	ldi	r19, 0x00	; 0
    81d0:	c9 01       	movw	r24, r18
    81d2:	88 0f       	add	r24, r24
    81d4:	99 1f       	adc	r25, r25
    81d6:	82 0f       	add	r24, r18
    81d8:	93 1f       	adc	r25, r19
    81da:	88 0f       	add	r24, r24
    81dc:	99 1f       	adc	r25, r25
    81de:	88 0f       	add	r24, r24
    81e0:	99 1f       	adc	r25, r25
    81e2:	9c 01       	movw	r18, r24
    81e4:	89 81       	ldd	r24, Y+1	; 0x01
    81e6:	88 2f       	mov	r24, r24
    81e8:	90 e0       	ldi	r25, 0x00	; 0
    81ea:	89 57       	subi	r24, 0x79	; 121
    81ec:	9b 4f       	sbci	r25, 0xFB	; 251
    81ee:	fc 01       	movw	r30, r24
    81f0:	80 81       	ld	r24, Z
    81f2:	08 2e       	mov	r0, r24
    81f4:	00 0c       	add	r0, r0
    81f6:	99 0b       	sbc	r25, r25
    81f8:	28 0f       	add	r18, r24
    81fa:	39 1f       	adc	r19, r25
    81fc:	c9 01       	movw	r24, r18
    81fe:	88 0f       	add	r24, r24
    8200:	99 1f       	adc	r25, r25
    8202:	82 0f       	add	r24, r18
    8204:	93 1f       	adc	r25, r19
    8206:	89 50       	subi	r24, 0x09	; 9
    8208:	9c 4f       	sbci	r25, 0xFC	; 252
    820a:	fc 01       	movw	r30, r24
    820c:	80 81       	ld	r24, Z
    820e:	86 fb       	bst	r24, 6
    8210:	88 27       	eor	r24, r24
    8212:	80 f9       	bld	r24, 0
    8214:	88 23       	and	r24, r24
    8216:	09 f4       	brne	.+2      	; 0x821a <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x248>
    8218:	51 c0       	rjmp	.+162    	; 0x82bc <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ea>
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high
    821a:	89 81       	ldd	r24, Y+1	; 0x01
    821c:	28 2f       	mov	r18, r24
    821e:	30 e0       	ldi	r19, 0x00	; 0
    8220:	c9 01       	movw	r24, r18
    8222:	88 0f       	add	r24, r24
    8224:	99 1f       	adc	r25, r25
    8226:	82 0f       	add	r24, r18
    8228:	93 1f       	adc	r25, r19
    822a:	88 0f       	add	r24, r24
    822c:	99 1f       	adc	r25, r25
    822e:	88 0f       	add	r24, r24
    8230:	99 1f       	adc	r25, r25
    8232:	9c 01       	movw	r18, r24
    8234:	89 81       	ldd	r24, Y+1	; 0x01
    8236:	88 2f       	mov	r24, r24
    8238:	90 e0       	ldi	r25, 0x00	; 0
    823a:	89 57       	subi	r24, 0x79	; 121
    823c:	9b 4f       	sbci	r25, 0xFB	; 251
    823e:	fc 01       	movw	r30, r24
    8240:	80 81       	ld	r24, Z
    8242:	08 2e       	mov	r0, r24
    8244:	00 0c       	add	r0, r0
    8246:	99 0b       	sbc	r25, r25
    8248:	28 0f       	add	r18, r24
    824a:	39 1f       	adc	r19, r25
    824c:	c9 01       	movw	r24, r18
    824e:	88 0f       	add	r24, r24
    8250:	99 1f       	adc	r25, r25
    8252:	82 0f       	add	r24, r18
    8254:	93 1f       	adc	r25, r19
    8256:	89 50       	subi	r24, 0x09	; 9
    8258:	9c 4f       	sbci	r25, 0xFC	; 252
    825a:	fc 01       	movw	r30, r24
    825c:	80 81       	ld	r24, Z
    825e:	8f 73       	andi	r24, 0x3F	; 63
    8260:	61 e0       	ldi	r22, 0x01	; 1
    8262:	0e 94 f0 4a 	call	0x95e0	; 0x95e0 <digitalWrite>
      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);
    else
      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed
    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel
  }
}
    8266:	2a c0       	rjmp	.+84     	; 0x82bc <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ea>
    if(SERVO(timer,Channel[timer]).Pin.isActive == true)     // check if activated
      digitalWrite( SERVO(timer,Channel[timer]).Pin.nbr,HIGH); // its an active channel so pulse it high
  }
  else {
    // finished all channels so wait for the refresh period to expire before starting over
    if( ((unsigned)*TCNTn) + 4 < usToTicks(REFRESH_INTERVAL) )  // allow a few ticks to ensure the next OCR1A not missed
    8268:	8a 81       	ldd	r24, Y+2	; 0x02
    826a:	9b 81       	ldd	r25, Y+3	; 0x03
    826c:	fc 01       	movw	r30, r24
    826e:	80 81       	ld	r24, Z
    8270:	91 81       	ldd	r25, Z+1	; 0x01
    8272:	04 96       	adiw	r24, 0x04	; 4
    8274:	21 e0       	ldi	r18, 0x01	; 1
    8276:	80 34       	cpi	r24, 0x40	; 64
    8278:	9c 49       	sbci	r25, 0x9C	; 156
    827a:	08 f0       	brcs	.+2      	; 0x827e <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2ac>
    827c:	20 e0       	ldi	r18, 0x00	; 0
    827e:	22 23       	and	r18, r18
    8280:	41 f0       	breq	.+16     	; 0x8292 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2c0>
      *OCRnA = (unsigned int)usToTicks(REFRESH_INTERVAL);
    8282:	8c 81       	ldd	r24, Y+4	; 0x04
    8284:	9d 81       	ldd	r25, Y+5	; 0x05
    8286:	20 e4       	ldi	r18, 0x40	; 64
    8288:	3c e9       	ldi	r19, 0x9C	; 156
    828a:	fc 01       	movw	r30, r24
    828c:	31 83       	std	Z+1, r19	; 0x01
    828e:	20 83       	st	Z, r18
    8290:	0d c0       	rjmp	.+26     	; 0x82ac <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_+0x2da>
    else
      *OCRnA = *TCNTn + 4;  // at least REFRESH_INTERVAL has elapsed
    8292:	8a 81       	ldd	r24, Y+2	; 0x02
    8294:	9b 81       	ldd	r25, Y+3	; 0x03
    8296:	fc 01       	movw	r30, r24
    8298:	80 81       	ld	r24, Z
    829a:	91 81       	ldd	r25, Z+1	; 0x01
    829c:	9c 01       	movw	r18, r24
    829e:	2c 5f       	subi	r18, 0xFC	; 252
    82a0:	3f 4f       	sbci	r19, 0xFF	; 255
    82a2:	8c 81       	ldd	r24, Y+4	; 0x04
    82a4:	9d 81       	ldd	r25, Y+5	; 0x05
    82a6:	fc 01       	movw	r30, r24
    82a8:	31 83       	std	Z+1, r19	; 0x01
    82aa:	20 83       	st	Z, r18
    Channel[timer] = -1; // this will get incremented at the end of the refresh period to start again at the first channel
    82ac:	89 81       	ldd	r24, Y+1	; 0x01
    82ae:	88 2f       	mov	r24, r24
    82b0:	90 e0       	ldi	r25, 0x00	; 0
    82b2:	89 57       	subi	r24, 0x79	; 121
    82b4:	9b 4f       	sbci	r25, 0xFB	; 251
    82b6:	2f ef       	ldi	r18, 0xFF	; 255
    82b8:	fc 01       	movw	r30, r24
    82ba:	20 83       	st	Z, r18
  }
}
    82bc:	00 00       	nop
    82be:	0f 90       	pop	r0
    82c0:	0f 90       	pop	r0
    82c2:	0f 90       	pop	r0
    82c4:	0f 90       	pop	r0
    82c6:	0f 90       	pop	r0
    82c8:	df 91       	pop	r29
    82ca:	cf 91       	pop	r28
    82cc:	08 95       	ret

000082ce <__vector_17>:

#ifndef WIRING // Wiring pre-defines signal handlers so don't define any if compiling for the Wiring platform
// Interrupt handlers for Arduino
#if defined(_useTimer1)
SIGNAL (TIMER1_COMPA_vect)
{
    82ce:	1f 92       	push	r1
    82d0:	0f 92       	push	r0
    82d2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    82d6:	0f 92       	push	r0
    82d8:	11 24       	eor	r1, r1
    82da:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    82de:	0f 92       	push	r0
    82e0:	2f 93       	push	r18
    82e2:	3f 93       	push	r19
    82e4:	4f 93       	push	r20
    82e6:	5f 93       	push	r21
    82e8:	6f 93       	push	r22
    82ea:	7f 93       	push	r23
    82ec:	8f 93       	push	r24
    82ee:	9f 93       	push	r25
    82f0:	af 93       	push	r26
    82f2:	bf 93       	push	r27
    82f4:	ef 93       	push	r30
    82f6:	ff 93       	push	r31
    82f8:	cf 93       	push	r28
    82fa:	df 93       	push	r29
    82fc:	cd b7       	in	r28, 0x3d	; 61
    82fe:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer1, &TCNT1, &OCR1A);
    8300:	48 e8       	ldi	r20, 0x88	; 136
    8302:	50 e0       	ldi	r21, 0x00	; 0
    8304:	64 e8       	ldi	r22, 0x84	; 132
    8306:	70 e0       	ldi	r23, 0x00	; 0
    8308:	81 e0       	ldi	r24, 0x01	; 1
    830a:	63 de       	rcall	.-826    	; 0x7fd2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    830c:	00 00       	nop
    830e:	df 91       	pop	r29
    8310:	cf 91       	pop	r28
    8312:	ff 91       	pop	r31
    8314:	ef 91       	pop	r30
    8316:	bf 91       	pop	r27
    8318:	af 91       	pop	r26
    831a:	9f 91       	pop	r25
    831c:	8f 91       	pop	r24
    831e:	7f 91       	pop	r23
    8320:	6f 91       	pop	r22
    8322:	5f 91       	pop	r21
    8324:	4f 91       	pop	r20
    8326:	3f 91       	pop	r19
    8328:	2f 91       	pop	r18
    832a:	0f 90       	pop	r0
    832c:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    8330:	0f 90       	pop	r0
    8332:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8336:	0f 90       	pop	r0
    8338:	1f 90       	pop	r1
    833a:	18 95       	reti

0000833c <__vector_32>:
#endif

#if defined(_useTimer3)
SIGNAL (TIMER3_COMPA_vect)
{
    833c:	1f 92       	push	r1
    833e:	0f 92       	push	r0
    8340:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8344:	0f 92       	push	r0
    8346:	11 24       	eor	r1, r1
    8348:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    834c:	0f 92       	push	r0
    834e:	2f 93       	push	r18
    8350:	3f 93       	push	r19
    8352:	4f 93       	push	r20
    8354:	5f 93       	push	r21
    8356:	6f 93       	push	r22
    8358:	7f 93       	push	r23
    835a:	8f 93       	push	r24
    835c:	9f 93       	push	r25
    835e:	af 93       	push	r26
    8360:	bf 93       	push	r27
    8362:	ef 93       	push	r30
    8364:	ff 93       	push	r31
    8366:	cf 93       	push	r28
    8368:	df 93       	push	r29
    836a:	cd b7       	in	r28, 0x3d	; 61
    836c:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer3, &TCNT3, &OCR3A);
    836e:	48 e9       	ldi	r20, 0x98	; 152
    8370:	50 e0       	ldi	r21, 0x00	; 0
    8372:	64 e9       	ldi	r22, 0x94	; 148
    8374:	70 e0       	ldi	r23, 0x00	; 0
    8376:	82 e0       	ldi	r24, 0x02	; 2
    8378:	2c de       	rcall	.-936    	; 0x7fd2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    837a:	00 00       	nop
    837c:	df 91       	pop	r29
    837e:	cf 91       	pop	r28
    8380:	ff 91       	pop	r31
    8382:	ef 91       	pop	r30
    8384:	bf 91       	pop	r27
    8386:	af 91       	pop	r26
    8388:	9f 91       	pop	r25
    838a:	8f 91       	pop	r24
    838c:	7f 91       	pop	r23
    838e:	6f 91       	pop	r22
    8390:	5f 91       	pop	r21
    8392:	4f 91       	pop	r20
    8394:	3f 91       	pop	r19
    8396:	2f 91       	pop	r18
    8398:	0f 90       	pop	r0
    839a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    839e:	0f 90       	pop	r0
    83a0:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    83a4:	0f 90       	pop	r0
    83a6:	1f 90       	pop	r1
    83a8:	18 95       	reti

000083aa <__vector_42>:
#endif

#if defined(_useTimer4)
SIGNAL (TIMER4_COMPA_vect)
{
    83aa:	1f 92       	push	r1
    83ac:	0f 92       	push	r0
    83ae:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    83b2:	0f 92       	push	r0
    83b4:	11 24       	eor	r1, r1
    83b6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    83ba:	0f 92       	push	r0
    83bc:	2f 93       	push	r18
    83be:	3f 93       	push	r19
    83c0:	4f 93       	push	r20
    83c2:	5f 93       	push	r21
    83c4:	6f 93       	push	r22
    83c6:	7f 93       	push	r23
    83c8:	8f 93       	push	r24
    83ca:	9f 93       	push	r25
    83cc:	af 93       	push	r26
    83ce:	bf 93       	push	r27
    83d0:	ef 93       	push	r30
    83d2:	ff 93       	push	r31
    83d4:	cf 93       	push	r28
    83d6:	df 93       	push	r29
    83d8:	cd b7       	in	r28, 0x3d	; 61
    83da:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer4, &TCNT4, &OCR4A);
    83dc:	48 ea       	ldi	r20, 0xA8	; 168
    83de:	50 e0       	ldi	r21, 0x00	; 0
    83e0:	64 ea       	ldi	r22, 0xA4	; 164
    83e2:	70 e0       	ldi	r23, 0x00	; 0
    83e4:	83 e0       	ldi	r24, 0x03	; 3
    83e6:	f5 dd       	rcall	.-1046   	; 0x7fd2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    83e8:	00 00       	nop
    83ea:	df 91       	pop	r29
    83ec:	cf 91       	pop	r28
    83ee:	ff 91       	pop	r31
    83f0:	ef 91       	pop	r30
    83f2:	bf 91       	pop	r27
    83f4:	af 91       	pop	r26
    83f6:	9f 91       	pop	r25
    83f8:	8f 91       	pop	r24
    83fa:	7f 91       	pop	r23
    83fc:	6f 91       	pop	r22
    83fe:	5f 91       	pop	r21
    8400:	4f 91       	pop	r20
    8402:	3f 91       	pop	r19
    8404:	2f 91       	pop	r18
    8406:	0f 90       	pop	r0
    8408:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    840c:	0f 90       	pop	r0
    840e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8412:	0f 90       	pop	r0
    8414:	1f 90       	pop	r1
    8416:	18 95       	reti

00008418 <__vector_47>:
#endif

#if defined(_useTimer5)
SIGNAL (TIMER5_COMPA_vect)
{
    8418:	1f 92       	push	r1
    841a:	0f 92       	push	r0
    841c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8420:	0f 92       	push	r0
    8422:	11 24       	eor	r1, r1
    8424:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    8428:	0f 92       	push	r0
    842a:	2f 93       	push	r18
    842c:	3f 93       	push	r19
    842e:	4f 93       	push	r20
    8430:	5f 93       	push	r21
    8432:	6f 93       	push	r22
    8434:	7f 93       	push	r23
    8436:	8f 93       	push	r24
    8438:	9f 93       	push	r25
    843a:	af 93       	push	r26
    843c:	bf 93       	push	r27
    843e:	ef 93       	push	r30
    8440:	ff 93       	push	r31
    8442:	cf 93       	push	r28
    8444:	df 93       	push	r29
    8446:	cd b7       	in	r28, 0x3d	; 61
    8448:	de b7       	in	r29, 0x3e	; 62
  handle_interrupts(_timer5, &TCNT5, &OCR5A);
    844a:	48 e2       	ldi	r20, 0x28	; 40
    844c:	51 e0       	ldi	r21, 0x01	; 1
    844e:	64 e2       	ldi	r22, 0x24	; 36
    8450:	71 e0       	ldi	r23, 0x01	; 1
    8452:	80 e0       	ldi	r24, 0x00	; 0
    8454:	be dd       	rcall	.-1156   	; 0x7fd2 <_ZL17handle_interrupts18timer16_Sequence_tPVjS1_>
}
    8456:	00 00       	nop
    8458:	df 91       	pop	r29
    845a:	cf 91       	pop	r28
    845c:	ff 91       	pop	r31
    845e:	ef 91       	pop	r30
    8460:	bf 91       	pop	r27
    8462:	af 91       	pop	r26
    8464:	9f 91       	pop	r25
    8466:	8f 91       	pop	r24
    8468:	7f 91       	pop	r23
    846a:	6f 91       	pop	r22
    846c:	5f 91       	pop	r21
    846e:	4f 91       	pop	r20
    8470:	3f 91       	pop	r19
    8472:	2f 91       	pop	r18
    8474:	0f 90       	pop	r0
    8476:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7c005b>
    847a:	0f 90       	pop	r0
    847c:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7c005f>
    8480:	0f 90       	pop	r0
    8482:	1f 90       	pop	r1
    8484:	18 95       	reti

00008486 <__subsf3>:
    8486:	50 58       	subi	r21, 0x80	; 128

00008488 <__addsf3>:
    8488:	bb 27       	eor	r27, r27
    848a:	aa 27       	eor	r26, r26
    848c:	0e d0       	rcall	.+28     	; 0x84aa <__addsf3x>
    848e:	75 c1       	rjmp	.+746    	; 0x877a <__fp_round>
    8490:	66 d1       	rcall	.+716    	; 0x875e <__fp_pscA>
    8492:	30 f0       	brcs	.+12     	; 0x84a0 <__addsf3+0x18>
    8494:	6b d1       	rcall	.+726    	; 0x876c <__fp_pscB>
    8496:	20 f0       	brcs	.+8      	; 0x84a0 <__addsf3+0x18>
    8498:	31 f4       	brne	.+12     	; 0x84a6 <__addsf3+0x1e>
    849a:	9f 3f       	cpi	r25, 0xFF	; 255
    849c:	11 f4       	brne	.+4      	; 0x84a2 <__addsf3+0x1a>
    849e:	1e f4       	brtc	.+6      	; 0x84a6 <__addsf3+0x1e>
    84a0:	5b c1       	rjmp	.+694    	; 0x8758 <__fp_nan>
    84a2:	0e f4       	brtc	.+2      	; 0x84a6 <__addsf3+0x1e>
    84a4:	e0 95       	com	r30
    84a6:	e7 fb       	bst	r30, 7
    84a8:	51 c1       	rjmp	.+674    	; 0x874c <__fp_inf>

000084aa <__addsf3x>:
    84aa:	e9 2f       	mov	r30, r25
    84ac:	77 d1       	rcall	.+750    	; 0x879c <__fp_split3>
    84ae:	80 f3       	brcs	.-32     	; 0x8490 <__addsf3+0x8>
    84b0:	ba 17       	cp	r27, r26
    84b2:	62 07       	cpc	r22, r18
    84b4:	73 07       	cpc	r23, r19
    84b6:	84 07       	cpc	r24, r20
    84b8:	95 07       	cpc	r25, r21
    84ba:	18 f0       	brcs	.+6      	; 0x84c2 <__addsf3x+0x18>
    84bc:	71 f4       	brne	.+28     	; 0x84da <__addsf3x+0x30>
    84be:	9e f5       	brtc	.+102    	; 0x8526 <__addsf3x+0x7c>
    84c0:	8f c1       	rjmp	.+798    	; 0x87e0 <__fp_zero>
    84c2:	0e f4       	brtc	.+2      	; 0x84c6 <__addsf3x+0x1c>
    84c4:	e0 95       	com	r30
    84c6:	0b 2e       	mov	r0, r27
    84c8:	ba 2f       	mov	r27, r26
    84ca:	a0 2d       	mov	r26, r0
    84cc:	0b 01       	movw	r0, r22
    84ce:	b9 01       	movw	r22, r18
    84d0:	90 01       	movw	r18, r0
    84d2:	0c 01       	movw	r0, r24
    84d4:	ca 01       	movw	r24, r20
    84d6:	a0 01       	movw	r20, r0
    84d8:	11 24       	eor	r1, r1
    84da:	ff 27       	eor	r31, r31
    84dc:	59 1b       	sub	r21, r25
    84de:	99 f0       	breq	.+38     	; 0x8506 <__addsf3x+0x5c>
    84e0:	59 3f       	cpi	r21, 0xF9	; 249
    84e2:	50 f4       	brcc	.+20     	; 0x84f8 <__addsf3x+0x4e>
    84e4:	50 3e       	cpi	r21, 0xE0	; 224
    84e6:	68 f1       	brcs	.+90     	; 0x8542 <__addsf3x+0x98>
    84e8:	1a 16       	cp	r1, r26
    84ea:	f0 40       	sbci	r31, 0x00	; 0
    84ec:	a2 2f       	mov	r26, r18
    84ee:	23 2f       	mov	r18, r19
    84f0:	34 2f       	mov	r19, r20
    84f2:	44 27       	eor	r20, r20
    84f4:	58 5f       	subi	r21, 0xF8	; 248
    84f6:	f3 cf       	rjmp	.-26     	; 0x84de <__addsf3x+0x34>
    84f8:	46 95       	lsr	r20
    84fa:	37 95       	ror	r19
    84fc:	27 95       	ror	r18
    84fe:	a7 95       	ror	r26
    8500:	f0 40       	sbci	r31, 0x00	; 0
    8502:	53 95       	inc	r21
    8504:	c9 f7       	brne	.-14     	; 0x84f8 <__addsf3x+0x4e>
    8506:	7e f4       	brtc	.+30     	; 0x8526 <__addsf3x+0x7c>
    8508:	1f 16       	cp	r1, r31
    850a:	ba 0b       	sbc	r27, r26
    850c:	62 0b       	sbc	r22, r18
    850e:	73 0b       	sbc	r23, r19
    8510:	84 0b       	sbc	r24, r20
    8512:	ba f0       	brmi	.+46     	; 0x8542 <__addsf3x+0x98>
    8514:	91 50       	subi	r25, 0x01	; 1
    8516:	a1 f0       	breq	.+40     	; 0x8540 <__addsf3x+0x96>
    8518:	ff 0f       	add	r31, r31
    851a:	bb 1f       	adc	r27, r27
    851c:	66 1f       	adc	r22, r22
    851e:	77 1f       	adc	r23, r23
    8520:	88 1f       	adc	r24, r24
    8522:	c2 f7       	brpl	.-16     	; 0x8514 <__addsf3x+0x6a>
    8524:	0e c0       	rjmp	.+28     	; 0x8542 <__addsf3x+0x98>
    8526:	ba 0f       	add	r27, r26
    8528:	62 1f       	adc	r22, r18
    852a:	73 1f       	adc	r23, r19
    852c:	84 1f       	adc	r24, r20
    852e:	48 f4       	brcc	.+18     	; 0x8542 <__addsf3x+0x98>
    8530:	87 95       	ror	r24
    8532:	77 95       	ror	r23
    8534:	67 95       	ror	r22
    8536:	b7 95       	ror	r27
    8538:	f7 95       	ror	r31
    853a:	9e 3f       	cpi	r25, 0xFE	; 254
    853c:	08 f0       	brcs	.+2      	; 0x8540 <__addsf3x+0x96>
    853e:	b3 cf       	rjmp	.-154    	; 0x84a6 <__addsf3+0x1e>
    8540:	93 95       	inc	r25
    8542:	88 0f       	add	r24, r24
    8544:	08 f0       	brcs	.+2      	; 0x8548 <__addsf3x+0x9e>
    8546:	99 27       	eor	r25, r25
    8548:	ee 0f       	add	r30, r30
    854a:	97 95       	ror	r25
    854c:	87 95       	ror	r24
    854e:	08 95       	ret

00008550 <__cmpsf2>:
    8550:	d9 d0       	rcall	.+434    	; 0x8704 <__fp_cmp>
    8552:	08 f4       	brcc	.+2      	; 0x8556 <__cmpsf2+0x6>
    8554:	81 e0       	ldi	r24, 0x01	; 1
    8556:	08 95       	ret

00008558 <__divsf3>:
    8558:	0c d0       	rcall	.+24     	; 0x8572 <__divsf3x>
    855a:	0f c1       	rjmp	.+542    	; 0x877a <__fp_round>
    855c:	07 d1       	rcall	.+526    	; 0x876c <__fp_pscB>
    855e:	40 f0       	brcs	.+16     	; 0x8570 <__divsf3+0x18>
    8560:	fe d0       	rcall	.+508    	; 0x875e <__fp_pscA>
    8562:	30 f0       	brcs	.+12     	; 0x8570 <__divsf3+0x18>
    8564:	21 f4       	brne	.+8      	; 0x856e <__divsf3+0x16>
    8566:	5f 3f       	cpi	r21, 0xFF	; 255
    8568:	19 f0       	breq	.+6      	; 0x8570 <__divsf3+0x18>
    856a:	f0 c0       	rjmp	.+480    	; 0x874c <__fp_inf>
    856c:	51 11       	cpse	r21, r1
    856e:	39 c1       	rjmp	.+626    	; 0x87e2 <__fp_szero>
    8570:	f3 c0       	rjmp	.+486    	; 0x8758 <__fp_nan>

00008572 <__divsf3x>:
    8572:	14 d1       	rcall	.+552    	; 0x879c <__fp_split3>
    8574:	98 f3       	brcs	.-26     	; 0x855c <__divsf3+0x4>

00008576 <__divsf3_pse>:
    8576:	99 23       	and	r25, r25
    8578:	c9 f3       	breq	.-14     	; 0x856c <__divsf3+0x14>
    857a:	55 23       	and	r21, r21
    857c:	b1 f3       	breq	.-20     	; 0x856a <__divsf3+0x12>
    857e:	95 1b       	sub	r25, r21
    8580:	55 0b       	sbc	r21, r21
    8582:	bb 27       	eor	r27, r27
    8584:	aa 27       	eor	r26, r26
    8586:	62 17       	cp	r22, r18
    8588:	73 07       	cpc	r23, r19
    858a:	84 07       	cpc	r24, r20
    858c:	38 f0       	brcs	.+14     	; 0x859c <__divsf3_pse+0x26>
    858e:	9f 5f       	subi	r25, 0xFF	; 255
    8590:	5f 4f       	sbci	r21, 0xFF	; 255
    8592:	22 0f       	add	r18, r18
    8594:	33 1f       	adc	r19, r19
    8596:	44 1f       	adc	r20, r20
    8598:	aa 1f       	adc	r26, r26
    859a:	a9 f3       	breq	.-22     	; 0x8586 <__divsf3_pse+0x10>
    859c:	33 d0       	rcall	.+102    	; 0x8604 <__divsf3_pse+0x8e>
    859e:	0e 2e       	mov	r0, r30
    85a0:	3a f0       	brmi	.+14     	; 0x85b0 <__divsf3_pse+0x3a>
    85a2:	e0 e8       	ldi	r30, 0x80	; 128
    85a4:	30 d0       	rcall	.+96     	; 0x8606 <__divsf3_pse+0x90>
    85a6:	91 50       	subi	r25, 0x01	; 1
    85a8:	50 40       	sbci	r21, 0x00	; 0
    85aa:	e6 95       	lsr	r30
    85ac:	00 1c       	adc	r0, r0
    85ae:	ca f7       	brpl	.-14     	; 0x85a2 <__divsf3_pse+0x2c>
    85b0:	29 d0       	rcall	.+82     	; 0x8604 <__divsf3_pse+0x8e>
    85b2:	fe 2f       	mov	r31, r30
    85b4:	27 d0       	rcall	.+78     	; 0x8604 <__divsf3_pse+0x8e>
    85b6:	66 0f       	add	r22, r22
    85b8:	77 1f       	adc	r23, r23
    85ba:	88 1f       	adc	r24, r24
    85bc:	bb 1f       	adc	r27, r27
    85be:	26 17       	cp	r18, r22
    85c0:	37 07       	cpc	r19, r23
    85c2:	48 07       	cpc	r20, r24
    85c4:	ab 07       	cpc	r26, r27
    85c6:	b0 e8       	ldi	r27, 0x80	; 128
    85c8:	09 f0       	breq	.+2      	; 0x85cc <__divsf3_pse+0x56>
    85ca:	bb 0b       	sbc	r27, r27
    85cc:	80 2d       	mov	r24, r0
    85ce:	bf 01       	movw	r22, r30
    85d0:	ff 27       	eor	r31, r31
    85d2:	93 58       	subi	r25, 0x83	; 131
    85d4:	5f 4f       	sbci	r21, 0xFF	; 255
    85d6:	2a f0       	brmi	.+10     	; 0x85e2 <__divsf3_pse+0x6c>
    85d8:	9e 3f       	cpi	r25, 0xFE	; 254
    85da:	51 05       	cpc	r21, r1
    85dc:	68 f0       	brcs	.+26     	; 0x85f8 <__divsf3_pse+0x82>
    85de:	b6 c0       	rjmp	.+364    	; 0x874c <__fp_inf>
    85e0:	00 c1       	rjmp	.+512    	; 0x87e2 <__fp_szero>
    85e2:	5f 3f       	cpi	r21, 0xFF	; 255
    85e4:	ec f3       	brlt	.-6      	; 0x85e0 <__divsf3_pse+0x6a>
    85e6:	98 3e       	cpi	r25, 0xE8	; 232
    85e8:	dc f3       	brlt	.-10     	; 0x85e0 <__divsf3_pse+0x6a>
    85ea:	86 95       	lsr	r24
    85ec:	77 95       	ror	r23
    85ee:	67 95       	ror	r22
    85f0:	b7 95       	ror	r27
    85f2:	f7 95       	ror	r31
    85f4:	9f 5f       	subi	r25, 0xFF	; 255
    85f6:	c9 f7       	brne	.-14     	; 0x85ea <__divsf3_pse+0x74>
    85f8:	88 0f       	add	r24, r24
    85fa:	91 1d       	adc	r25, r1
    85fc:	96 95       	lsr	r25
    85fe:	87 95       	ror	r24
    8600:	97 f9       	bld	r25, 7
    8602:	08 95       	ret
    8604:	e1 e0       	ldi	r30, 0x01	; 1
    8606:	66 0f       	add	r22, r22
    8608:	77 1f       	adc	r23, r23
    860a:	88 1f       	adc	r24, r24
    860c:	bb 1f       	adc	r27, r27
    860e:	62 17       	cp	r22, r18
    8610:	73 07       	cpc	r23, r19
    8612:	84 07       	cpc	r24, r20
    8614:	ba 07       	cpc	r27, r26
    8616:	20 f0       	brcs	.+8      	; 0x8620 <__divsf3_pse+0xaa>
    8618:	62 1b       	sub	r22, r18
    861a:	73 0b       	sbc	r23, r19
    861c:	84 0b       	sbc	r24, r20
    861e:	ba 0b       	sbc	r27, r26
    8620:	ee 1f       	adc	r30, r30
    8622:	88 f7       	brcc	.-30     	; 0x8606 <__divsf3_pse+0x90>
    8624:	e0 95       	com	r30
    8626:	08 95       	ret

00008628 <__fixsfsi>:
    8628:	04 d0       	rcall	.+8      	; 0x8632 <__fixunssfsi>
    862a:	68 94       	set
    862c:	b1 11       	cpse	r27, r1
    862e:	d9 c0       	rjmp	.+434    	; 0x87e2 <__fp_szero>
    8630:	08 95       	ret

00008632 <__fixunssfsi>:
    8632:	bc d0       	rcall	.+376    	; 0x87ac <__fp_splitA>
    8634:	88 f0       	brcs	.+34     	; 0x8658 <__fixunssfsi+0x26>
    8636:	9f 57       	subi	r25, 0x7F	; 127
    8638:	90 f0       	brcs	.+36     	; 0x865e <__fixunssfsi+0x2c>
    863a:	b9 2f       	mov	r27, r25
    863c:	99 27       	eor	r25, r25
    863e:	b7 51       	subi	r27, 0x17	; 23
    8640:	a0 f0       	brcs	.+40     	; 0x866a <__fixunssfsi+0x38>
    8642:	d1 f0       	breq	.+52     	; 0x8678 <__fixunssfsi+0x46>
    8644:	66 0f       	add	r22, r22
    8646:	77 1f       	adc	r23, r23
    8648:	88 1f       	adc	r24, r24
    864a:	99 1f       	adc	r25, r25
    864c:	1a f0       	brmi	.+6      	; 0x8654 <__fixunssfsi+0x22>
    864e:	ba 95       	dec	r27
    8650:	c9 f7       	brne	.-14     	; 0x8644 <__fixunssfsi+0x12>
    8652:	12 c0       	rjmp	.+36     	; 0x8678 <__fixunssfsi+0x46>
    8654:	b1 30       	cpi	r27, 0x01	; 1
    8656:	81 f0       	breq	.+32     	; 0x8678 <__fixunssfsi+0x46>
    8658:	c3 d0       	rcall	.+390    	; 0x87e0 <__fp_zero>
    865a:	b1 e0       	ldi	r27, 0x01	; 1
    865c:	08 95       	ret
    865e:	c0 c0       	rjmp	.+384    	; 0x87e0 <__fp_zero>
    8660:	67 2f       	mov	r22, r23
    8662:	78 2f       	mov	r23, r24
    8664:	88 27       	eor	r24, r24
    8666:	b8 5f       	subi	r27, 0xF8	; 248
    8668:	39 f0       	breq	.+14     	; 0x8678 <__fixunssfsi+0x46>
    866a:	b9 3f       	cpi	r27, 0xF9	; 249
    866c:	cc f3       	brlt	.-14     	; 0x8660 <__fixunssfsi+0x2e>
    866e:	86 95       	lsr	r24
    8670:	77 95       	ror	r23
    8672:	67 95       	ror	r22
    8674:	b3 95       	inc	r27
    8676:	d9 f7       	brne	.-10     	; 0x866e <__fixunssfsi+0x3c>
    8678:	3e f4       	brtc	.+14     	; 0x8688 <__fixunssfsi+0x56>
    867a:	90 95       	com	r25
    867c:	80 95       	com	r24
    867e:	70 95       	com	r23
    8680:	61 95       	neg	r22
    8682:	7f 4f       	sbci	r23, 0xFF	; 255
    8684:	8f 4f       	sbci	r24, 0xFF	; 255
    8686:	9f 4f       	sbci	r25, 0xFF	; 255
    8688:	08 95       	ret

0000868a <__floatunsisf>:
    868a:	e8 94       	clt
    868c:	09 c0       	rjmp	.+18     	; 0x86a0 <__floatsisf+0x12>

0000868e <__floatsisf>:
    868e:	97 fb       	bst	r25, 7
    8690:	3e f4       	brtc	.+14     	; 0x86a0 <__floatsisf+0x12>
    8692:	90 95       	com	r25
    8694:	80 95       	com	r24
    8696:	70 95       	com	r23
    8698:	61 95       	neg	r22
    869a:	7f 4f       	sbci	r23, 0xFF	; 255
    869c:	8f 4f       	sbci	r24, 0xFF	; 255
    869e:	9f 4f       	sbci	r25, 0xFF	; 255
    86a0:	99 23       	and	r25, r25
    86a2:	a9 f0       	breq	.+42     	; 0x86ce <__floatsisf+0x40>
    86a4:	f9 2f       	mov	r31, r25
    86a6:	96 e9       	ldi	r25, 0x96	; 150
    86a8:	bb 27       	eor	r27, r27
    86aa:	93 95       	inc	r25
    86ac:	f6 95       	lsr	r31
    86ae:	87 95       	ror	r24
    86b0:	77 95       	ror	r23
    86b2:	67 95       	ror	r22
    86b4:	b7 95       	ror	r27
    86b6:	f1 11       	cpse	r31, r1
    86b8:	f8 cf       	rjmp	.-16     	; 0x86aa <__floatsisf+0x1c>
    86ba:	fa f4       	brpl	.+62     	; 0x86fa <__floatsisf+0x6c>
    86bc:	bb 0f       	add	r27, r27
    86be:	11 f4       	brne	.+4      	; 0x86c4 <__floatsisf+0x36>
    86c0:	60 ff       	sbrs	r22, 0
    86c2:	1b c0       	rjmp	.+54     	; 0x86fa <__floatsisf+0x6c>
    86c4:	6f 5f       	subi	r22, 0xFF	; 255
    86c6:	7f 4f       	sbci	r23, 0xFF	; 255
    86c8:	8f 4f       	sbci	r24, 0xFF	; 255
    86ca:	9f 4f       	sbci	r25, 0xFF	; 255
    86cc:	16 c0       	rjmp	.+44     	; 0x86fa <__floatsisf+0x6c>
    86ce:	88 23       	and	r24, r24
    86d0:	11 f0       	breq	.+4      	; 0x86d6 <__floatsisf+0x48>
    86d2:	96 e9       	ldi	r25, 0x96	; 150
    86d4:	11 c0       	rjmp	.+34     	; 0x86f8 <__floatsisf+0x6a>
    86d6:	77 23       	and	r23, r23
    86d8:	21 f0       	breq	.+8      	; 0x86e2 <__floatsisf+0x54>
    86da:	9e e8       	ldi	r25, 0x8E	; 142
    86dc:	87 2f       	mov	r24, r23
    86de:	76 2f       	mov	r23, r22
    86e0:	05 c0       	rjmp	.+10     	; 0x86ec <__floatsisf+0x5e>
    86e2:	66 23       	and	r22, r22
    86e4:	71 f0       	breq	.+28     	; 0x8702 <__floatsisf+0x74>
    86e6:	96 e8       	ldi	r25, 0x86	; 134
    86e8:	86 2f       	mov	r24, r22
    86ea:	70 e0       	ldi	r23, 0x00	; 0
    86ec:	60 e0       	ldi	r22, 0x00	; 0
    86ee:	2a f0       	brmi	.+10     	; 0x86fa <__floatsisf+0x6c>
    86f0:	9a 95       	dec	r25
    86f2:	66 0f       	add	r22, r22
    86f4:	77 1f       	adc	r23, r23
    86f6:	88 1f       	adc	r24, r24
    86f8:	da f7       	brpl	.-10     	; 0x86f0 <__floatsisf+0x62>
    86fa:	88 0f       	add	r24, r24
    86fc:	96 95       	lsr	r25
    86fe:	87 95       	ror	r24
    8700:	97 f9       	bld	r25, 7
    8702:	08 95       	ret

00008704 <__fp_cmp>:
    8704:	99 0f       	add	r25, r25
    8706:	00 08       	sbc	r0, r0
    8708:	55 0f       	add	r21, r21
    870a:	aa 0b       	sbc	r26, r26
    870c:	e0 e8       	ldi	r30, 0x80	; 128
    870e:	fe ef       	ldi	r31, 0xFE	; 254
    8710:	16 16       	cp	r1, r22
    8712:	17 06       	cpc	r1, r23
    8714:	e8 07       	cpc	r30, r24
    8716:	f9 07       	cpc	r31, r25
    8718:	c0 f0       	brcs	.+48     	; 0x874a <__fp_cmp+0x46>
    871a:	12 16       	cp	r1, r18
    871c:	13 06       	cpc	r1, r19
    871e:	e4 07       	cpc	r30, r20
    8720:	f5 07       	cpc	r31, r21
    8722:	98 f0       	brcs	.+38     	; 0x874a <__fp_cmp+0x46>
    8724:	62 1b       	sub	r22, r18
    8726:	73 0b       	sbc	r23, r19
    8728:	84 0b       	sbc	r24, r20
    872a:	95 0b       	sbc	r25, r21
    872c:	39 f4       	brne	.+14     	; 0x873c <__fp_cmp+0x38>
    872e:	0a 26       	eor	r0, r26
    8730:	61 f0       	breq	.+24     	; 0x874a <__fp_cmp+0x46>
    8732:	23 2b       	or	r18, r19
    8734:	24 2b       	or	r18, r20
    8736:	25 2b       	or	r18, r21
    8738:	21 f4       	brne	.+8      	; 0x8742 <__fp_cmp+0x3e>
    873a:	08 95       	ret
    873c:	0a 26       	eor	r0, r26
    873e:	09 f4       	brne	.+2      	; 0x8742 <__fp_cmp+0x3e>
    8740:	a1 40       	sbci	r26, 0x01	; 1
    8742:	a6 95       	lsr	r26
    8744:	8f ef       	ldi	r24, 0xFF	; 255
    8746:	81 1d       	adc	r24, r1
    8748:	81 1d       	adc	r24, r1
    874a:	08 95       	ret

0000874c <__fp_inf>:
    874c:	97 f9       	bld	r25, 7
    874e:	9f 67       	ori	r25, 0x7F	; 127
    8750:	80 e8       	ldi	r24, 0x80	; 128
    8752:	70 e0       	ldi	r23, 0x00	; 0
    8754:	60 e0       	ldi	r22, 0x00	; 0
    8756:	08 95       	ret

00008758 <__fp_nan>:
    8758:	9f ef       	ldi	r25, 0xFF	; 255
    875a:	80 ec       	ldi	r24, 0xC0	; 192
    875c:	08 95       	ret

0000875e <__fp_pscA>:
    875e:	00 24       	eor	r0, r0
    8760:	0a 94       	dec	r0
    8762:	16 16       	cp	r1, r22
    8764:	17 06       	cpc	r1, r23
    8766:	18 06       	cpc	r1, r24
    8768:	09 06       	cpc	r0, r25
    876a:	08 95       	ret

0000876c <__fp_pscB>:
    876c:	00 24       	eor	r0, r0
    876e:	0a 94       	dec	r0
    8770:	12 16       	cp	r1, r18
    8772:	13 06       	cpc	r1, r19
    8774:	14 06       	cpc	r1, r20
    8776:	05 06       	cpc	r0, r21
    8778:	08 95       	ret

0000877a <__fp_round>:
    877a:	09 2e       	mov	r0, r25
    877c:	03 94       	inc	r0
    877e:	00 0c       	add	r0, r0
    8780:	11 f4       	brne	.+4      	; 0x8786 <__fp_round+0xc>
    8782:	88 23       	and	r24, r24
    8784:	52 f0       	brmi	.+20     	; 0x879a <__fp_round+0x20>
    8786:	bb 0f       	add	r27, r27
    8788:	40 f4       	brcc	.+16     	; 0x879a <__fp_round+0x20>
    878a:	bf 2b       	or	r27, r31
    878c:	11 f4       	brne	.+4      	; 0x8792 <__fp_round+0x18>
    878e:	60 ff       	sbrs	r22, 0
    8790:	04 c0       	rjmp	.+8      	; 0x879a <__fp_round+0x20>
    8792:	6f 5f       	subi	r22, 0xFF	; 255
    8794:	7f 4f       	sbci	r23, 0xFF	; 255
    8796:	8f 4f       	sbci	r24, 0xFF	; 255
    8798:	9f 4f       	sbci	r25, 0xFF	; 255
    879a:	08 95       	ret

0000879c <__fp_split3>:
    879c:	57 fd       	sbrc	r21, 7
    879e:	90 58       	subi	r25, 0x80	; 128
    87a0:	44 0f       	add	r20, r20
    87a2:	55 1f       	adc	r21, r21
    87a4:	59 f0       	breq	.+22     	; 0x87bc <__fp_splitA+0x10>
    87a6:	5f 3f       	cpi	r21, 0xFF	; 255
    87a8:	71 f0       	breq	.+28     	; 0x87c6 <__fp_splitA+0x1a>
    87aa:	47 95       	ror	r20

000087ac <__fp_splitA>:
    87ac:	88 0f       	add	r24, r24
    87ae:	97 fb       	bst	r25, 7
    87b0:	99 1f       	adc	r25, r25
    87b2:	61 f0       	breq	.+24     	; 0x87cc <__fp_splitA+0x20>
    87b4:	9f 3f       	cpi	r25, 0xFF	; 255
    87b6:	79 f0       	breq	.+30     	; 0x87d6 <__fp_splitA+0x2a>
    87b8:	87 95       	ror	r24
    87ba:	08 95       	ret
    87bc:	12 16       	cp	r1, r18
    87be:	13 06       	cpc	r1, r19
    87c0:	14 06       	cpc	r1, r20
    87c2:	55 1f       	adc	r21, r21
    87c4:	f2 cf       	rjmp	.-28     	; 0x87aa <__fp_split3+0xe>
    87c6:	46 95       	lsr	r20
    87c8:	f1 df       	rcall	.-30     	; 0x87ac <__fp_splitA>
    87ca:	08 c0       	rjmp	.+16     	; 0x87dc <__fp_splitA+0x30>
    87cc:	16 16       	cp	r1, r22
    87ce:	17 06       	cpc	r1, r23
    87d0:	18 06       	cpc	r1, r24
    87d2:	99 1f       	adc	r25, r25
    87d4:	f1 cf       	rjmp	.-30     	; 0x87b8 <__fp_splitA+0xc>
    87d6:	86 95       	lsr	r24
    87d8:	71 05       	cpc	r23, r1
    87da:	61 05       	cpc	r22, r1
    87dc:	08 94       	sec
    87de:	08 95       	ret

000087e0 <__fp_zero>:
    87e0:	e8 94       	clt

000087e2 <__fp_szero>:
    87e2:	bb 27       	eor	r27, r27
    87e4:	66 27       	eor	r22, r22
    87e6:	77 27       	eor	r23, r23
    87e8:	cb 01       	movw	r24, r22
    87ea:	97 f9       	bld	r25, 7
    87ec:	08 95       	ret

000087ee <__gesf2>:
    87ee:	8a df       	rcall	.-236    	; 0x8704 <__fp_cmp>
    87f0:	08 f4       	brcc	.+2      	; 0x87f4 <__gesf2+0x6>
    87f2:	8f ef       	ldi	r24, 0xFF	; 255
    87f4:	08 95       	ret

000087f6 <__mulsf3>:
    87f6:	0b d0       	rcall	.+22     	; 0x880e <__mulsf3x>
    87f8:	c0 cf       	rjmp	.-128    	; 0x877a <__fp_round>
    87fa:	b1 df       	rcall	.-158    	; 0x875e <__fp_pscA>
    87fc:	28 f0       	brcs	.+10     	; 0x8808 <__mulsf3+0x12>
    87fe:	b6 df       	rcall	.-148    	; 0x876c <__fp_pscB>
    8800:	18 f0       	brcs	.+6      	; 0x8808 <__mulsf3+0x12>
    8802:	95 23       	and	r25, r21
    8804:	09 f0       	breq	.+2      	; 0x8808 <__mulsf3+0x12>
    8806:	a2 cf       	rjmp	.-188    	; 0x874c <__fp_inf>
    8808:	a7 cf       	rjmp	.-178    	; 0x8758 <__fp_nan>
    880a:	11 24       	eor	r1, r1
    880c:	ea cf       	rjmp	.-44     	; 0x87e2 <__fp_szero>

0000880e <__mulsf3x>:
    880e:	c6 df       	rcall	.-116    	; 0x879c <__fp_split3>
    8810:	a0 f3       	brcs	.-24     	; 0x87fa <__mulsf3+0x4>

00008812 <__mulsf3_pse>:
    8812:	95 9f       	mul	r25, r21
    8814:	d1 f3       	breq	.-12     	; 0x880a <__mulsf3+0x14>
    8816:	95 0f       	add	r25, r21
    8818:	50 e0       	ldi	r21, 0x00	; 0
    881a:	55 1f       	adc	r21, r21
    881c:	62 9f       	mul	r22, r18
    881e:	f0 01       	movw	r30, r0
    8820:	72 9f       	mul	r23, r18
    8822:	bb 27       	eor	r27, r27
    8824:	f0 0d       	add	r31, r0
    8826:	b1 1d       	adc	r27, r1
    8828:	63 9f       	mul	r22, r19
    882a:	aa 27       	eor	r26, r26
    882c:	f0 0d       	add	r31, r0
    882e:	b1 1d       	adc	r27, r1
    8830:	aa 1f       	adc	r26, r26
    8832:	64 9f       	mul	r22, r20
    8834:	66 27       	eor	r22, r22
    8836:	b0 0d       	add	r27, r0
    8838:	a1 1d       	adc	r26, r1
    883a:	66 1f       	adc	r22, r22
    883c:	82 9f       	mul	r24, r18
    883e:	22 27       	eor	r18, r18
    8840:	b0 0d       	add	r27, r0
    8842:	a1 1d       	adc	r26, r1
    8844:	62 1f       	adc	r22, r18
    8846:	73 9f       	mul	r23, r19
    8848:	b0 0d       	add	r27, r0
    884a:	a1 1d       	adc	r26, r1
    884c:	62 1f       	adc	r22, r18
    884e:	83 9f       	mul	r24, r19
    8850:	a0 0d       	add	r26, r0
    8852:	61 1d       	adc	r22, r1
    8854:	22 1f       	adc	r18, r18
    8856:	74 9f       	mul	r23, r20
    8858:	33 27       	eor	r19, r19
    885a:	a0 0d       	add	r26, r0
    885c:	61 1d       	adc	r22, r1
    885e:	23 1f       	adc	r18, r19
    8860:	84 9f       	mul	r24, r20
    8862:	60 0d       	add	r22, r0
    8864:	21 1d       	adc	r18, r1
    8866:	82 2f       	mov	r24, r18
    8868:	76 2f       	mov	r23, r22
    886a:	6a 2f       	mov	r22, r26
    886c:	11 24       	eor	r1, r1
    886e:	9f 57       	subi	r25, 0x7F	; 127
    8870:	50 40       	sbci	r21, 0x00	; 0
    8872:	8a f0       	brmi	.+34     	; 0x8896 <__mulsf3_pse+0x84>
    8874:	e1 f0       	breq	.+56     	; 0x88ae <__mulsf3_pse+0x9c>
    8876:	88 23       	and	r24, r24
    8878:	4a f0       	brmi	.+18     	; 0x888c <__mulsf3_pse+0x7a>
    887a:	ee 0f       	add	r30, r30
    887c:	ff 1f       	adc	r31, r31
    887e:	bb 1f       	adc	r27, r27
    8880:	66 1f       	adc	r22, r22
    8882:	77 1f       	adc	r23, r23
    8884:	88 1f       	adc	r24, r24
    8886:	91 50       	subi	r25, 0x01	; 1
    8888:	50 40       	sbci	r21, 0x00	; 0
    888a:	a9 f7       	brne	.-22     	; 0x8876 <__mulsf3_pse+0x64>
    888c:	9e 3f       	cpi	r25, 0xFE	; 254
    888e:	51 05       	cpc	r21, r1
    8890:	70 f0       	brcs	.+28     	; 0x88ae <__mulsf3_pse+0x9c>
    8892:	5c cf       	rjmp	.-328    	; 0x874c <__fp_inf>
    8894:	a6 cf       	rjmp	.-180    	; 0x87e2 <__fp_szero>
    8896:	5f 3f       	cpi	r21, 0xFF	; 255
    8898:	ec f3       	brlt	.-6      	; 0x8894 <__mulsf3_pse+0x82>
    889a:	98 3e       	cpi	r25, 0xE8	; 232
    889c:	dc f3       	brlt	.-10     	; 0x8894 <__mulsf3_pse+0x82>
    889e:	86 95       	lsr	r24
    88a0:	77 95       	ror	r23
    88a2:	67 95       	ror	r22
    88a4:	b7 95       	ror	r27
    88a6:	f7 95       	ror	r31
    88a8:	e7 95       	ror	r30
    88aa:	9f 5f       	subi	r25, 0xFF	; 255
    88ac:	c1 f7       	brne	.-16     	; 0x889e <__mulsf3_pse+0x8c>
    88ae:	fe 2b       	or	r31, r30
    88b0:	88 0f       	add	r24, r24
    88b2:	91 1d       	adc	r25, r1
    88b4:	96 95       	lsr	r25
    88b6:	87 95       	ror	r24
    88b8:	97 f9       	bld	r25, 7
    88ba:	08 95       	ret

000088bc <pow>:
    88bc:	fa 01       	movw	r30, r20
    88be:	ee 0f       	add	r30, r30
    88c0:	ff 1f       	adc	r31, r31
    88c2:	30 96       	adiw	r30, 0x00	; 0
    88c4:	21 05       	cpc	r18, r1
    88c6:	31 05       	cpc	r19, r1
    88c8:	99 f1       	breq	.+102    	; 0x8930 <pow+0x74>
    88ca:	61 15       	cp	r22, r1
    88cc:	71 05       	cpc	r23, r1
    88ce:	61 f4       	brne	.+24     	; 0x88e8 <pow+0x2c>
    88d0:	80 38       	cpi	r24, 0x80	; 128
    88d2:	bf e3       	ldi	r27, 0x3F	; 63
    88d4:	9b 07       	cpc	r25, r27
    88d6:	49 f1       	breq	.+82     	; 0x892a <pow+0x6e>
    88d8:	68 94       	set
    88da:	90 38       	cpi	r25, 0x80	; 128
    88dc:	81 05       	cpc	r24, r1
    88de:	61 f0       	breq	.+24     	; 0x88f8 <pow+0x3c>
    88e0:	80 38       	cpi	r24, 0x80	; 128
    88e2:	bf ef       	ldi	r27, 0xFF	; 255
    88e4:	9b 07       	cpc	r25, r27
    88e6:	41 f0       	breq	.+16     	; 0x88f8 <pow+0x3c>
    88e8:	99 23       	and	r25, r25
    88ea:	42 f5       	brpl	.+80     	; 0x893c <pow+0x80>
    88ec:	ff 3f       	cpi	r31, 0xFF	; 255
    88ee:	e1 05       	cpc	r30, r1
    88f0:	31 05       	cpc	r19, r1
    88f2:	21 05       	cpc	r18, r1
    88f4:	11 f1       	breq	.+68     	; 0x893a <pow+0x7e>
    88f6:	e8 94       	clt
    88f8:	08 94       	sec
    88fa:	e7 95       	ror	r30
    88fc:	d9 01       	movw	r26, r18
    88fe:	aa 23       	and	r26, r26
    8900:	29 f4       	brne	.+10     	; 0x890c <pow+0x50>
    8902:	ab 2f       	mov	r26, r27
    8904:	be 2f       	mov	r27, r30
    8906:	f8 5f       	subi	r31, 0xF8	; 248
    8908:	d0 f3       	brcs	.-12     	; 0x88fe <pow+0x42>
    890a:	10 c0       	rjmp	.+32     	; 0x892c <pow+0x70>
    890c:	ff 5f       	subi	r31, 0xFF	; 255
    890e:	70 f4       	brcc	.+28     	; 0x892c <pow+0x70>
    8910:	a6 95       	lsr	r26
    8912:	e0 f7       	brcc	.-8      	; 0x890c <pow+0x50>
    8914:	f7 39       	cpi	r31, 0x97	; 151
    8916:	50 f0       	brcs	.+20     	; 0x892c <pow+0x70>
    8918:	19 f0       	breq	.+6      	; 0x8920 <pow+0x64>
    891a:	ff 3a       	cpi	r31, 0xAF	; 175
    891c:	38 f4       	brcc	.+14     	; 0x892c <pow+0x70>
    891e:	9f 77       	andi	r25, 0x7F	; 127
    8920:	9f 93       	push	r25
    8922:	0c d0       	rcall	.+24     	; 0x893c <pow+0x80>
    8924:	0f 90       	pop	r0
    8926:	07 fc       	sbrc	r0, 7
    8928:	90 58       	subi	r25, 0x80	; 128
    892a:	08 95       	ret
    892c:	3e f0       	brts	.+14     	; 0x893c <pow+0x80>
    892e:	14 cf       	rjmp	.-472    	; 0x8758 <__fp_nan>
    8930:	60 e0       	ldi	r22, 0x00	; 0
    8932:	70 e0       	ldi	r23, 0x00	; 0
    8934:	80 e8       	ldi	r24, 0x80	; 128
    8936:	9f e3       	ldi	r25, 0x3F	; 63
    8938:	08 95       	ret
    893a:	4f e7       	ldi	r20, 0x7F	; 127
    893c:	9f 77       	andi	r25, 0x7F	; 127
    893e:	5f 93       	push	r21
    8940:	4f 93       	push	r20
    8942:	3f 93       	push	r19
    8944:	2f 93       	push	r18
    8946:	f9 d0       	rcall	.+498    	; 0x8b3a <log>
    8948:	2f 91       	pop	r18
    894a:	3f 91       	pop	r19
    894c:	4f 91       	pop	r20
    894e:	5f 91       	pop	r21
    8950:	52 df       	rcall	.-348    	; 0x87f6 <__mulsf3>
    8952:	4b c0       	rjmp	.+150    	; 0x89ea <exp>
    8954:	11 f4       	brne	.+4      	; 0x895a <pow+0x9e>
    8956:	0e f4       	brtc	.+2      	; 0x895a <pow+0x9e>
    8958:	ff ce       	rjmp	.-514    	; 0x8758 <__fp_nan>
    895a:	73 c0       	rjmp	.+230    	; 0x8a42 <__fp_mpack>

0000895c <sqrt>:
    895c:	27 df       	rcall	.-434    	; 0x87ac <__fp_splitA>
    895e:	d0 f3       	brcs	.-12     	; 0x8954 <pow+0x98>
    8960:	99 23       	and	r25, r25
    8962:	d9 f3       	breq	.-10     	; 0x895a <pow+0x9e>
    8964:	ce f3       	brts	.-14     	; 0x8958 <pow+0x9c>
    8966:	9f 57       	subi	r25, 0x7F	; 127
    8968:	55 0b       	sbc	r21, r21
    896a:	87 ff       	sbrs	r24, 7
    896c:	78 d0       	rcall	.+240    	; 0x8a5e <__fp_norm2>
    896e:	00 24       	eor	r0, r0
    8970:	a0 e6       	ldi	r26, 0x60	; 96
    8972:	40 ea       	ldi	r20, 0xA0	; 160
    8974:	90 01       	movw	r18, r0
    8976:	80 58       	subi	r24, 0x80	; 128
    8978:	56 95       	lsr	r21
    897a:	97 95       	ror	r25
    897c:	28 f4       	brcc	.+10     	; 0x8988 <sqrt+0x2c>
    897e:	80 5c       	subi	r24, 0xC0	; 192
    8980:	66 0f       	add	r22, r22
    8982:	77 1f       	adc	r23, r23
    8984:	88 1f       	adc	r24, r24
    8986:	20 f0       	brcs	.+8      	; 0x8990 <sqrt+0x34>
    8988:	26 17       	cp	r18, r22
    898a:	37 07       	cpc	r19, r23
    898c:	48 07       	cpc	r20, r24
    898e:	30 f4       	brcc	.+12     	; 0x899c <sqrt+0x40>
    8990:	62 1b       	sub	r22, r18
    8992:	73 0b       	sbc	r23, r19
    8994:	84 0b       	sbc	r24, r20
    8996:	20 29       	or	r18, r0
    8998:	31 29       	or	r19, r1
    899a:	4a 2b       	or	r20, r26
    899c:	a6 95       	lsr	r26
    899e:	17 94       	ror	r1
    89a0:	07 94       	ror	r0
    89a2:	20 25       	eor	r18, r0
    89a4:	31 25       	eor	r19, r1
    89a6:	4a 27       	eor	r20, r26
    89a8:	58 f7       	brcc	.-42     	; 0x8980 <sqrt+0x24>
    89aa:	66 0f       	add	r22, r22
    89ac:	77 1f       	adc	r23, r23
    89ae:	88 1f       	adc	r24, r24
    89b0:	20 f0       	brcs	.+8      	; 0x89ba <sqrt+0x5e>
    89b2:	26 17       	cp	r18, r22
    89b4:	37 07       	cpc	r19, r23
    89b6:	48 07       	cpc	r20, r24
    89b8:	30 f4       	brcc	.+12     	; 0x89c6 <sqrt+0x6a>
    89ba:	62 0b       	sbc	r22, r18
    89bc:	73 0b       	sbc	r23, r19
    89be:	84 0b       	sbc	r24, r20
    89c0:	20 0d       	add	r18, r0
    89c2:	31 1d       	adc	r19, r1
    89c4:	41 1d       	adc	r20, r1
    89c6:	a0 95       	com	r26
    89c8:	81 f7       	brne	.-32     	; 0x89aa <sqrt+0x4e>
    89ca:	b9 01       	movw	r22, r18
    89cc:	84 2f       	mov	r24, r20
    89ce:	91 58       	subi	r25, 0x81	; 129
    89d0:	88 0f       	add	r24, r24
    89d2:	96 95       	lsr	r25
    89d4:	87 95       	ror	r24
    89d6:	08 95       	ret

000089d8 <__unordsf2>:
    89d8:	95 de       	rcall	.-726    	; 0x8704 <__fp_cmp>
    89da:	88 0b       	sbc	r24, r24
    89dc:	99 0b       	sbc	r25, r25
    89de:	08 95       	ret
    89e0:	19 f4       	brne	.+6      	; 0x89e8 <__unordsf2+0x10>
    89e2:	0e f0       	brts	.+2      	; 0x89e6 <__unordsf2+0xe>
    89e4:	b3 ce       	rjmp	.-666    	; 0x874c <__fp_inf>
    89e6:	fc ce       	rjmp	.-520    	; 0x87e0 <__fp_zero>
    89e8:	b7 ce       	rjmp	.-658    	; 0x8758 <__fp_nan>

000089ea <exp>:
    89ea:	e0 de       	rcall	.-576    	; 0x87ac <__fp_splitA>
    89ec:	c8 f3       	brcs	.-14     	; 0x89e0 <__unordsf2+0x8>
    89ee:	96 38       	cpi	r25, 0x86	; 134
    89f0:	c0 f7       	brcc	.-16     	; 0x89e2 <__unordsf2+0xa>
    89f2:	07 f8       	bld	r0, 7
    89f4:	0f 92       	push	r0
    89f6:	e8 94       	clt
    89f8:	2b e3       	ldi	r18, 0x3B	; 59
    89fa:	3a ea       	ldi	r19, 0xAA	; 170
    89fc:	48 eb       	ldi	r20, 0xB8	; 184
    89fe:	5f e7       	ldi	r21, 0x7F	; 127
    8a00:	08 df       	rcall	.-496    	; 0x8812 <__mulsf3_pse>
    8a02:	0f 92       	push	r0
    8a04:	0f 92       	push	r0
    8a06:	0f 92       	push	r0
    8a08:	4d b7       	in	r20, 0x3d	; 61
    8a0a:	5e b7       	in	r21, 0x3e	; 62
    8a0c:	0f 92       	push	r0
    8a0e:	d5 d0       	rcall	.+426    	; 0x8bba <modf>
    8a10:	e6 ed       	ldi	r30, 0xD6	; 214
    8a12:	f2 e0       	ldi	r31, 0x02	; 2
    8a14:	2b d0       	rcall	.+86     	; 0x8a6c <__fp_powser>
    8a16:	4f 91       	pop	r20
    8a18:	5f 91       	pop	r21
    8a1a:	ef 91       	pop	r30
    8a1c:	ff 91       	pop	r31
    8a1e:	e5 95       	asr	r30
    8a20:	ee 1f       	adc	r30, r30
    8a22:	ff 1f       	adc	r31, r31
    8a24:	49 f0       	breq	.+18     	; 0x8a38 <exp+0x4e>
    8a26:	fe 57       	subi	r31, 0x7E	; 126
    8a28:	e0 68       	ori	r30, 0x80	; 128
    8a2a:	44 27       	eor	r20, r20
    8a2c:	ee 0f       	add	r30, r30
    8a2e:	44 1f       	adc	r20, r20
    8a30:	fa 95       	dec	r31
    8a32:	e1 f7       	brne	.-8      	; 0x8a2c <exp+0x42>
    8a34:	41 95       	neg	r20
    8a36:	55 0b       	sbc	r21, r21
    8a38:	47 d0       	rcall	.+142    	; 0x8ac8 <ldexp>
    8a3a:	0f 90       	pop	r0
    8a3c:	07 fe       	sbrs	r0, 7
    8a3e:	3b c0       	rjmp	.+118    	; 0x8ab6 <inverse>
    8a40:	08 95       	ret

00008a42 <__fp_mpack>:
    8a42:	9f 3f       	cpi	r25, 0xFF	; 255
    8a44:	31 f0       	breq	.+12     	; 0x8a52 <__fp_mpack_finite+0xc>

00008a46 <__fp_mpack_finite>:
    8a46:	91 50       	subi	r25, 0x01	; 1
    8a48:	20 f4       	brcc	.+8      	; 0x8a52 <__fp_mpack_finite+0xc>
    8a4a:	87 95       	ror	r24
    8a4c:	77 95       	ror	r23
    8a4e:	67 95       	ror	r22
    8a50:	b7 95       	ror	r27
    8a52:	88 0f       	add	r24, r24
    8a54:	91 1d       	adc	r25, r1
    8a56:	96 95       	lsr	r25
    8a58:	87 95       	ror	r24
    8a5a:	97 f9       	bld	r25, 7
    8a5c:	08 95       	ret

00008a5e <__fp_norm2>:
    8a5e:	91 50       	subi	r25, 0x01	; 1
    8a60:	50 40       	sbci	r21, 0x00	; 0
    8a62:	66 0f       	add	r22, r22
    8a64:	77 1f       	adc	r23, r23
    8a66:	88 1f       	adc	r24, r24
    8a68:	d2 f7       	brpl	.-12     	; 0x8a5e <__fp_norm2>
    8a6a:	08 95       	ret

00008a6c <__fp_powser>:
    8a6c:	df 93       	push	r29
    8a6e:	cf 93       	push	r28
    8a70:	1f 93       	push	r17
    8a72:	0f 93       	push	r16
    8a74:	ff 92       	push	r15
    8a76:	ef 92       	push	r14
    8a78:	df 92       	push	r13
    8a7a:	7b 01       	movw	r14, r22
    8a7c:	8c 01       	movw	r16, r24
    8a7e:	68 94       	set
    8a80:	05 c0       	rjmp	.+10     	; 0x8a8c <__fp_powser+0x20>
    8a82:	da 2e       	mov	r13, r26
    8a84:	ef 01       	movw	r28, r30
    8a86:	c3 de       	rcall	.-634    	; 0x880e <__mulsf3x>
    8a88:	fe 01       	movw	r30, r28
    8a8a:	e8 94       	clt
    8a8c:	a5 91       	lpm	r26, Z+
    8a8e:	25 91       	lpm	r18, Z+
    8a90:	35 91       	lpm	r19, Z+
    8a92:	45 91       	lpm	r20, Z+
    8a94:	55 91       	lpm	r21, Z+
    8a96:	ae f3       	brts	.-22     	; 0x8a82 <__fp_powser+0x16>
    8a98:	ef 01       	movw	r28, r30
    8a9a:	07 dd       	rcall	.-1522   	; 0x84aa <__addsf3x>
    8a9c:	fe 01       	movw	r30, r28
    8a9e:	97 01       	movw	r18, r14
    8aa0:	a8 01       	movw	r20, r16
    8aa2:	da 94       	dec	r13
    8aa4:	79 f7       	brne	.-34     	; 0x8a84 <__fp_powser+0x18>
    8aa6:	df 90       	pop	r13
    8aa8:	ef 90       	pop	r14
    8aaa:	ff 90       	pop	r15
    8aac:	0f 91       	pop	r16
    8aae:	1f 91       	pop	r17
    8ab0:	cf 91       	pop	r28
    8ab2:	df 91       	pop	r29
    8ab4:	08 95       	ret

00008ab6 <inverse>:
    8ab6:	9b 01       	movw	r18, r22
    8ab8:	ac 01       	movw	r20, r24
    8aba:	60 e0       	ldi	r22, 0x00	; 0
    8abc:	70 e0       	ldi	r23, 0x00	; 0
    8abe:	80 e8       	ldi	r24, 0x80	; 128
    8ac0:	9f e3       	ldi	r25, 0x3F	; 63
    8ac2:	4a cd       	rjmp	.-1388   	; 0x8558 <__divsf3>
    8ac4:	43 ce       	rjmp	.-890    	; 0x874c <__fp_inf>
    8ac6:	bd cf       	rjmp	.-134    	; 0x8a42 <__fp_mpack>

00008ac8 <ldexp>:
    8ac8:	71 de       	rcall	.-798    	; 0x87ac <__fp_splitA>
    8aca:	e8 f3       	brcs	.-6      	; 0x8ac6 <inverse+0x10>
    8acc:	99 23       	and	r25, r25
    8ace:	d9 f3       	breq	.-10     	; 0x8ac6 <inverse+0x10>
    8ad0:	94 0f       	add	r25, r20
    8ad2:	51 1d       	adc	r21, r1
    8ad4:	bb f3       	brvs	.-18     	; 0x8ac4 <inverse+0xe>
    8ad6:	91 50       	subi	r25, 0x01	; 1
    8ad8:	50 40       	sbci	r21, 0x00	; 0
    8ada:	94 f0       	brlt	.+36     	; 0x8b00 <ldexp+0x38>
    8adc:	59 f0       	breq	.+22     	; 0x8af4 <ldexp+0x2c>
    8ade:	88 23       	and	r24, r24
    8ae0:	32 f0       	brmi	.+12     	; 0x8aee <ldexp+0x26>
    8ae2:	66 0f       	add	r22, r22
    8ae4:	77 1f       	adc	r23, r23
    8ae6:	88 1f       	adc	r24, r24
    8ae8:	91 50       	subi	r25, 0x01	; 1
    8aea:	50 40       	sbci	r21, 0x00	; 0
    8aec:	c1 f7       	brne	.-16     	; 0x8ade <ldexp+0x16>
    8aee:	9e 3f       	cpi	r25, 0xFE	; 254
    8af0:	51 05       	cpc	r21, r1
    8af2:	44 f7       	brge	.-48     	; 0x8ac4 <inverse+0xe>
    8af4:	88 0f       	add	r24, r24
    8af6:	91 1d       	adc	r25, r1
    8af8:	96 95       	lsr	r25
    8afa:	87 95       	ror	r24
    8afc:	97 f9       	bld	r25, 7
    8afe:	08 95       	ret
    8b00:	5f 3f       	cpi	r21, 0xFF	; 255
    8b02:	ac f0       	brlt	.+42     	; 0x8b2e <ldexp+0x66>
    8b04:	98 3e       	cpi	r25, 0xE8	; 232
    8b06:	9c f0       	brlt	.+38     	; 0x8b2e <ldexp+0x66>
    8b08:	bb 27       	eor	r27, r27
    8b0a:	86 95       	lsr	r24
    8b0c:	77 95       	ror	r23
    8b0e:	67 95       	ror	r22
    8b10:	b7 95       	ror	r27
    8b12:	08 f4       	brcc	.+2      	; 0x8b16 <ldexp+0x4e>
    8b14:	b1 60       	ori	r27, 0x01	; 1
    8b16:	93 95       	inc	r25
    8b18:	c1 f7       	brne	.-16     	; 0x8b0a <ldexp+0x42>
    8b1a:	bb 0f       	add	r27, r27
    8b1c:	58 f7       	brcc	.-42     	; 0x8af4 <ldexp+0x2c>
    8b1e:	11 f4       	brne	.+4      	; 0x8b24 <ldexp+0x5c>
    8b20:	60 ff       	sbrs	r22, 0
    8b22:	e8 cf       	rjmp	.-48     	; 0x8af4 <ldexp+0x2c>
    8b24:	6f 5f       	subi	r22, 0xFF	; 255
    8b26:	7f 4f       	sbci	r23, 0xFF	; 255
    8b28:	8f 4f       	sbci	r24, 0xFF	; 255
    8b2a:	9f 4f       	sbci	r25, 0xFF	; 255
    8b2c:	e3 cf       	rjmp	.-58     	; 0x8af4 <ldexp+0x2c>
    8b2e:	59 ce       	rjmp	.-846    	; 0x87e2 <__fp_szero>
    8b30:	0e f0       	brts	.+2      	; 0x8b34 <ldexp+0x6c>
    8b32:	87 cf       	rjmp	.-242    	; 0x8a42 <__fp_mpack>
    8b34:	11 ce       	rjmp	.-990    	; 0x8758 <__fp_nan>
    8b36:	68 94       	set
    8b38:	09 ce       	rjmp	.-1006   	; 0x874c <__fp_inf>

00008b3a <log>:
    8b3a:	38 de       	rcall	.-912    	; 0x87ac <__fp_splitA>
    8b3c:	c8 f3       	brcs	.-14     	; 0x8b30 <ldexp+0x68>
    8b3e:	99 23       	and	r25, r25
    8b40:	d1 f3       	breq	.-12     	; 0x8b36 <ldexp+0x6e>
    8b42:	c6 f3       	brts	.-16     	; 0x8b34 <ldexp+0x6c>
    8b44:	df 93       	push	r29
    8b46:	cf 93       	push	r28
    8b48:	1f 93       	push	r17
    8b4a:	0f 93       	push	r16
    8b4c:	ff 92       	push	r15
    8b4e:	c9 2f       	mov	r28, r25
    8b50:	dd 27       	eor	r29, r29
    8b52:	88 23       	and	r24, r24
    8b54:	2a f0       	brmi	.+10     	; 0x8b60 <log+0x26>
    8b56:	21 97       	sbiw	r28, 0x01	; 1
    8b58:	66 0f       	add	r22, r22
    8b5a:	77 1f       	adc	r23, r23
    8b5c:	88 1f       	adc	r24, r24
    8b5e:	da f7       	brpl	.-10     	; 0x8b56 <log+0x1c>
    8b60:	20 e0       	ldi	r18, 0x00	; 0
    8b62:	30 e0       	ldi	r19, 0x00	; 0
    8b64:	40 e8       	ldi	r20, 0x80	; 128
    8b66:	5f eb       	ldi	r21, 0xBF	; 191
    8b68:	9f e3       	ldi	r25, 0x3F	; 63
    8b6a:	88 39       	cpi	r24, 0x98	; 152
    8b6c:	20 f0       	brcs	.+8      	; 0x8b76 <log+0x3c>
    8b6e:	80 3e       	cpi	r24, 0xE0	; 224
    8b70:	30 f0       	brcs	.+12     	; 0x8b7e <log+0x44>
    8b72:	21 96       	adiw	r28, 0x01	; 1
    8b74:	8f 77       	andi	r24, 0x7F	; 127
    8b76:	88 dc       	rcall	.-1776   	; 0x8488 <__addsf3>
    8b78:	ee ef       	ldi	r30, 0xFE	; 254
    8b7a:	f2 e0       	ldi	r31, 0x02	; 2
    8b7c:	03 c0       	rjmp	.+6      	; 0x8b84 <log+0x4a>
    8b7e:	84 dc       	rcall	.-1784   	; 0x8488 <__addsf3>
    8b80:	eb e2       	ldi	r30, 0x2B	; 43
    8b82:	f3 e0       	ldi	r31, 0x03	; 3
    8b84:	73 df       	rcall	.-282    	; 0x8a6c <__fp_powser>
    8b86:	8b 01       	movw	r16, r22
    8b88:	be 01       	movw	r22, r28
    8b8a:	ec 01       	movw	r28, r24
    8b8c:	fb 2e       	mov	r15, r27
    8b8e:	6f 57       	subi	r22, 0x7F	; 127
    8b90:	71 09       	sbc	r23, r1
    8b92:	75 95       	asr	r23
    8b94:	77 1f       	adc	r23, r23
    8b96:	88 0b       	sbc	r24, r24
    8b98:	99 0b       	sbc	r25, r25
    8b9a:	79 dd       	rcall	.-1294   	; 0x868e <__floatsisf>
    8b9c:	28 e1       	ldi	r18, 0x18	; 24
    8b9e:	32 e7       	ldi	r19, 0x72	; 114
    8ba0:	41 e3       	ldi	r20, 0x31	; 49
    8ba2:	5f e3       	ldi	r21, 0x3F	; 63
    8ba4:	34 de       	rcall	.-920    	; 0x880e <__mulsf3x>
    8ba6:	af 2d       	mov	r26, r15
    8ba8:	98 01       	movw	r18, r16
    8baa:	ae 01       	movw	r20, r28
    8bac:	ff 90       	pop	r15
    8bae:	0f 91       	pop	r16
    8bb0:	1f 91       	pop	r17
    8bb2:	cf 91       	pop	r28
    8bb4:	df 91       	pop	r29
    8bb6:	79 dc       	rcall	.-1806   	; 0x84aa <__addsf3x>
    8bb8:	e0 cd       	rjmp	.-1088   	; 0x877a <__fp_round>

00008bba <modf>:
    8bba:	fa 01       	movw	r30, r20
    8bbc:	dc 01       	movw	r26, r24
    8bbe:	aa 0f       	add	r26, r26
    8bc0:	bb 1f       	adc	r27, r27
    8bc2:	9b 01       	movw	r18, r22
    8bc4:	ac 01       	movw	r20, r24
    8bc6:	bf 57       	subi	r27, 0x7F	; 127
    8bc8:	28 f4       	brcc	.+10     	; 0x8bd4 <modf+0x1a>
    8bca:	22 27       	eor	r18, r18
    8bcc:	33 27       	eor	r19, r19
    8bce:	44 27       	eor	r20, r20
    8bd0:	50 78       	andi	r21, 0x80	; 128
    8bd2:	1f c0       	rjmp	.+62     	; 0x8c12 <modf+0x58>
    8bd4:	b7 51       	subi	r27, 0x17	; 23
    8bd6:	88 f4       	brcc	.+34     	; 0x8bfa <modf+0x40>
    8bd8:	ab 2f       	mov	r26, r27
    8bda:	00 24       	eor	r0, r0
    8bdc:	46 95       	lsr	r20
    8bde:	37 95       	ror	r19
    8be0:	27 95       	ror	r18
    8be2:	01 1c       	adc	r0, r1
    8be4:	a3 95       	inc	r26
    8be6:	d2 f3       	brmi	.-12     	; 0x8bdc <modf+0x22>
    8be8:	00 20       	and	r0, r0
    8bea:	69 f0       	breq	.+26     	; 0x8c06 <modf+0x4c>
    8bec:	22 0f       	add	r18, r18
    8bee:	33 1f       	adc	r19, r19
    8bf0:	44 1f       	adc	r20, r20
    8bf2:	b3 95       	inc	r27
    8bf4:	da f3       	brmi	.-10     	; 0x8bec <modf+0x32>
    8bf6:	0d d0       	rcall	.+26     	; 0x8c12 <modf+0x58>
    8bf8:	46 cc       	rjmp	.-1908   	; 0x8486 <__subsf3>
    8bfa:	61 30       	cpi	r22, 0x01	; 1
    8bfc:	71 05       	cpc	r23, r1
    8bfe:	a0 e8       	ldi	r26, 0x80	; 128
    8c00:	8a 07       	cpc	r24, r26
    8c02:	b9 46       	sbci	r27, 0x69	; 105
    8c04:	30 f4       	brcc	.+12     	; 0x8c12 <modf+0x58>
    8c06:	9b 01       	movw	r18, r22
    8c08:	ac 01       	movw	r20, r24
    8c0a:	66 27       	eor	r22, r22
    8c0c:	77 27       	eor	r23, r23
    8c0e:	88 27       	eor	r24, r24
    8c10:	90 78       	andi	r25, 0x80	; 128
    8c12:	30 96       	adiw	r30, 0x00	; 0
    8c14:	21 f0       	breq	.+8      	; 0x8c1e <modf+0x64>
    8c16:	20 83       	st	Z, r18
    8c18:	31 83       	std	Z+1, r19	; 0x01
    8c1a:	42 83       	std	Z+2, r20	; 0x02
    8c1c:	53 83       	std	Z+3, r21	; 0x03
    8c1e:	08 95       	ret

00008c20 <__cxa_pure_virtual>:
    8c20:	0e 94 7d 4e 	call	0x9cfa	; 0x9cfa <abort>

00008c24 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    8c24:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    8c26:	91 8d       	ldd	r25, Z+25	; 0x19
    8c28:	22 8d       	ldd	r18, Z+26	; 0x1a
    8c2a:	89 2f       	mov	r24, r25
    8c2c:	90 e0       	ldi	r25, 0x00	; 0
    8c2e:	80 5c       	subi	r24, 0xC0	; 192
    8c30:	9f 4f       	sbci	r25, 0xFF	; 255
    8c32:	82 1b       	sub	r24, r18
    8c34:	91 09       	sbc	r25, r1
}
    8c36:	8f 73       	andi	r24, 0x3F	; 63
    8c38:	99 27       	eor	r25, r25
    8c3a:	08 95       	ret

00008c3c <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    8c3c:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    8c3e:	91 8d       	ldd	r25, Z+25	; 0x19
    8c40:	82 8d       	ldd	r24, Z+26	; 0x1a
    8c42:	98 17       	cp	r25, r24
    8c44:	31 f0       	breq	.+12     	; 0x8c52 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    8c46:	82 8d       	ldd	r24, Z+26	; 0x1a
    8c48:	e8 0f       	add	r30, r24
    8c4a:	f1 1d       	adc	r31, r1
    8c4c:	85 8d       	ldd	r24, Z+29	; 0x1d
    8c4e:	90 e0       	ldi	r25, 0x00	; 0
    8c50:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    8c52:	8f ef       	ldi	r24, 0xFF	; 255
    8c54:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    8c56:	08 95       	ret

00008c58 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    8c58:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    8c5a:	91 8d       	ldd	r25, Z+25	; 0x19
    8c5c:	82 8d       	ldd	r24, Z+26	; 0x1a
    8c5e:	98 17       	cp	r25, r24
    8c60:	61 f0       	breq	.+24     	; 0x8c7a <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    8c62:	82 8d       	ldd	r24, Z+26	; 0x1a
    8c64:	df 01       	movw	r26, r30
    8c66:	a8 0f       	add	r26, r24
    8c68:	b1 1d       	adc	r27, r1
    8c6a:	5d 96       	adiw	r26, 0x1d	; 29
    8c6c:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    8c6e:	92 8d       	ldd	r25, Z+26	; 0x1a
    8c70:	9f 5f       	subi	r25, 0xFF	; 255
    8c72:	9f 73       	andi	r25, 0x3F	; 63
    8c74:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    8c76:	90 e0       	ldi	r25, 0x00	; 0
    8c78:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    8c7a:	8f ef       	ldi	r24, 0xFF	; 255
    8c7c:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    8c7e:	08 95       	ret

00008c80 <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    8c80:	fc 01       	movw	r30, r24
    8c82:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    8c84:	44 8d       	ldd	r20, Z+28	; 0x1c
    8c86:	25 2f       	mov	r18, r21
    8c88:	30 e0       	ldi	r19, 0x00	; 0
    8c8a:	84 2f       	mov	r24, r20
    8c8c:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    8c8e:	82 1b       	sub	r24, r18
    8c90:	93 0b       	sbc	r25, r19
    8c92:	54 17       	cp	r21, r20
    8c94:	10 f0       	brcs	.+4      	; 0x8c9a <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    8c96:	cf 96       	adiw	r24, 0x3f	; 63
    8c98:	08 95       	ret
  return tail - head - 1;
    8c9a:	01 97       	sbiw	r24, 0x01	; 1
}
    8c9c:	08 95       	ret

00008c9e <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8c9e:	8c ed       	ldi	r24, 0xDC	; 220
    8ca0:	97 e4       	ldi	r25, 0x47	; 71
    8ca2:	89 2b       	or	r24, r25
    8ca4:	39 f0       	breq	.+14     	; 0x8cb4 <_Z14serialEventRunv+0x16>
    8ca6:	80 e0       	ldi	r24, 0x00	; 0
    8ca8:	90 e0       	ldi	r25, 0x00	; 0
    8caa:	89 2b       	or	r24, r25
    8cac:	19 f0       	breq	.+6      	; 0x8cb4 <_Z14serialEventRunv+0x16>
    8cae:	84 d1       	rcall	.+776    	; 0x8fb8 <_Z17Serial0_availablev>
    8cb0:	81 11       	cpse	r24, r1
    8cb2:	25 c0       	rjmp	.+74     	; 0x8cfe <_Z14serialEventRunv+0x60>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8cb4:	80 e0       	ldi	r24, 0x00	; 0
    8cb6:	90 e0       	ldi	r25, 0x00	; 0
    8cb8:	89 2b       	or	r24, r25
    8cba:	41 f0       	breq	.+16     	; 0x8ccc <_Z14serialEventRunv+0x2e>
    8cbc:	80 e0       	ldi	r24, 0x00	; 0
    8cbe:	90 e0       	ldi	r25, 0x00	; 0
    8cc0:	89 2b       	or	r24, r25
    8cc2:	21 f0       	breq	.+8      	; 0x8ccc <_Z14serialEventRunv+0x2e>
    8cc4:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8cc8:	81 11       	cpse	r24, r1
    8cca:	1c c0       	rjmp	.+56     	; 0x8d04 <_Z14serialEventRunv+0x66>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8ccc:	80 e0       	ldi	r24, 0x00	; 0
    8cce:	90 e0       	ldi	r25, 0x00	; 0
    8cd0:	89 2b       	or	r24, r25
    8cd2:	41 f0       	breq	.+16     	; 0x8ce4 <_Z14serialEventRunv+0x46>
    8cd4:	80 e0       	ldi	r24, 0x00	; 0
    8cd6:	90 e0       	ldi	r25, 0x00	; 0
    8cd8:	89 2b       	or	r24, r25
    8cda:	21 f0       	breq	.+8      	; 0x8ce4 <_Z14serialEventRunv+0x46>
    8cdc:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8ce0:	81 11       	cpse	r24, r1
    8ce2:	13 c0       	rjmp	.+38     	; 0x8d0a <_Z14serialEventRunv+0x6c>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8ce4:	80 e0       	ldi	r24, 0x00	; 0
    8ce6:	90 e0       	ldi	r25, 0x00	; 0
    8ce8:	89 2b       	or	r24, r25
    8cea:	a1 f0       	breq	.+40     	; 0x8d14 <_Z14serialEventRunv+0x76>
    8cec:	80 e0       	ldi	r24, 0x00	; 0
    8cee:	90 e0       	ldi	r25, 0x00	; 0
    8cf0:	89 2b       	or	r24, r25
    8cf2:	81 f0       	breq	.+32     	; 0x8d14 <_Z14serialEventRunv+0x76>
    8cf4:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8cf8:	81 11       	cpse	r24, r1
    8cfa:	0a c0       	rjmp	.+20     	; 0x8d10 <_Z14serialEventRunv+0x72>
    8cfc:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8cfe:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8d02:	d8 cf       	rjmp	.-80     	; 0x8cb4 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8d04:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8d08:	e1 cf       	rjmp	.-62     	; 0x8ccc <_Z14serialEventRunv+0x2e>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8d0a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8d0e:	ea cf       	rjmp	.-44     	; 0x8ce4 <_Z14serialEventRunv+0x46>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8d10:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    8d14:	08 95       	ret

00008d16 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    8d16:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    8d18:	84 8d       	ldd	r24, Z+28	; 0x1c
    8d1a:	df 01       	movw	r26, r30
    8d1c:	a8 0f       	add	r26, r24
    8d1e:	b1 1d       	adc	r27, r1
    8d20:	a3 5a       	subi	r26, 0xA3	; 163
    8d22:	bf 4f       	sbci	r27, 0xFF	; 255
    8d24:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    8d26:	84 8d       	ldd	r24, Z+28	; 0x1c
    8d28:	90 e0       	ldi	r25, 0x00	; 0
    8d2a:	01 96       	adiw	r24, 0x01	; 1
    8d2c:	8f 73       	andi	r24, 0x3F	; 63
    8d2e:	99 27       	eor	r25, r25
    8d30:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    8d32:	a6 89       	ldd	r26, Z+22	; 0x16
    8d34:	b7 89       	ldd	r27, Z+23	; 0x17
    8d36:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    8d38:	a0 89       	ldd	r26, Z+16	; 0x10
    8d3a:	b1 89       	ldd	r27, Z+17	; 0x11
    8d3c:	8c 91       	ld	r24, X
    8d3e:	83 70       	andi	r24, 0x03	; 3
    8d40:	80 64       	ori	r24, 0x40	; 64
    8d42:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    8d44:	93 8d       	ldd	r25, Z+27	; 0x1b
    8d46:	84 8d       	ldd	r24, Z+28	; 0x1c
    8d48:	98 13       	cpse	r25, r24
    8d4a:	06 c0       	rjmp	.+12     	; 0x8d58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    8d4c:	02 88       	ldd	r0, Z+18	; 0x12
    8d4e:	f3 89       	ldd	r31, Z+19	; 0x13
    8d50:	e0 2d       	mov	r30, r0
    8d52:	80 81       	ld	r24, Z
    8d54:	8f 7d       	andi	r24, 0xDF	; 223
    8d56:	80 83       	st	Z, r24
    8d58:	08 95       	ret

00008d5a <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    8d5a:	ef 92       	push	r14
    8d5c:	ff 92       	push	r15
    8d5e:	0f 93       	push	r16
    8d60:	1f 93       	push	r17
    8d62:	cf 93       	push	r28
    8d64:	df 93       	push	r29
    8d66:	ec 01       	movw	r28, r24
  _written = true;
    8d68:	81 e0       	ldi	r24, 0x01	; 1
    8d6a:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    8d6c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8d6e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8d70:	98 13       	cpse	r25, r24
    8d72:	05 c0       	rjmp	.+10     	; 0x8d7e <_ZN14HardwareSerial5writeEh+0x24>
    8d74:	e8 89       	ldd	r30, Y+16	; 0x10
    8d76:	f9 89       	ldd	r31, Y+17	; 0x11
    8d78:	80 81       	ld	r24, Z
    8d7a:	85 fd       	sbrc	r24, 5
    8d7c:	25 c0       	rjmp	.+74     	; 0x8dc8 <_ZN14HardwareSerial5writeEh+0x6e>
    8d7e:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    8d80:	0b 8d       	ldd	r16, Y+27	; 0x1b
    8d82:	10 e0       	ldi	r17, 0x00	; 0
    8d84:	0f 5f       	subi	r16, 0xFF	; 255
    8d86:	1f 4f       	sbci	r17, 0xFF	; 255
    8d88:	0f 73       	andi	r16, 0x3F	; 63
    8d8a:	11 27       	eor	r17, r17
    8d8c:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    8d8e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8d90:	e8 12       	cpse	r14, r24
    8d92:	0b c0       	rjmp	.+22     	; 0x8daa <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    8d94:	0f b6       	in	r0, 0x3f	; 63
    8d96:	07 fc       	sbrc	r0, 7
    8d98:	fa cf       	rjmp	.-12     	; 0x8d8e <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    8d9a:	e8 89       	ldd	r30, Y+16	; 0x10
    8d9c:	f9 89       	ldd	r31, Y+17	; 0x11
    8d9e:	80 81       	ld	r24, Z
    8da0:	85 ff       	sbrs	r24, 5
    8da2:	f5 cf       	rjmp	.-22     	; 0x8d8e <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    8da4:	ce 01       	movw	r24, r28
    8da6:	b7 df       	rcall	.-146    	; 0x8d16 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8da8:	f2 cf       	rjmp	.-28     	; 0x8d8e <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    8daa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8dac:	fe 01       	movw	r30, r28
    8dae:	e8 0f       	add	r30, r24
    8db0:	f1 1d       	adc	r31, r1
    8db2:	e3 5a       	subi	r30, 0xA3	; 163
    8db4:	ff 4f       	sbci	r31, 0xFF	; 255
    8db6:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    8db8:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    8dba:	f8 94       	cli
    _tx_buffer_head = i;
    8dbc:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    8dbe:	ea 89       	ldd	r30, Y+18	; 0x12
    8dc0:	fb 89       	ldd	r31, Y+19	; 0x13
    8dc2:	80 81       	ld	r24, Z
    8dc4:	80 62       	ori	r24, 0x20	; 32
    8dc6:	0a c0       	rjmp	.+20     	; 0x8ddc <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    8dc8:	9f b7       	in	r25, 0x3f	; 63
    8dca:	f8 94       	cli
      *_udr = c;
    8dcc:	ee 89       	ldd	r30, Y+22	; 0x16
    8dce:	ff 89       	ldd	r31, Y+23	; 0x17
    8dd0:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    8dd2:	e8 89       	ldd	r30, Y+16	; 0x10
    8dd4:	f9 89       	ldd	r31, Y+17	; 0x11
    8dd6:	80 81       	ld	r24, Z
    8dd8:	83 70       	andi	r24, 0x03	; 3
    8dda:	80 64       	ori	r24, 0x40	; 64
    8ddc:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    8dde:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    8de0:	81 e0       	ldi	r24, 0x01	; 1
    8de2:	90 e0       	ldi	r25, 0x00	; 0
    8de4:	df 91       	pop	r29
    8de6:	cf 91       	pop	r28
    8de8:	1f 91       	pop	r17
    8dea:	0f 91       	pop	r16
    8dec:	ff 90       	pop	r15
    8dee:	ef 90       	pop	r14
    8df0:	08 95       	ret

00008df2 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    8df2:	cf 93       	push	r28
    8df4:	df 93       	push	r29
    8df6:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    8df8:	88 8d       	ldd	r24, Y+24	; 0x18
    8dfa:	88 23       	and	r24, r24
    8dfc:	c1 f0       	breq	.+48     	; 0x8e2e <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    8dfe:	ea 89       	ldd	r30, Y+18	; 0x12
    8e00:	fb 89       	ldd	r31, Y+19	; 0x13
    8e02:	80 81       	ld	r24, Z
    8e04:	85 fd       	sbrc	r24, 5
    8e06:	05 c0       	rjmp	.+10     	; 0x8e12 <_ZN14HardwareSerial5flushEv+0x20>
    8e08:	a8 89       	ldd	r26, Y+16	; 0x10
    8e0a:	b9 89       	ldd	r27, Y+17	; 0x11
    8e0c:	8c 91       	ld	r24, X
    8e0e:	86 fd       	sbrc	r24, 6
    8e10:	0e c0       	rjmp	.+28     	; 0x8e2e <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    8e12:	0f b6       	in	r0, 0x3f	; 63
    8e14:	07 fc       	sbrc	r0, 7
    8e16:	f5 cf       	rjmp	.-22     	; 0x8e02 <_ZN14HardwareSerial5flushEv+0x10>
    8e18:	80 81       	ld	r24, Z
    8e1a:	85 ff       	sbrs	r24, 5
    8e1c:	f2 cf       	rjmp	.-28     	; 0x8e02 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    8e1e:	a8 89       	ldd	r26, Y+16	; 0x10
    8e20:	b9 89       	ldd	r27, Y+17	; 0x11
    8e22:	8c 91       	ld	r24, X
    8e24:	85 ff       	sbrs	r24, 5
    8e26:	ed cf       	rjmp	.-38     	; 0x8e02 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    8e28:	ce 01       	movw	r24, r28
    8e2a:	75 df       	rcall	.-278    	; 0x8d16 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8e2c:	e8 cf       	rjmp	.-48     	; 0x8dfe <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    8e2e:	df 91       	pop	r29
    8e30:	cf 91       	pop	r28
    8e32:	08 95       	ret

00008e34 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    8e34:	cf 92       	push	r12
    8e36:	df 92       	push	r13
    8e38:	ef 92       	push	r14
    8e3a:	ff 92       	push	r15
    8e3c:	1f 93       	push	r17
    8e3e:	cf 93       	push	r28
    8e40:	df 93       	push	r29
    8e42:	ec 01       	movw	r28, r24
    8e44:	6a 01       	movw	r12, r20
    8e46:	7b 01       	movw	r14, r22
    8e48:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    8e4a:	e8 89       	ldd	r30, Y+16	; 0x10
    8e4c:	f9 89       	ldd	r31, Y+17	; 0x11
    8e4e:	82 e0       	ldi	r24, 0x02	; 2
    8e50:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    8e52:	41 15       	cp	r20, r1
    8e54:	51 4e       	sbci	r21, 0xE1	; 225
    8e56:	61 05       	cpc	r22, r1
    8e58:	71 05       	cpc	r23, r1
    8e5a:	a9 f0       	breq	.+42     	; 0x8e86 <_ZN14HardwareSerial5beginEmh+0x52>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    8e5c:	60 e0       	ldi	r22, 0x00	; 0
    8e5e:	79 e0       	ldi	r23, 0x09	; 9
    8e60:	8d e3       	ldi	r24, 0x3D	; 61
    8e62:	90 e0       	ldi	r25, 0x00	; 0
    8e64:	a7 01       	movw	r20, r14
    8e66:	96 01       	movw	r18, r12
    8e68:	04 d5       	rcall	.+2568   	; 0x9872 <__udivmodsi4>
    8e6a:	da 01       	movw	r26, r20
    8e6c:	c9 01       	movw	r24, r18
    8e6e:	01 97       	sbiw	r24, 0x01	; 1
    8e70:	a1 09       	sbc	r26, r1
    8e72:	b1 09       	sbc	r27, r1
    8e74:	b6 95       	lsr	r27
    8e76:	a7 95       	ror	r26
    8e78:	97 95       	ror	r25
    8e7a:	87 95       	ror	r24
    8e7c:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    8e7e:	21 15       	cp	r18, r1
    8e80:	80 e1       	ldi	r24, 0x10	; 16
    8e82:	38 07       	cpc	r19, r24
    8e84:	a0 f0       	brcs	.+40     	; 0x8eae <_ZN14HardwareSerial5beginEmh+0x7a>
  {
    *_ucsra = 0;
    8e86:	e8 89       	ldd	r30, Y+16	; 0x10
    8e88:	f9 89       	ldd	r31, Y+17	; 0x11
    8e8a:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    8e8c:	60 e8       	ldi	r22, 0x80	; 128
    8e8e:	74 e8       	ldi	r23, 0x84	; 132
    8e90:	8e e1       	ldi	r24, 0x1E	; 30
    8e92:	90 e0       	ldi	r25, 0x00	; 0
    8e94:	a7 01       	movw	r20, r14
    8e96:	96 01       	movw	r18, r12
    8e98:	ec d4       	rcall	.+2520   	; 0x9872 <__udivmodsi4>
    8e9a:	da 01       	movw	r26, r20
    8e9c:	c9 01       	movw	r24, r18
    8e9e:	01 97       	sbiw	r24, 0x01	; 1
    8ea0:	a1 09       	sbc	r26, r1
    8ea2:	b1 09       	sbc	r27, r1
    8ea4:	b6 95       	lsr	r27
    8ea6:	a7 95       	ror	r26
    8ea8:	97 95       	ror	r25
    8eaa:	87 95       	ror	r24
    8eac:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    8eae:	ec 85       	ldd	r30, Y+12	; 0x0c
    8eb0:	fd 85       	ldd	r31, Y+13	; 0x0d
    8eb2:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    8eb4:	ee 85       	ldd	r30, Y+14	; 0x0e
    8eb6:	ff 85       	ldd	r31, Y+15	; 0x0f
    8eb8:	20 83       	st	Z, r18

  _written = false;
    8eba:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    8ebc:	ec 89       	ldd	r30, Y+20	; 0x14
    8ebe:	fd 89       	ldd	r31, Y+21	; 0x15
    8ec0:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    8ec2:	ea 89       	ldd	r30, Y+18	; 0x12
    8ec4:	fb 89       	ldd	r31, Y+19	; 0x13
    8ec6:	80 81       	ld	r24, Z
    8ec8:	80 61       	ori	r24, 0x10	; 16
    8eca:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    8ecc:	ea 89       	ldd	r30, Y+18	; 0x12
    8ece:	fb 89       	ldd	r31, Y+19	; 0x13
    8ed0:	80 81       	ld	r24, Z
    8ed2:	88 60       	ori	r24, 0x08	; 8
    8ed4:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    8ed6:	ea 89       	ldd	r30, Y+18	; 0x12
    8ed8:	fb 89       	ldd	r31, Y+19	; 0x13
    8eda:	80 81       	ld	r24, Z
    8edc:	80 68       	ori	r24, 0x80	; 128
    8ede:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    8ee0:	ea 89       	ldd	r30, Y+18	; 0x12
    8ee2:	fb 89       	ldd	r31, Y+19	; 0x13
    8ee4:	80 81       	ld	r24, Z
    8ee6:	8f 7d       	andi	r24, 0xDF	; 223
    8ee8:	80 83       	st	Z, r24
}
    8eea:	df 91       	pop	r29
    8eec:	cf 91       	pop	r28
    8eee:	1f 91       	pop	r17
    8ef0:	ff 90       	pop	r15
    8ef2:	ef 90       	pop	r14
    8ef4:	df 90       	pop	r13
    8ef6:	cf 90       	pop	r12
    8ef8:	08 95       	ret

00008efa <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    8efa:	1f 92       	push	r1
    8efc:	0f 92       	push	r0
    8efe:	0f b6       	in	r0, 0x3f	; 63
    8f00:	0f 92       	push	r0
    8f02:	11 24       	eor	r1, r1
    8f04:	0b b6       	in	r0, 0x3b	; 59
    8f06:	0f 92       	push	r0
    8f08:	2f 93       	push	r18
    8f0a:	8f 93       	push	r24
    8f0c:	9f 93       	push	r25
    8f0e:	ef 93       	push	r30
    8f10:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    8f12:	e0 91 9c 04 	lds	r30, 0x049C	; 0x80049c <Serial+0x10>
    8f16:	f0 91 9d 04 	lds	r31, 0x049D	; 0x80049d <Serial+0x11>
    8f1a:	80 81       	ld	r24, Z
    8f1c:	e0 91 a2 04 	lds	r30, 0x04A2	; 0x8004a2 <Serial+0x16>
    8f20:	f0 91 a3 04 	lds	r31, 0x04A3	; 0x8004a3 <Serial+0x17>
    8f24:	82 fd       	sbrc	r24, 2
    8f26:	12 c0       	rjmp	.+36     	; 0x8f4c <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    8f28:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    8f2a:	80 91 a5 04 	lds	r24, 0x04A5	; 0x8004a5 <Serial+0x19>
    8f2e:	8f 5f       	subi	r24, 0xFF	; 255
    8f30:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    8f32:	20 91 a6 04 	lds	r18, 0x04A6	; 0x8004a6 <Serial+0x1a>
    8f36:	82 17       	cp	r24, r18
    8f38:	51 f0       	breq	.+20     	; 0x8f4e <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    8f3a:	e0 91 a5 04 	lds	r30, 0x04A5	; 0x8004a5 <Serial+0x19>
    8f3e:	f0 e0       	ldi	r31, 0x00	; 0
    8f40:	e4 57       	subi	r30, 0x74	; 116
    8f42:	fb 4f       	sbci	r31, 0xFB	; 251
    8f44:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    8f46:	80 93 a5 04 	sts	0x04A5, r24	; 0x8004a5 <Serial+0x19>
    8f4a:	01 c0       	rjmp	.+2      	; 0x8f4e <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    8f4c:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    8f4e:	ff 91       	pop	r31
    8f50:	ef 91       	pop	r30
    8f52:	9f 91       	pop	r25
    8f54:	8f 91       	pop	r24
    8f56:	2f 91       	pop	r18
    8f58:	0f 90       	pop	r0
    8f5a:	0b be       	out	0x3b, r0	; 59
    8f5c:	0f 90       	pop	r0
    8f5e:	0f be       	out	0x3f, r0	; 63
    8f60:	0f 90       	pop	r0
    8f62:	1f 90       	pop	r1
    8f64:	18 95       	reti

00008f66 <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    8f66:	1f 92       	push	r1
    8f68:	0f 92       	push	r0
    8f6a:	0f b6       	in	r0, 0x3f	; 63
    8f6c:	0f 92       	push	r0
    8f6e:	11 24       	eor	r1, r1
    8f70:	0b b6       	in	r0, 0x3b	; 59
    8f72:	0f 92       	push	r0
    8f74:	2f 93       	push	r18
    8f76:	3f 93       	push	r19
    8f78:	4f 93       	push	r20
    8f7a:	5f 93       	push	r21
    8f7c:	6f 93       	push	r22
    8f7e:	7f 93       	push	r23
    8f80:	8f 93       	push	r24
    8f82:	9f 93       	push	r25
    8f84:	af 93       	push	r26
    8f86:	bf 93       	push	r27
    8f88:	ef 93       	push	r30
    8f8a:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    8f8c:	8c e8       	ldi	r24, 0x8C	; 140
    8f8e:	94 e0       	ldi	r25, 0x04	; 4
    8f90:	c2 de       	rcall	.-636    	; 0x8d16 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    8f92:	ff 91       	pop	r31
    8f94:	ef 91       	pop	r30
    8f96:	bf 91       	pop	r27
    8f98:	af 91       	pop	r26
    8f9a:	9f 91       	pop	r25
    8f9c:	8f 91       	pop	r24
    8f9e:	7f 91       	pop	r23
    8fa0:	6f 91       	pop	r22
    8fa2:	5f 91       	pop	r21
    8fa4:	4f 91       	pop	r20
    8fa6:	3f 91       	pop	r19
    8fa8:	2f 91       	pop	r18
    8faa:	0f 90       	pop	r0
    8fac:	0b be       	out	0x3b, r0	; 59
    8fae:	0f 90       	pop	r0
    8fb0:	0f be       	out	0x3f, r0	; 63
    8fb2:	0f 90       	pop	r0
    8fb4:	1f 90       	pop	r1
    8fb6:	18 95       	reti

00008fb8 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    8fb8:	8c e8       	ldi	r24, 0x8C	; 140
    8fba:	94 e0       	ldi	r25, 0x04	; 4
    8fbc:	33 de       	rcall	.-922    	; 0x8c24 <_ZN14HardwareSerial9availableEv>
    8fbe:	21 e0       	ldi	r18, 0x01	; 1
    8fc0:	89 2b       	or	r24, r25
    8fc2:	09 f4       	brne	.+2      	; 0x8fc6 <_Z17Serial0_availablev+0xe>
    8fc4:	20 e0       	ldi	r18, 0x00	; 0
}
    8fc6:	82 2f       	mov	r24, r18
    8fc8:	08 95       	ret

00008fca <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    8fca:	ec e8       	ldi	r30, 0x8C	; 140
    8fcc:	f4 e0       	ldi	r31, 0x04	; 4
    8fce:	13 82       	std	Z+3, r1	; 0x03
    8fd0:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    8fd2:	88 ee       	ldi	r24, 0xE8	; 232
    8fd4:	93 e0       	ldi	r25, 0x03	; 3
    8fd6:	a0 e0       	ldi	r26, 0x00	; 0
    8fd8:	b0 e0       	ldi	r27, 0x00	; 0
    8fda:	84 83       	std	Z+4, r24	; 0x04
    8fdc:	95 83       	std	Z+5, r25	; 0x05
    8fde:	a6 83       	std	Z+6, r26	; 0x06
    8fe0:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    8fe2:	8b e8       	ldi	r24, 0x8B	; 139
    8fe4:	92 e0       	ldi	r25, 0x02	; 2
    8fe6:	91 83       	std	Z+1, r25	; 0x01
    8fe8:	80 83       	st	Z, r24
    8fea:	85 ec       	ldi	r24, 0xC5	; 197
    8fec:	90 e0       	ldi	r25, 0x00	; 0
    8fee:	95 87       	std	Z+13, r25	; 0x0d
    8ff0:	84 87       	std	Z+12, r24	; 0x0c
    8ff2:	84 ec       	ldi	r24, 0xC4	; 196
    8ff4:	90 e0       	ldi	r25, 0x00	; 0
    8ff6:	97 87       	std	Z+15, r25	; 0x0f
    8ff8:	86 87       	std	Z+14, r24	; 0x0e
    8ffa:	80 ec       	ldi	r24, 0xC0	; 192
    8ffc:	90 e0       	ldi	r25, 0x00	; 0
    8ffe:	91 8b       	std	Z+17, r25	; 0x11
    9000:	80 8b       	std	Z+16, r24	; 0x10
    9002:	81 ec       	ldi	r24, 0xC1	; 193
    9004:	90 e0       	ldi	r25, 0x00	; 0
    9006:	93 8b       	std	Z+19, r25	; 0x13
    9008:	82 8b       	std	Z+18, r24	; 0x12
    900a:	82 ec       	ldi	r24, 0xC2	; 194
    900c:	90 e0       	ldi	r25, 0x00	; 0
    900e:	95 8b       	std	Z+21, r25	; 0x15
    9010:	84 8b       	std	Z+20, r24	; 0x14
    9012:	86 ec       	ldi	r24, 0xC6	; 198
    9014:	90 e0       	ldi	r25, 0x00	; 0
    9016:	97 8b       	std	Z+23, r25	; 0x17
    9018:	86 8b       	std	Z+22, r24	; 0x16
    901a:	11 8e       	std	Z+25, r1	; 0x19
    901c:	12 8e       	std	Z+26, r1	; 0x1a
    901e:	13 8e       	std	Z+27, r1	; 0x1b
    9020:	14 8e       	std	Z+28, r1	; 0x1c
    9022:	08 95       	ret

00009024 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    9024:	08 95       	ret

00009026 <initVariant>:
    9026:	08 95       	ret

00009028 <main>:
void setupUSB() { }

int main(void)
{

	init();
    9028:	e8 d1       	rcall	.+976    	; 0x93fa <init>

	initVariant();
    902a:	fd df       	rcall	.-6      	; 0x9026 <initVariant>
    902c:	0e 94 18 08 	call	0x1030	; 0x1030 <setup>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    9030:	cf e4       	ldi	r28, 0x4F	; 79
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    9032:	d6 e4       	ldi	r29, 0x46	; 70
    9034:	0e 94 61 08 	call	0x10c2	; 0x10c2 <loop>
#endif
	
	setup();
    
	for (;;) {
		loop();
    9038:	20 97       	sbiw	r28, 0x00	; 0
		if (serialEventRun) serialEventRun();
    903a:	e1 f3       	breq	.-8      	; 0x9034 <main+0xc>
    903c:	30 de       	rcall	.-928    	; 0x8c9e <_Z14serialEventRunv>
    903e:	fa cf       	rjmp	.-12     	; 0x9034 <main+0xc>

00009040 <_ZN5Print5writeEPKhj>:
    9040:	cf 92       	push	r12
size_t Print::println(unsigned long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    9042:	df 92       	push	r13
    9044:	ef 92       	push	r14
    9046:	ff 92       	push	r15
    9048:	0f 93       	push	r16
    904a:	1f 93       	push	r17
    904c:	cf 93       	push	r28
    904e:	df 93       	push	r29
    9050:	6c 01       	movw	r12, r24
    9052:	7a 01       	movw	r14, r20
    9054:	8b 01       	movw	r16, r22
    9056:	c0 e0       	ldi	r28, 0x00	; 0
    9058:	d0 e0       	ldi	r29, 0x00	; 0
    905a:	ce 15       	cp	r28, r14
    905c:	df 05       	cpc	r29, r15
    905e:	81 f0       	breq	.+32     	; 0x9080 <_ZN5Print5writeEPKhj+0x40>
    9060:	d8 01       	movw	r26, r16
    9062:	6d 91       	ld	r22, X+
    9064:	8d 01       	movw	r16, r26
    9066:	d6 01       	movw	r26, r12
    9068:	ed 91       	ld	r30, X+
    906a:	fc 91       	ld	r31, X
    906c:	01 90       	ld	r0, Z+
    906e:	f0 81       	ld	r31, Z
    9070:	e0 2d       	mov	r30, r0
    9072:	c6 01       	movw	r24, r12
    9074:	19 95       	eicall
    9076:	89 2b       	or	r24, r25
    9078:	11 f0       	breq	.+4      	; 0x907e <_ZN5Print5writeEPKhj+0x3e>
    907a:	21 96       	adiw	r28, 0x01	; 1
    907c:	ee cf       	rjmp	.-36     	; 0x905a <_ZN5Print5writeEPKhj+0x1a>
    907e:	7e 01       	movw	r14, r28
    9080:	c7 01       	movw	r24, r14
    9082:	df 91       	pop	r29
    9084:	cf 91       	pop	r28
    9086:	1f 91       	pop	r17
    9088:	0f 91       	pop	r16
    908a:	ff 90       	pop	r15
    908c:	ef 90       	pop	r14
    908e:	df 90       	pop	r13
    9090:	cf 90       	pop	r12
    9092:	08 95       	ret

00009094 <_ZN5Print5writeEPKc>:
    9094:	61 15       	cp	r22, r1
    9096:	71 05       	cpc	r23, r1
    9098:	79 f0       	breq	.+30     	; 0x90b8 <_ZN5Print5writeEPKc+0x24>
    909a:	fb 01       	movw	r30, r22
    909c:	01 90       	ld	r0, Z+
    909e:	00 20       	and	r0, r0
    90a0:	e9 f7       	brne	.-6      	; 0x909c <_ZN5Print5writeEPKc+0x8>
    90a2:	31 97       	sbiw	r30, 0x01	; 1
    90a4:	af 01       	movw	r20, r30
    90a6:	46 1b       	sub	r20, r22
    90a8:	57 0b       	sbc	r21, r23
    90aa:	dc 01       	movw	r26, r24
    90ac:	ed 91       	ld	r30, X+
    90ae:	fc 91       	ld	r31, X
    90b0:	02 80       	ldd	r0, Z+2	; 0x02
    90b2:	f3 81       	ldd	r31, Z+3	; 0x03
    90b4:	e0 2d       	mov	r30, r0
    90b6:	19 94       	eijmp
    90b8:	80 e0       	ldi	r24, 0x00	; 0
    90ba:	90 e0       	ldi	r25, 0x00	; 0
    90bc:	08 95       	ret

000090be <_ZN5Print5printEPK19__FlashStringHelper>:
    90be:	ef 92       	push	r14
    90c0:	ff 92       	push	r15
    90c2:	0f 93       	push	r16
    90c4:	1f 93       	push	r17
    90c6:	cf 93       	push	r28
    90c8:	df 93       	push	r29
    90ca:	8c 01       	movw	r16, r24
    90cc:	7b 01       	movw	r14, r22
    90ce:	c0 e0       	ldi	r28, 0x00	; 0
    90d0:	d0 e0       	ldi	r29, 0x00	; 0
    90d2:	f7 01       	movw	r30, r14
    90d4:	ec 0f       	add	r30, r28
    90d6:	fd 1f       	adc	r31, r29
    90d8:	64 91       	lpm	r22, Z
    90da:	66 23       	and	r22, r22
    90dc:	61 f0       	breq	.+24     	; 0x90f6 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    90de:	d8 01       	movw	r26, r16
    90e0:	ed 91       	ld	r30, X+
    90e2:	fc 91       	ld	r31, X
    90e4:	01 90       	ld	r0, Z+
    90e6:	f0 81       	ld	r31, Z
    90e8:	e0 2d       	mov	r30, r0
    90ea:	c8 01       	movw	r24, r16
    90ec:	19 95       	eicall
    90ee:	89 2b       	or	r24, r25
    90f0:	11 f0       	breq	.+4      	; 0x90f6 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
    90f2:	21 96       	adiw	r28, 0x01	; 1
    90f4:	ee cf       	rjmp	.-36     	; 0x90d2 <_ZN5Print5printEPK19__FlashStringHelper+0x14>
    90f6:	ce 01       	movw	r24, r28
    90f8:	df 91       	pop	r29
    90fa:	cf 91       	pop	r28
    90fc:	1f 91       	pop	r17
    90fe:	0f 91       	pop	r16
    9100:	ff 90       	pop	r15
    9102:	ef 90       	pop	r14
    9104:	08 95       	ret

00009106 <_ZN5Print5printERK6String>:
    9106:	db 01       	movw	r26, r22
    9108:	14 96       	adiw	r26, 0x04	; 4
    910a:	4d 91       	ld	r20, X+
    910c:	5c 91       	ld	r21, X
    910e:	15 97       	sbiw	r26, 0x05	; 5
    9110:	6d 91       	ld	r22, X+
    9112:	7c 91       	ld	r23, X
    9114:	dc 01       	movw	r26, r24
    9116:	ed 91       	ld	r30, X+
    9118:	fc 91       	ld	r31, X
    911a:	02 80       	ldd	r0, Z+2	; 0x02
    911c:	f3 81       	ldd	r31, Z+3	; 0x03
    911e:	e0 2d       	mov	r30, r0
    9120:	19 94       	eijmp

00009122 <_ZN5Print5printEPKc>:
    9122:	b8 cf       	rjmp	.-144    	; 0x9094 <_ZN5Print5writeEPKc>

00009124 <_ZN5Print5printEc>:
    9124:	dc 01       	movw	r26, r24
    9126:	ed 91       	ld	r30, X+
    9128:	fc 91       	ld	r31, X
    912a:	01 90       	ld	r0, Z+
    912c:	f0 81       	ld	r31, Z
    912e:	e0 2d       	mov	r30, r0
    9130:	19 94       	eijmp

00009132 <_ZN5Print7printlnEv>:
    9132:	69 e9       	ldi	r22, 0x99	; 153
    9134:	72 e0       	ldi	r23, 0x02	; 2
    9136:	ae cf       	rjmp	.-164    	; 0x9094 <_ZN5Print5writeEPKc>

00009138 <_ZN5Print7printlnEPK19__FlashStringHelper>:
    9138:	0f 93       	push	r16
    913a:	1f 93       	push	r17
    913c:	cf 93       	push	r28
    913e:	df 93       	push	r29
    9140:	ec 01       	movw	r28, r24
    9142:	bd df       	rcall	.-134    	; 0x90be <_ZN5Print5printEPK19__FlashStringHelper>
    9144:	8c 01       	movw	r16, r24
    9146:	ce 01       	movw	r24, r28
    9148:	f4 df       	rcall	.-24     	; 0x9132 <_ZN5Print7printlnEv>
    914a:	80 0f       	add	r24, r16
    914c:	91 1f       	adc	r25, r17
    914e:	df 91       	pop	r29
    9150:	cf 91       	pop	r28
    9152:	1f 91       	pop	r17
    9154:	0f 91       	pop	r16
    9156:	08 95       	ret

00009158 <_ZN5Print11printNumberEmh>:
    9158:	8f 92       	push	r8
    915a:	9f 92       	push	r9
    915c:	af 92       	push	r10
    915e:	bf 92       	push	r11
    9160:	ef 92       	push	r14
    9162:	ff 92       	push	r15
    9164:	0f 93       	push	r16
    9166:	1f 93       	push	r17
    9168:	cf 93       	push	r28
    916a:	df 93       	push	r29
    916c:	cd b7       	in	r28, 0x3d	; 61
    916e:	de b7       	in	r29, 0x3e	; 62
    9170:	a1 97       	sbiw	r28, 0x21	; 33
    9172:	0f b6       	in	r0, 0x3f	; 63
    9174:	f8 94       	cli
    9176:	de bf       	out	0x3e, r29	; 62
    9178:	0f be       	out	0x3f, r0	; 63
    917a:	cd bf       	out	0x3d, r28	; 61
    917c:	7c 01       	movw	r14, r24
    917e:	fa 01       	movw	r30, r20
    9180:	cb 01       	movw	r24, r22
    9182:	19 a2       	std	Y+33, r1	; 0x21
    9184:	22 30       	cpi	r18, 0x02	; 2
    9186:	08 f4       	brcc	.+2      	; 0x918a <_ZN5Print11printNumberEmh+0x32>
    9188:	2a e0       	ldi	r18, 0x0A	; 10
    918a:	8e 01       	movw	r16, r28
    918c:	0f 5d       	subi	r16, 0xDF	; 223
    918e:	1f 4f       	sbci	r17, 0xFF	; 255
    9190:	82 2e       	mov	r8, r18
    9192:	91 2c       	mov	r9, r1
    9194:	a1 2c       	mov	r10, r1
    9196:	b1 2c       	mov	r11, r1
    9198:	bf 01       	movw	r22, r30
    919a:	a5 01       	movw	r20, r10
    919c:	94 01       	movw	r18, r8
    919e:	69 d3       	rcall	.+1746   	; 0x9872 <__udivmodsi4>
    91a0:	f9 01       	movw	r30, r18
    91a2:	ca 01       	movw	r24, r20
    91a4:	01 50       	subi	r16, 0x01	; 1
    91a6:	11 09       	sbc	r17, r1
    91a8:	6a 30       	cpi	r22, 0x0A	; 10
    91aa:	10 f4       	brcc	.+4      	; 0x91b0 <_ZN5Print11printNumberEmh+0x58>
    91ac:	60 5d       	subi	r22, 0xD0	; 208
    91ae:	01 c0       	rjmp	.+2      	; 0x91b2 <_ZN5Print11printNumberEmh+0x5a>
    91b0:	69 5c       	subi	r22, 0xC9	; 201
    91b2:	d8 01       	movw	r26, r16
    91b4:	6c 93       	st	X, r22
    91b6:	23 2b       	or	r18, r19
    91b8:	24 2b       	or	r18, r20
    91ba:	25 2b       	or	r18, r21
    91bc:	69 f7       	brne	.-38     	; 0x9198 <_ZN5Print11printNumberEmh+0x40>
    91be:	b8 01       	movw	r22, r16
    91c0:	c7 01       	movw	r24, r14
    91c2:	68 df       	rcall	.-304    	; 0x9094 <_ZN5Print5writeEPKc>
    91c4:	a1 96       	adiw	r28, 0x21	; 33
    91c6:	0f b6       	in	r0, 0x3f	; 63
    91c8:	f8 94       	cli
    91ca:	de bf       	out	0x3e, r29	; 62
    91cc:	0f be       	out	0x3f, r0	; 63
    91ce:	cd bf       	out	0x3d, r28	; 61
    91d0:	df 91       	pop	r29
    91d2:	cf 91       	pop	r28
    91d4:	1f 91       	pop	r17
    91d6:	0f 91       	pop	r16
    91d8:	ff 90       	pop	r15
    91da:	ef 90       	pop	r14
    91dc:	bf 90       	pop	r11
    91de:	af 90       	pop	r10
    91e0:	9f 90       	pop	r9
    91e2:	8f 90       	pop	r8
    91e4:	08 95       	ret

000091e6 <_ZN5Print5printEli>:
{
  return print((unsigned long) n, base);
}

size_t Print::print(long n, int base)
{
    91e6:	cf 92       	push	r12
    91e8:	df 92       	push	r13
    91ea:	ef 92       	push	r14
    91ec:	ff 92       	push	r15
    91ee:	0f 93       	push	r16
    91f0:	1f 93       	push	r17
    91f2:	cf 93       	push	r28
    91f4:	df 93       	push	r29
  if (base == 0) {
    91f6:	21 15       	cp	r18, r1
    91f8:	31 05       	cpc	r19, r1
    91fa:	81 f4       	brne	.+32     	; 0x921c <_ZN5Print5printEli+0x36>
    return write(n);
    91fc:	dc 01       	movw	r26, r24
    91fe:	ed 91       	ld	r30, X+
    9200:	fc 91       	ld	r31, X
    9202:	01 90       	ld	r0, Z+
    9204:	f0 81       	ld	r31, Z
    9206:	e0 2d       	mov	r30, r0
    9208:	64 2f       	mov	r22, r20
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    920a:	df 91       	pop	r29
    920c:	cf 91       	pop	r28
    920e:	1f 91       	pop	r17
    9210:	0f 91       	pop	r16
    9212:	ff 90       	pop	r15
    9214:	ef 90       	pop	r14
    9216:	df 90       	pop	r13
    9218:	cf 90       	pop	r12
}

size_t Print::print(long n, int base)
{
  if (base == 0) {
    return write(n);
    921a:	19 94       	eijmp
  } else if (base == 10) {
    921c:	2a 30       	cpi	r18, 0x0A	; 10
    921e:	31 05       	cpc	r19, r1
    9220:	f1 f4       	brne	.+60     	; 0x925e <_ZN5Print5printEli+0x78>
    if (n < 0) {
    9222:	77 ff       	sbrs	r23, 7
    9224:	1b c0       	rjmp	.+54     	; 0x925c <_ZN5Print5printEli+0x76>
    9226:	6a 01       	movw	r12, r20
    9228:	7b 01       	movw	r14, r22
    922a:	ec 01       	movw	r28, r24
      int t = print('-');
    922c:	6d e2       	ldi	r22, 0x2D	; 45
    922e:	7a df       	rcall	.-268    	; 0x9124 <_ZN5Print5printEc>
    9230:	8c 01       	movw	r16, r24
      n = -n;
      return printNumber(n, 10) + t;
    9232:	44 27       	eor	r20, r20
    9234:	55 27       	eor	r21, r21
    9236:	ba 01       	movw	r22, r20
    9238:	4c 19       	sub	r20, r12
    923a:	5d 09       	sbc	r21, r13
    923c:	6e 09       	sbc	r22, r14
    923e:	7f 09       	sbc	r23, r15
    9240:	2a e0       	ldi	r18, 0x0A	; 10
    9242:	ce 01       	movw	r24, r28
    9244:	89 df       	rcall	.-238    	; 0x9158 <_ZN5Print11printNumberEmh>
    9246:	80 0f       	add	r24, r16
    9248:	91 1f       	adc	r25, r17
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
  }
}
    924a:	df 91       	pop	r29
    924c:	cf 91       	pop	r28
    924e:	1f 91       	pop	r17
    9250:	0f 91       	pop	r16
    9252:	ff 90       	pop	r15
    9254:	ef 90       	pop	r14
    9256:	df 90       	pop	r13
    9258:	cf 90       	pop	r12
    925a:	08 95       	ret
    if (n < 0) {
      int t = print('-');
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
    925c:	2a e0       	ldi	r18, 0x0A	; 10
  } else {
    return printNumber(n, base);
  }
}
    925e:	df 91       	pop	r29
    9260:	cf 91       	pop	r28
    9262:	1f 91       	pop	r17
    9264:	0f 91       	pop	r16
    9266:	ff 90       	pop	r15
    9268:	ef 90       	pop	r14
    926a:	df 90       	pop	r13
      n = -n;
      return printNumber(n, 10) + t;
    }
    return printNumber(n, 10);
  } else {
    return printNumber(n, base);
    926c:	cf 90       	pop	r12
    926e:	74 cf       	rjmp	.-280    	; 0x9158 <_ZN5Print11printNumberEmh>

00009270 <_ZN5Print5printEii>:
{
  return print((unsigned long) b, base);
}

size_t Print::print(int n, int base)
{
    9270:	9a 01       	movw	r18, r20
  return print((long) n, base);
    9272:	ab 01       	movw	r20, r22
    9274:	77 0f       	add	r23, r23
    9276:	66 0b       	sbc	r22, r22
    9278:	77 0b       	sbc	r23, r23
    927a:	b5 cf       	rjmp	.-150    	; 0x91e6 <_ZN5Print5printEli>

0000927c <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
    927c:	1f 92       	push	r1
    927e:	0f 92       	push	r0
    9280:	0f b6       	in	r0, 0x3f	; 63
    9282:	0f 92       	push	r0
    9284:	11 24       	eor	r1, r1
    9286:	2f 93       	push	r18
    9288:	3f 93       	push	r19
    928a:	8f 93       	push	r24
    928c:	9f 93       	push	r25
    928e:	af 93       	push	r26
    9290:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
    9292:	80 91 2a 05 	lds	r24, 0x052A	; 0x80052a <timer0_millis>
    9296:	90 91 2b 05 	lds	r25, 0x052B	; 0x80052b <timer0_millis+0x1>
    929a:	a0 91 2c 05 	lds	r26, 0x052C	; 0x80052c <timer0_millis+0x2>
    929e:	b0 91 2d 05 	lds	r27, 0x052D	; 0x80052d <timer0_millis+0x3>
	unsigned char f = timer0_fract;
    92a2:	30 91 29 05 	lds	r19, 0x0529	; 0x800529 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
    92a6:	23 e0       	ldi	r18, 0x03	; 3
    92a8:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
    92aa:	2d 37       	cpi	r18, 0x7D	; 125
    92ac:	20 f4       	brcc	.+8      	; 0x92b6 <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
    92ae:	01 96       	adiw	r24, 0x01	; 1
    92b0:	a1 1d       	adc	r26, r1
    92b2:	b1 1d       	adc	r27, r1
    92b4:	05 c0       	rjmp	.+10     	; 0x92c0 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
    92b6:	26 e8       	ldi	r18, 0x86	; 134
    92b8:	23 0f       	add	r18, r19
		m += 1;
    92ba:	02 96       	adiw	r24, 0x02	; 2
    92bc:	a1 1d       	adc	r26, r1
    92be:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
    92c0:	20 93 29 05 	sts	0x0529, r18	; 0x800529 <timer0_fract>
	timer0_millis = m;
    92c4:	80 93 2a 05 	sts	0x052A, r24	; 0x80052a <timer0_millis>
    92c8:	90 93 2b 05 	sts	0x052B, r25	; 0x80052b <timer0_millis+0x1>
    92cc:	a0 93 2c 05 	sts	0x052C, r26	; 0x80052c <timer0_millis+0x2>
    92d0:	b0 93 2d 05 	sts	0x052D, r27	; 0x80052d <timer0_millis+0x3>
	timer0_overflow_count++;
    92d4:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <timer0_overflow_count>
    92d8:	90 91 2f 05 	lds	r25, 0x052F	; 0x80052f <timer0_overflow_count+0x1>
    92dc:	a0 91 30 05 	lds	r26, 0x0530	; 0x800530 <timer0_overflow_count+0x2>
    92e0:	b0 91 31 05 	lds	r27, 0x0531	; 0x800531 <timer0_overflow_count+0x3>
    92e4:	01 96       	adiw	r24, 0x01	; 1
    92e6:	a1 1d       	adc	r26, r1
    92e8:	b1 1d       	adc	r27, r1
    92ea:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <timer0_overflow_count>
    92ee:	90 93 2f 05 	sts	0x052F, r25	; 0x80052f <timer0_overflow_count+0x1>
    92f2:	a0 93 30 05 	sts	0x0530, r26	; 0x800530 <timer0_overflow_count+0x2>
    92f6:	b0 93 31 05 	sts	0x0531, r27	; 0x800531 <timer0_overflow_count+0x3>
}
    92fa:	bf 91       	pop	r27
    92fc:	af 91       	pop	r26
    92fe:	9f 91       	pop	r25
    9300:	8f 91       	pop	r24
    9302:	3f 91       	pop	r19
    9304:	2f 91       	pop	r18
    9306:	0f 90       	pop	r0
    9308:	0f be       	out	0x3f, r0	; 63
    930a:	0f 90       	pop	r0
    930c:	1f 90       	pop	r1
    930e:	18 95       	reti

00009310 <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
    9310:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
    9312:	f8 94       	cli
	m = timer0_millis;
    9314:	60 91 2a 05 	lds	r22, 0x052A	; 0x80052a <timer0_millis>
    9318:	70 91 2b 05 	lds	r23, 0x052B	; 0x80052b <timer0_millis+0x1>
    931c:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <timer0_millis+0x2>
    9320:	90 91 2d 05 	lds	r25, 0x052D	; 0x80052d <timer0_millis+0x3>
	SREG = oldSREG;
    9324:	2f bf       	out	0x3f, r18	; 63

	return m;
}
    9326:	08 95       	ret

00009328 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
    9328:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
    932a:	f8 94       	cli
	m = timer0_overflow_count;
    932c:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <timer0_overflow_count>
    9330:	90 91 2f 05 	lds	r25, 0x052F	; 0x80052f <timer0_overflow_count+0x1>
    9334:	a0 91 30 05 	lds	r26, 0x0530	; 0x800530 <timer0_overflow_count+0x2>
    9338:	b0 91 31 05 	lds	r27, 0x0531	; 0x800531 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
    933c:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
    933e:	a8 9b       	sbis	0x15, 0	; 21
    9340:	05 c0       	rjmp	.+10     	; 0x934c <micros+0x24>
    9342:	2f 3f       	cpi	r18, 0xFF	; 255
    9344:	19 f0       	breq	.+6      	; 0x934c <micros+0x24>
		m++;
    9346:	01 96       	adiw	r24, 0x01	; 1
    9348:	a1 1d       	adc	r26, r1
    934a:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
    934c:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
    934e:	ba 2f       	mov	r27, r26
    9350:	a9 2f       	mov	r26, r25
    9352:	98 2f       	mov	r25, r24
    9354:	88 27       	eor	r24, r24
    9356:	82 0f       	add	r24, r18
    9358:	91 1d       	adc	r25, r1
    935a:	a1 1d       	adc	r26, r1
    935c:	b1 1d       	adc	r27, r1
    935e:	bc 01       	movw	r22, r24
    9360:	cd 01       	movw	r24, r26
    9362:	42 e0       	ldi	r20, 0x02	; 2
    9364:	66 0f       	add	r22, r22
    9366:	77 1f       	adc	r23, r23
    9368:	88 1f       	adc	r24, r24
    936a:	99 1f       	adc	r25, r25
    936c:	4a 95       	dec	r20
    936e:	d1 f7       	brne	.-12     	; 0x9364 <micros+0x3c>
}
    9370:	08 95       	ret

00009372 <delay>:

void delay(unsigned long ms)
{
    9372:	8f 92       	push	r8
    9374:	9f 92       	push	r9
    9376:	af 92       	push	r10
    9378:	bf 92       	push	r11
    937a:	cf 92       	push	r12
    937c:	df 92       	push	r13
    937e:	ef 92       	push	r14
    9380:	ff 92       	push	r15
    9382:	6b 01       	movw	r12, r22
    9384:	7c 01       	movw	r14, r24
	uint32_t start = micros();
    9386:	d0 df       	rcall	.-96     	; 0x9328 <micros>
    9388:	4b 01       	movw	r8, r22
    938a:	5c 01       	movw	r10, r24

	while (ms > 0) {
    938c:	c1 14       	cp	r12, r1
    938e:	d1 04       	cpc	r13, r1
    9390:	e1 04       	cpc	r14, r1
    9392:	f1 04       	cpc	r15, r1
		yield();
    9394:	f1 f0       	breq	.+60     	; 0x93d2 <delay+0x60>
		while ( ms > 0 && (micros() - start) >= 1000) {
    9396:	46 de       	rcall	.-884    	; 0x9024 <yield>
    9398:	c7 df       	rcall	.-114    	; 0x9328 <micros>
    939a:	dc 01       	movw	r26, r24
    939c:	cb 01       	movw	r24, r22
    939e:	88 19       	sub	r24, r8
    93a0:	99 09       	sbc	r25, r9
    93a2:	aa 09       	sbc	r26, r10
    93a4:	bb 09       	sbc	r27, r11
    93a6:	88 3e       	cpi	r24, 0xE8	; 232
    93a8:	93 40       	sbci	r25, 0x03	; 3
    93aa:	a1 05       	cpc	r26, r1
    93ac:	b1 05       	cpc	r27, r1
    93ae:	70 f3       	brcs	.-36     	; 0x938c <delay+0x1a>
			ms--;
    93b0:	21 e0       	ldi	r18, 0x01	; 1
    93b2:	c2 1a       	sub	r12, r18
    93b4:	d1 08       	sbc	r13, r1
    93b6:	e1 08       	sbc	r14, r1
    93b8:	f1 08       	sbc	r15, r1
			start += 1000;
    93ba:	88 ee       	ldi	r24, 0xE8	; 232
    93bc:	88 0e       	add	r8, r24
    93be:	83 e0       	ldi	r24, 0x03	; 3
    93c0:	98 1e       	adc	r9, r24
    93c2:	a1 1c       	adc	r10, r1
    93c4:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
    93c6:	c1 14       	cp	r12, r1
    93c8:	d1 04       	cpc	r13, r1
    93ca:	e1 04       	cpc	r14, r1
    93cc:	f1 04       	cpc	r15, r1
    93ce:	21 f7       	brne	.-56     	; 0x9398 <delay+0x26>
    93d0:	dd cf       	rjmp	.-70     	; 0x938c <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
    93d2:	ff 90       	pop	r15
    93d4:	ef 90       	pop	r14
    93d6:	df 90       	pop	r13
    93d8:	cf 90       	pop	r12
    93da:	bf 90       	pop	r11
    93dc:	af 90       	pop	r10
    93de:	9f 90       	pop	r9
    93e0:	8f 90       	pop	r8
    93e2:	08 95       	ret

000093e4 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
    93e4:	82 30       	cpi	r24, 0x02	; 2
    93e6:	91 05       	cpc	r25, r1
    93e8:	38 f0       	brcs	.+14     	; 0x93f8 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
    93ea:	88 0f       	add	r24, r24
    93ec:	99 1f       	adc	r25, r25
    93ee:	88 0f       	add	r24, r24
    93f0:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
    93f2:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
    93f4:	01 97       	sbiw	r24, 0x01	; 1
    93f6:	f1 f7       	brne	.-4      	; 0x93f4 <delayMicroseconds+0x10>
    93f8:	08 95       	ret

000093fa <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    93fa:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    93fc:	84 b5       	in	r24, 0x24	; 36
    93fe:	82 60       	ori	r24, 0x02	; 2
    9400:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    9402:	84 b5       	in	r24, 0x24	; 36
    9404:	81 60       	ori	r24, 0x01	; 1
    9406:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    9408:	85 b5       	in	r24, 0x25	; 37
    940a:	82 60       	ori	r24, 0x02	; 2
    940c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    940e:	85 b5       	in	r24, 0x25	; 37
    9410:	81 60       	ori	r24, 0x01	; 1
    9412:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    9414:	ee e6       	ldi	r30, 0x6E	; 110
    9416:	f0 e0       	ldi	r31, 0x00	; 0
    9418:	80 81       	ld	r24, Z
    941a:	81 60       	ori	r24, 0x01	; 1
    941c:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    941e:	e1 e8       	ldi	r30, 0x81	; 129
    9420:	f0 e0       	ldi	r31, 0x00	; 0
    9422:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    9424:	80 81       	ld	r24, Z
    9426:	82 60       	ori	r24, 0x02	; 2
    9428:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    942a:	80 81       	ld	r24, Z
    942c:	81 60       	ori	r24, 0x01	; 1
    942e:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    9430:	e0 e8       	ldi	r30, 0x80	; 128
    9432:	f0 e0       	ldi	r31, 0x00	; 0
    9434:	80 81       	ld	r24, Z
    9436:	81 60       	ori	r24, 0x01	; 1
    9438:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    943a:	e1 eb       	ldi	r30, 0xB1	; 177
    943c:	f0 e0       	ldi	r31, 0x00	; 0
    943e:	80 81       	ld	r24, Z
    9440:	84 60       	ori	r24, 0x04	; 4
    9442:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    9444:	e0 eb       	ldi	r30, 0xB0	; 176
    9446:	f0 e0       	ldi	r31, 0x00	; 0
    9448:	80 81       	ld	r24, Z
    944a:	81 60       	ori	r24, 0x01	; 1
    944c:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    944e:	e1 e9       	ldi	r30, 0x91	; 145
    9450:	f0 e0       	ldi	r31, 0x00	; 0
    9452:	80 81       	ld	r24, Z
    9454:	82 60       	ori	r24, 0x02	; 2
    9456:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    9458:	80 81       	ld	r24, Z
    945a:	81 60       	ori	r24, 0x01	; 1
    945c:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    945e:	e0 e9       	ldi	r30, 0x90	; 144
    9460:	f0 e0       	ldi	r31, 0x00	; 0
    9462:	80 81       	ld	r24, Z
    9464:	81 60       	ori	r24, 0x01	; 1
    9466:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    9468:	e1 ea       	ldi	r30, 0xA1	; 161
    946a:	f0 e0       	ldi	r31, 0x00	; 0
    946c:	80 81       	ld	r24, Z
    946e:	82 60       	ori	r24, 0x02	; 2
    9470:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    9472:	80 81       	ld	r24, Z
    9474:	81 60       	ori	r24, 0x01	; 1
    9476:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    9478:	e0 ea       	ldi	r30, 0xA0	; 160
    947a:	f0 e0       	ldi	r31, 0x00	; 0
    947c:	80 81       	ld	r24, Z
    947e:	81 60       	ori	r24, 0x01	; 1
    9480:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    9482:	e1 e2       	ldi	r30, 0x21	; 33
    9484:	f1 e0       	ldi	r31, 0x01	; 1
    9486:	80 81       	ld	r24, Z
    9488:	82 60       	ori	r24, 0x02	; 2
    948a:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    948c:	80 81       	ld	r24, Z
    948e:	81 60       	ori	r24, 0x01	; 1
    9490:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    9492:	e0 e2       	ldi	r30, 0x20	; 32
    9494:	f1 e0       	ldi	r31, 0x01	; 1
    9496:	80 81       	ld	r24, Z
    9498:	81 60       	ori	r24, 0x01	; 1
    949a:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    949c:	ea e7       	ldi	r30, 0x7A	; 122
    949e:	f0 e0       	ldi	r31, 0x00	; 0
    94a0:	80 81       	ld	r24, Z
    94a2:	84 60       	ori	r24, 0x04	; 4
    94a4:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    94a6:	80 81       	ld	r24, Z
    94a8:	82 60       	ori	r24, 0x02	; 2
    94aa:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    94ac:	80 81       	ld	r24, Z
    94ae:	81 60       	ori	r24, 0x01	; 1
    94b0:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    94b2:	80 81       	ld	r24, Z
    94b4:	80 68       	ori	r24, 0x80	; 128
    94b6:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    94b8:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
    94bc:	08 95       	ret

000094be <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    94be:	90 e0       	ldi	r25, 0x00	; 0
    94c0:	fc 01       	movw	r30, r24
    94c2:	31 97       	sbiw	r30, 0x01	; 1
    94c4:	e2 31       	cpi	r30, 0x12	; 18
    94c6:	f1 05       	cpc	r31, r1
    94c8:	08 f0       	brcs	.+2      	; 0x94cc <turnOffPWM+0xe>
    94ca:	4d c0       	rjmp	.+154    	; 0x9566 <turnOffPWM+0xa8>
    94cc:	88 27       	eor	r24, r24
    94ce:	e4 55       	subi	r30, 0x54	; 84
    94d0:	fe 4f       	sbci	r31, 0xFE	; 254
    94d2:	8f 4f       	sbci	r24, 0xFF	; 255
    94d4:	f0 c1       	rjmp	.+992    	; 0x98b6 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    94d6:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    94da:	8f 77       	andi	r24, 0x7F	; 127
    94dc:	03 c0       	rjmp	.+6      	; 0x94e4 <turnOffPWM+0x26>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    94de:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    94e2:	8f 7d       	andi	r24, 0xDF	; 223
    94e4:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    94e8:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    94ea:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    94ee:	87 7f       	andi	r24, 0xF7	; 247
    94f0:	f9 cf       	rjmp	.-14     	; 0x94e4 <turnOffPWM+0x26>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    94f2:	84 b5       	in	r24, 0x24	; 36
    94f4:	8f 77       	andi	r24, 0x7F	; 127
    94f6:	02 c0       	rjmp	.+4      	; 0x94fc <turnOffPWM+0x3e>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    94f8:	84 b5       	in	r24, 0x24	; 36
    94fa:	8f 7d       	andi	r24, 0xDF	; 223
    94fc:	84 bd       	out	0x24, r24	; 36
    94fe:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    9500:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    9504:	8f 77       	andi	r24, 0x7F	; 127
    9506:	03 c0       	rjmp	.+6      	; 0x950e <turnOffPWM+0x50>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    9508:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    950c:	8f 7d       	andi	r24, 0xDF	; 223
    950e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
    9512:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    9514:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    9518:	8f 77       	andi	r24, 0x7F	; 127
    951a:	07 c0       	rjmp	.+14     	; 0x952a <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    951c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    9520:	8f 7d       	andi	r24, 0xDF	; 223
    9522:	03 c0       	rjmp	.+6      	; 0x952a <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    9524:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    9528:	87 7f       	andi	r24, 0xF7	; 247
    952a:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
    952e:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    9530:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    9534:	8f 77       	andi	r24, 0x7F	; 127
    9536:	07 c0       	rjmp	.+14     	; 0x9546 <turnOffPWM+0x88>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    9538:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    953c:	8f 7d       	andi	r24, 0xDF	; 223
    953e:	03 c0       	rjmp	.+6      	; 0x9546 <turnOffPWM+0x88>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    9540:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    9544:	87 7f       	andi	r24, 0xF7	; 247
    9546:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
    954a:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    954c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9550:	8f 77       	andi	r24, 0x7F	; 127
    9552:	07 c0       	rjmp	.+14     	; 0x9562 <turnOffPWM+0xa4>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    9554:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9558:	8f 7d       	andi	r24, 0xDF	; 223
    955a:	03 c0       	rjmp	.+6      	; 0x9562 <turnOffPWM+0xa4>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    955c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9560:	87 7f       	andi	r24, 0xF7	; 247
    9562:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
    9566:	08 95       	ret

00009568 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    9568:	cf 93       	push	r28
    956a:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    956c:	90 e0       	ldi	r25, 0x00	; 0
    956e:	fc 01       	movw	r30, r24
    9570:	e3 51       	subi	r30, 0x13	; 19
    9572:	f2 4f       	sbci	r31, 0xF2	; 242
    9574:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    9576:	fc 01       	movw	r30, r24
    9578:	ed 5c       	subi	r30, 0xCD	; 205
    957a:	f1 4f       	sbci	r31, 0xF1	; 241
    957c:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    957e:	88 23       	and	r24, r24
    9580:	61 f1       	breq	.+88     	; 0x95da <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    9582:	90 e0       	ldi	r25, 0x00	; 0
    9584:	88 0f       	add	r24, r24
    9586:	99 1f       	adc	r25, r25
    9588:	fc 01       	movw	r30, r24
    958a:	e3 55       	subi	r30, 0x53	; 83
    958c:	f1 4f       	sbci	r31, 0xF1	; 241
    958e:	c5 91       	lpm	r28, Z+
    9590:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    9592:	fc 01       	movw	r30, r24
    9594:	ed 56       	subi	r30, 0x6D	; 109
    9596:	f1 4f       	sbci	r31, 0xF1	; 241
    9598:	a5 91       	lpm	r26, Z+
    959a:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    959c:	61 11       	cpse	r22, r1
    959e:	09 c0       	rjmp	.+18     	; 0x95b2 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    95a0:	9f b7       	in	r25, 0x3f	; 63
                cli();
    95a2:	f8 94       	cli
		*reg &= ~bit;
    95a4:	88 81       	ld	r24, Y
    95a6:	20 95       	com	r18
    95a8:	82 23       	and	r24, r18
    95aa:	88 83       	st	Y, r24
		*out &= ~bit;
    95ac:	ec 91       	ld	r30, X
    95ae:	2e 23       	and	r18, r30
    95b0:	0b c0       	rjmp	.+22     	; 0x95c8 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    95b2:	62 30       	cpi	r22, 0x02	; 2
    95b4:	61 f4       	brne	.+24     	; 0x95ce <pinMode+0x66>
		uint8_t oldSREG = SREG;
    95b6:	9f b7       	in	r25, 0x3f	; 63
                cli();
    95b8:	f8 94       	cli
		*reg &= ~bit;
    95ba:	88 81       	ld	r24, Y
    95bc:	32 2f       	mov	r19, r18
    95be:	30 95       	com	r19
    95c0:	83 23       	and	r24, r19
    95c2:	88 83       	st	Y, r24
		*out |= bit;
    95c4:	ec 91       	ld	r30, X
    95c6:	2e 2b       	or	r18, r30
    95c8:	2c 93       	st	X, r18
		SREG = oldSREG;
    95ca:	9f bf       	out	0x3f, r25	; 63
    95cc:	06 c0       	rjmp	.+12     	; 0x95da <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    95ce:	8f b7       	in	r24, 0x3f	; 63
                cli();
    95d0:	f8 94       	cli
		*reg |= bit;
    95d2:	e8 81       	ld	r30, Y
    95d4:	2e 2b       	or	r18, r30
    95d6:	28 83       	st	Y, r18
		SREG = oldSREG;
    95d8:	8f bf       	out	0x3f, r24	; 63
	}
}
    95da:	df 91       	pop	r29
    95dc:	cf 91       	pop	r28
    95de:	08 95       	ret

000095e0 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    95e0:	1f 93       	push	r17
    95e2:	cf 93       	push	r28
    95e4:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    95e6:	28 2f       	mov	r18, r24
    95e8:	30 e0       	ldi	r19, 0x00	; 0
    95ea:	f9 01       	movw	r30, r18
    95ec:	e9 55       	subi	r30, 0x59	; 89
    95ee:	f2 4f       	sbci	r31, 0xF2	; 242
    95f0:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    95f2:	f9 01       	movw	r30, r18
    95f4:	e3 51       	subi	r30, 0x13	; 19
    95f6:	f2 4f       	sbci	r31, 0xF2	; 242
    95f8:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    95fa:	f9 01       	movw	r30, r18
    95fc:	ed 5c       	subi	r30, 0xCD	; 205
    95fe:	f1 4f       	sbci	r31, 0xF1	; 241
    9600:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    9602:	cc 23       	and	r28, r28
    9604:	b9 f0       	breq	.+46     	; 0x9634 <digitalWrite+0x54>
    9606:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    9608:	81 11       	cpse	r24, r1
    960a:	59 df       	rcall	.-334    	; 0x94be <turnOffPWM>

	out = portOutputRegister(port);
    960c:	ec 2f       	mov	r30, r28
    960e:	f0 e0       	ldi	r31, 0x00	; 0
    9610:	ee 0f       	add	r30, r30
    9612:	ff 1f       	adc	r31, r31
    9614:	ed 56       	subi	r30, 0x6D	; 109
    9616:	f1 4f       	sbci	r31, 0xF1	; 241
    9618:	a5 91       	lpm	r26, Z+
    961a:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    961c:	9f b7       	in	r25, 0x3f	; 63
	cli();
    961e:	f8 94       	cli

	if (val == LOW) {
    9620:	11 11       	cpse	r17, r1
    9622:	04 c0       	rjmp	.+8      	; 0x962c <digitalWrite+0x4c>
		*out &= ~bit;
    9624:	8c 91       	ld	r24, X
    9626:	d0 95       	com	r29
    9628:	d8 23       	and	r29, r24
    962a:	02 c0       	rjmp	.+4      	; 0x9630 <digitalWrite+0x50>
	} else {
		*out |= bit;
    962c:	ec 91       	ld	r30, X
    962e:	de 2b       	or	r29, r30
    9630:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    9632:	9f bf       	out	0x3f, r25	; 63
}
    9634:	df 91       	pop	r29
    9636:	cf 91       	pop	r28
    9638:	1f 91       	pop	r17
    963a:	08 95       	ret

0000963c <_ZN6StringD1Ev>:
	unsigned int newlen = len + length;
	if (!reserve(newlen)) return 0;
	strcpy_P(buffer + len, (const char *) str);
	len = newlen;
	return 1;
}
    963c:	fc 01       	movw	r30, r24
    963e:	80 81       	ld	r24, Z
    9640:	91 81       	ldd	r25, Z+1	; 0x01
    9642:	00 97       	sbiw	r24, 0x00	; 0
    9644:	09 f0       	breq	.+2      	; 0x9648 <_ZN6StringD1Ev+0xc>
    9646:	f0 c1       	rjmp	.+992    	; 0x9a28 <free>
    9648:	08 95       	ret

0000964a <_ZN6String10invalidateEv>:
    964a:	cf 93       	push	r28
    964c:	df 93       	push	r29
    964e:	ec 01       	movw	r28, r24
    9650:	88 81       	ld	r24, Y
    9652:	99 81       	ldd	r25, Y+1	; 0x01
    9654:	00 97       	sbiw	r24, 0x00	; 0
    9656:	09 f0       	breq	.+2      	; 0x965a <_ZN6String10invalidateEv+0x10>
    9658:	e7 d1       	rcall	.+974    	; 0x9a28 <free>
    965a:	19 82       	std	Y+1, r1	; 0x01
    965c:	18 82       	st	Y, r1
    965e:	1d 82       	std	Y+5, r1	; 0x05
    9660:	1c 82       	std	Y+4, r1	; 0x04
    9662:	1b 82       	std	Y+3, r1	; 0x03
    9664:	1a 82       	std	Y+2, r1	; 0x02
    9666:	df 91       	pop	r29
    9668:	cf 91       	pop	r28
    966a:	08 95       	ret

0000966c <_ZN6String12changeBufferEj>:
    966c:	0f 93       	push	r16
    966e:	1f 93       	push	r17
    9670:	cf 93       	push	r28
    9672:	df 93       	push	r29
    9674:	ec 01       	movw	r28, r24
    9676:	8b 01       	movw	r16, r22
    9678:	6f 5f       	subi	r22, 0xFF	; 255
    967a:	7f 4f       	sbci	r23, 0xFF	; 255
    967c:	88 81       	ld	r24, Y
    967e:	99 81       	ldd	r25, Y+1	; 0x01
    9680:	5c d2       	rcall	.+1208   	; 0x9b3a <realloc>
    9682:	00 97       	sbiw	r24, 0x00	; 0
    9684:	31 f0       	breq	.+12     	; 0x9692 <_ZN6String12changeBufferEj+0x26>
    9686:	99 83       	std	Y+1, r25	; 0x01
    9688:	88 83       	st	Y, r24
    968a:	1b 83       	std	Y+3, r17	; 0x03
    968c:	0a 83       	std	Y+2, r16	; 0x02
    968e:	81 e0       	ldi	r24, 0x01	; 1
    9690:	01 c0       	rjmp	.+2      	; 0x9694 <_ZN6String12changeBufferEj+0x28>
    9692:	80 e0       	ldi	r24, 0x00	; 0
    9694:	df 91       	pop	r29
    9696:	cf 91       	pop	r28
    9698:	1f 91       	pop	r17
    969a:	0f 91       	pop	r16
    969c:	08 95       	ret

0000969e <_ZN6String7reserveEj>:
    969e:	cf 93       	push	r28
    96a0:	df 93       	push	r29
    96a2:	ec 01       	movw	r28, r24
    96a4:	88 81       	ld	r24, Y
    96a6:	99 81       	ldd	r25, Y+1	; 0x01
    96a8:	89 2b       	or	r24, r25
    96aa:	29 f0       	breq	.+10     	; 0x96b6 <_ZN6String7reserveEj+0x18>
    96ac:	8a 81       	ldd	r24, Y+2	; 0x02
    96ae:	9b 81       	ldd	r25, Y+3	; 0x03
    96b0:	86 17       	cp	r24, r22
    96b2:	97 07       	cpc	r25, r23
    96b4:	58 f4       	brcc	.+22     	; 0x96cc <_ZN6String7reserveEj+0x2e>
    96b6:	ce 01       	movw	r24, r28
    96b8:	d9 df       	rcall	.-78     	; 0x966c <_ZN6String12changeBufferEj>
    96ba:	88 23       	and	r24, r24
    96bc:	41 f0       	breq	.+16     	; 0x96ce <_ZN6String7reserveEj+0x30>
    96be:	8c 81       	ldd	r24, Y+4	; 0x04
    96c0:	9d 81       	ldd	r25, Y+5	; 0x05
    96c2:	89 2b       	or	r24, r25
    96c4:	19 f4       	brne	.+6      	; 0x96cc <_ZN6String7reserveEj+0x2e>
    96c6:	e8 81       	ld	r30, Y
    96c8:	f9 81       	ldd	r31, Y+1	; 0x01
    96ca:	10 82       	st	Z, r1
    96cc:	81 e0       	ldi	r24, 0x01	; 1
    96ce:	df 91       	pop	r29
    96d0:	cf 91       	pop	r28
    96d2:	08 95       	ret

000096d4 <_ZN6String4copyEPKcj>:
    96d4:	ef 92       	push	r14
    96d6:	ff 92       	push	r15
    96d8:	0f 93       	push	r16
    96da:	1f 93       	push	r17
    96dc:	cf 93       	push	r28
    96de:	df 93       	push	r29
    96e0:	ec 01       	movw	r28, r24
    96e2:	7b 01       	movw	r14, r22
    96e4:	8a 01       	movw	r16, r20
    96e6:	ba 01       	movw	r22, r20
    96e8:	da df       	rcall	.-76     	; 0x969e <_ZN6String7reserveEj>
    96ea:	81 11       	cpse	r24, r1
    96ec:	03 c0       	rjmp	.+6      	; 0x96f4 <_ZN6String4copyEPKcj+0x20>
    96ee:	ce 01       	movw	r24, r28
    96f0:	ac df       	rcall	.-168    	; 0x964a <_ZN6String10invalidateEv>
    96f2:	06 c0       	rjmp	.+12     	; 0x9700 <_ZN6String4copyEPKcj+0x2c>
    96f4:	1d 83       	std	Y+5, r17	; 0x05
    96f6:	0c 83       	std	Y+4, r16	; 0x04
    96f8:	b7 01       	movw	r22, r14
    96fa:	88 81       	ld	r24, Y
    96fc:	99 81       	ldd	r25, Y+1	; 0x01
    96fe:	11 d3       	rcall	.+1570   	; 0x9d22 <strcpy>
    9700:	ce 01       	movw	r24, r28
    9702:	df 91       	pop	r29
    9704:	cf 91       	pop	r28
    9706:	1f 91       	pop	r17
    9708:	0f 91       	pop	r16
    970a:	ff 90       	pop	r15
    970c:	ef 90       	pop	r14
    970e:	08 95       	ret

00009710 <_ZN6StringaSERKS_>:
    9710:	cf 93       	push	r28
    9712:	df 93       	push	r29
    9714:	ec 01       	movw	r28, r24
    9716:	fb 01       	movw	r30, r22
    9718:	86 17       	cp	r24, r22
    971a:	97 07       	cpc	r25, r23
    971c:	51 f0       	breq	.+20     	; 0x9732 <_ZN6StringaSERKS_+0x22>
    971e:	60 81       	ld	r22, Z
    9720:	71 81       	ldd	r23, Z+1	; 0x01
    9722:	61 15       	cp	r22, r1
    9724:	71 05       	cpc	r23, r1
    9726:	21 f0       	breq	.+8      	; 0x9730 <_ZN6StringaSERKS_+0x20>
    9728:	44 81       	ldd	r20, Z+4	; 0x04
    972a:	55 81       	ldd	r21, Z+5	; 0x05
    972c:	d3 df       	rcall	.-90     	; 0x96d4 <_ZN6String4copyEPKcj>
    972e:	01 c0       	rjmp	.+2      	; 0x9732 <_ZN6StringaSERKS_+0x22>
    9730:	8c df       	rcall	.-232    	; 0x964a <_ZN6String10invalidateEv>
    9732:	ce 01       	movw	r24, r28
    9734:	df 91       	pop	r29
    9736:	cf 91       	pop	r28
    9738:	08 95       	ret

0000973a <_ZN6StringC1ERKS_>:
    973a:	fc 01       	movw	r30, r24
    973c:	11 82       	std	Z+1, r1	; 0x01
    973e:	10 82       	st	Z, r1
    9740:	13 82       	std	Z+3, r1	; 0x03
    9742:	12 82       	std	Z+2, r1	; 0x02
    9744:	15 82       	std	Z+5, r1	; 0x05
    9746:	14 82       	std	Z+4, r1	; 0x04
    9748:	e3 cf       	rjmp	.-58     	; 0x9710 <_ZN6StringaSERKS_>

0000974a <_ZN6StringaSEPKc>:
    974a:	cf 93       	push	r28
    974c:	df 93       	push	r29
    974e:	ec 01       	movw	r28, r24
    9750:	61 15       	cp	r22, r1
    9752:	71 05       	cpc	r23, r1
    9754:	51 f0       	breq	.+20     	; 0x976a <_ZN6StringaSEPKc+0x20>
    9756:	fb 01       	movw	r30, r22
    9758:	01 90       	ld	r0, Z+
    975a:	00 20       	and	r0, r0
    975c:	e9 f7       	brne	.-6      	; 0x9758 <_ZN6StringaSEPKc+0xe>
    975e:	31 97       	sbiw	r30, 0x01	; 1
    9760:	af 01       	movw	r20, r30
    9762:	46 1b       	sub	r20, r22
    9764:	57 0b       	sbc	r21, r23
    9766:	b6 df       	rcall	.-148    	; 0x96d4 <_ZN6String4copyEPKcj>
    9768:	01 c0       	rjmp	.+2      	; 0x976c <_ZN6StringaSEPKc+0x22>
    976a:	6f df       	rcall	.-290    	; 0x964a <_ZN6String10invalidateEv>
    976c:	ce 01       	movw	r24, r28
    976e:	df 91       	pop	r29
    9770:	cf 91       	pop	r28
    9772:	08 95       	ret

00009774 <_ZN6StringC1Ec>:
    9774:	cf 93       	push	r28
    9776:	df 93       	push	r29
    9778:	1f 92       	push	r1
    977a:	1f 92       	push	r1
    977c:	cd b7       	in	r28, 0x3d	; 61
    977e:	de b7       	in	r29, 0x3e	; 62
    9780:	fc 01       	movw	r30, r24
    9782:	11 82       	std	Z+1, r1	; 0x01
    9784:	10 82       	st	Z, r1
    9786:	13 82       	std	Z+3, r1	; 0x03
    9788:	12 82       	std	Z+2, r1	; 0x02
    978a:	15 82       	std	Z+5, r1	; 0x05
    978c:	14 82       	std	Z+4, r1	; 0x04
    978e:	69 83       	std	Y+1, r22	; 0x01
    9790:	1a 82       	std	Y+2, r1	; 0x02
    9792:	be 01       	movw	r22, r28
    9794:	6f 5f       	subi	r22, 0xFF	; 255
    9796:	7f 4f       	sbci	r23, 0xFF	; 255
    9798:	d8 df       	rcall	.-80     	; 0x974a <_ZN6StringaSEPKc>
    979a:	0f 90       	pop	r0
    979c:	0f 90       	pop	r0
    979e:	df 91       	pop	r29
    97a0:	cf 91       	pop	r28
    97a2:	08 95       	ret

000097a4 <_ZN6StringC1Eih>:
    97a4:	0f 93       	push	r16
    97a6:	1f 93       	push	r17
    97a8:	cf 93       	push	r28
    97aa:	df 93       	push	r29
    97ac:	cd b7       	in	r28, 0x3d	; 61
    97ae:	de b7       	in	r29, 0x3e	; 62
    97b0:	62 97       	sbiw	r28, 0x12	; 18
    97b2:	0f b6       	in	r0, 0x3f	; 63
    97b4:	f8 94       	cli
    97b6:	de bf       	out	0x3e, r29	; 62
    97b8:	0f be       	out	0x3f, r0	; 63
    97ba:	cd bf       	out	0x3d, r28	; 61
    97bc:	8c 01       	movw	r16, r24
    97be:	cb 01       	movw	r24, r22
    97c0:	f8 01       	movw	r30, r16
    97c2:	11 82       	std	Z+1, r1	; 0x01
    97c4:	10 82       	st	Z, r1
    97c6:	13 82       	std	Z+3, r1	; 0x03
    97c8:	12 82       	std	Z+2, r1	; 0x02
    97ca:	15 82       	std	Z+5, r1	; 0x05
    97cc:	14 82       	std	Z+4, r1	; 0x04
    97ce:	50 e0       	ldi	r21, 0x00	; 0
    97d0:	be 01       	movw	r22, r28
    97d2:	6f 5f       	subi	r22, 0xFF	; 255
    97d4:	7f 4f       	sbci	r23, 0xFF	; 255
    97d6:	ac d2       	rcall	.+1368   	; 0x9d30 <itoa>
    97d8:	be 01       	movw	r22, r28
    97da:	6f 5f       	subi	r22, 0xFF	; 255
    97dc:	7f 4f       	sbci	r23, 0xFF	; 255
    97de:	c8 01       	movw	r24, r16
    97e0:	b4 df       	rcall	.-152    	; 0x974a <_ZN6StringaSEPKc>
    97e2:	62 96       	adiw	r28, 0x12	; 18
    97e4:	0f b6       	in	r0, 0x3f	; 63
    97e6:	f8 94       	cli
    97e8:	de bf       	out	0x3e, r29	; 62
    97ea:	0f be       	out	0x3f, r0	; 63
    97ec:	cd bf       	out	0x3d, r28	; 61
    97ee:	df 91       	pop	r29
    97f0:	cf 91       	pop	r28
    97f2:	1f 91       	pop	r17
    97f4:	0f 91       	pop	r16
    97f6:	08 95       	ret

000097f8 <_ZN6String6concatEPKcj>:
    97f8:	ef 92       	push	r14
    97fa:	ff 92       	push	r15
    97fc:	0f 93       	push	r16
    97fe:	1f 93       	push	r17
    9800:	cf 93       	push	r28
    9802:	df 93       	push	r29
    9804:	61 15       	cp	r22, r1
    9806:	71 05       	cpc	r23, r1
    9808:	11 f4       	brne	.+4      	; 0x980e <_ZN6String6concatEPKcj+0x16>
    980a:	80 e0       	ldi	r24, 0x00	; 0
    980c:	1a c0       	rjmp	.+52     	; 0x9842 <_ZN6String6concatEPKcj+0x4a>
    980e:	41 15       	cp	r20, r1
    9810:	51 05       	cpc	r21, r1
    9812:	b1 f0       	breq	.+44     	; 0x9840 <_ZN6String6concatEPKcj+0x48>
    9814:	7b 01       	movw	r14, r22
    9816:	ec 01       	movw	r28, r24
    9818:	8c 81       	ldd	r24, Y+4	; 0x04
    981a:	9d 81       	ldd	r25, Y+5	; 0x05
    981c:	8a 01       	movw	r16, r20
    981e:	08 0f       	add	r16, r24
    9820:	19 1f       	adc	r17, r25
    9822:	b8 01       	movw	r22, r16
    9824:	ce 01       	movw	r24, r28
    9826:	3b df       	rcall	.-394    	; 0x969e <_ZN6String7reserveEj>
    9828:	88 23       	and	r24, r24
    982a:	79 f3       	breq	.-34     	; 0x980a <_ZN6String6concatEPKcj+0x12>
    982c:	28 81       	ld	r18, Y
    982e:	39 81       	ldd	r19, Y+1	; 0x01
    9830:	8c 81       	ldd	r24, Y+4	; 0x04
    9832:	9d 81       	ldd	r25, Y+5	; 0x05
    9834:	b7 01       	movw	r22, r14
    9836:	82 0f       	add	r24, r18
    9838:	93 1f       	adc	r25, r19
    983a:	73 d2       	rcall	.+1254   	; 0x9d22 <strcpy>
    983c:	1d 83       	std	Y+5, r17	; 0x05
    983e:	0c 83       	std	Y+4, r16	; 0x04
    9840:	81 e0       	ldi	r24, 0x01	; 1
    9842:	df 91       	pop	r29
    9844:	cf 91       	pop	r28
    9846:	1f 91       	pop	r17
    9848:	0f 91       	pop	r16
    984a:	ff 90       	pop	r15
    984c:	ef 90       	pop	r14
    984e:	08 95       	ret

00009850 <_ZplRK15StringSumHelperRK6String>:
/*********************************************/
/*  Concatenate                              */
/*********************************************/

StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs)
{
    9850:	cf 93       	push	r28
    9852:	df 93       	push	r29
    9854:	ec 01       	movw	r28, r24
	StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
	if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
    9856:	fb 01       	movw	r30, r22
    9858:	44 81       	ldd	r20, Z+4	; 0x04
    985a:	55 81       	ldd	r21, Z+5	; 0x05
    985c:	60 81       	ld	r22, Z
    985e:	71 81       	ldd	r23, Z+1	; 0x01
    9860:	cb df       	rcall	.-106    	; 0x97f8 <_ZN6String6concatEPKcj>
    9862:	81 11       	cpse	r24, r1
    9864:	02 c0       	rjmp	.+4      	; 0x986a <_ZplRK15StringSumHelperRK6String+0x1a>
    9866:	ce 01       	movw	r24, r28
    9868:	f0 de       	rcall	.-544    	; 0x964a <_ZN6String10invalidateEv>
	return a;
}
    986a:	ce 01       	movw	r24, r28
    986c:	df 91       	pop	r29
    986e:	cf 91       	pop	r28
    9870:	08 95       	ret

00009872 <__udivmodsi4>:
    9872:	a1 e2       	ldi	r26, 0x21	; 33
    9874:	1a 2e       	mov	r1, r26
    9876:	aa 1b       	sub	r26, r26
    9878:	bb 1b       	sub	r27, r27
    987a:	fd 01       	movw	r30, r26
    987c:	0d c0       	rjmp	.+26     	; 0x9898 <__udivmodsi4_ep>

0000987e <__udivmodsi4_loop>:
    987e:	aa 1f       	adc	r26, r26
    9880:	bb 1f       	adc	r27, r27
    9882:	ee 1f       	adc	r30, r30
    9884:	ff 1f       	adc	r31, r31
    9886:	a2 17       	cp	r26, r18
    9888:	b3 07       	cpc	r27, r19
    988a:	e4 07       	cpc	r30, r20
    988c:	f5 07       	cpc	r31, r21
    988e:	20 f0       	brcs	.+8      	; 0x9898 <__udivmodsi4_ep>
    9890:	a2 1b       	sub	r26, r18
    9892:	b3 0b       	sbc	r27, r19
    9894:	e4 0b       	sbc	r30, r20
    9896:	f5 0b       	sbc	r31, r21

00009898 <__udivmodsi4_ep>:
    9898:	66 1f       	adc	r22, r22
    989a:	77 1f       	adc	r23, r23
    989c:	88 1f       	adc	r24, r24
    989e:	99 1f       	adc	r25, r25
    98a0:	1a 94       	dec	r1
    98a2:	69 f7       	brne	.-38     	; 0x987e <__udivmodsi4_loop>
    98a4:	60 95       	com	r22
    98a6:	70 95       	com	r23
    98a8:	80 95       	com	r24
    98aa:	90 95       	com	r25
    98ac:	9b 01       	movw	r18, r22
    98ae:	ac 01       	movw	r20, r24
    98b0:	bd 01       	movw	r22, r26
    98b2:	cf 01       	movw	r24, r30
    98b4:	08 95       	ret

000098b6 <__tablejump2__>:
    98b6:	ee 0f       	add	r30, r30
    98b8:	ff 1f       	adc	r31, r31
    98ba:	88 1f       	adc	r24, r24
    98bc:	8b bf       	out	0x3b, r24	; 59
    98be:	07 90       	elpm	r0, Z+
    98c0:	f6 91       	elpm	r31, Z
    98c2:	e0 2d       	mov	r30, r0
    98c4:	19 94       	eijmp

000098c6 <__umulhisi3>:
    98c6:	a2 9f       	mul	r26, r18
    98c8:	b0 01       	movw	r22, r0
    98ca:	b3 9f       	mul	r27, r19
    98cc:	c0 01       	movw	r24, r0
    98ce:	a3 9f       	mul	r26, r19
    98d0:	70 0d       	add	r23, r0
    98d2:	81 1d       	adc	r24, r1
    98d4:	11 24       	eor	r1, r1
    98d6:	91 1d       	adc	r25, r1
    98d8:	b2 9f       	mul	r27, r18
    98da:	70 0d       	add	r23, r0
    98dc:	81 1d       	adc	r24, r1
    98de:	11 24       	eor	r1, r1
    98e0:	91 1d       	adc	r25, r1
    98e2:	08 95       	ret

000098e4 <__muluhisi3>:
    98e4:	f0 df       	rcall	.-32     	; 0x98c6 <__umulhisi3>
    98e6:	a5 9f       	mul	r26, r21
    98e8:	90 0d       	add	r25, r0
    98ea:	b4 9f       	mul	r27, r20
    98ec:	90 0d       	add	r25, r0
    98ee:	a4 9f       	mul	r26, r20
    98f0:	80 0d       	add	r24, r0
    98f2:	91 1d       	adc	r25, r1
    98f4:	11 24       	eor	r1, r1
    98f6:	08 95       	ret

000098f8 <malloc>:
    98f8:	0f 93       	push	r16
    98fa:	1f 93       	push	r17
    98fc:	cf 93       	push	r28
    98fe:	df 93       	push	r29
    9900:	82 30       	cpi	r24, 0x02	; 2
    9902:	91 05       	cpc	r25, r1
    9904:	10 f4       	brcc	.+4      	; 0x990a <malloc+0x12>
    9906:	82 e0       	ldi	r24, 0x02	; 2
    9908:	90 e0       	ldi	r25, 0x00	; 0
    990a:	e0 91 34 05 	lds	r30, 0x0534	; 0x800534 <__flp>
    990e:	f0 91 35 05 	lds	r31, 0x0535	; 0x800535 <__flp+0x1>
    9912:	20 e0       	ldi	r18, 0x00	; 0
    9914:	30 e0       	ldi	r19, 0x00	; 0
    9916:	a0 e0       	ldi	r26, 0x00	; 0
    9918:	b0 e0       	ldi	r27, 0x00	; 0
    991a:	30 97       	sbiw	r30, 0x00	; 0
    991c:	19 f1       	breq	.+70     	; 0x9964 <malloc+0x6c>
    991e:	40 81       	ld	r20, Z
    9920:	51 81       	ldd	r21, Z+1	; 0x01
    9922:	02 81       	ldd	r16, Z+2	; 0x02
    9924:	13 81       	ldd	r17, Z+3	; 0x03
    9926:	48 17       	cp	r20, r24
    9928:	59 07       	cpc	r21, r25
    992a:	c8 f0       	brcs	.+50     	; 0x995e <malloc+0x66>
    992c:	84 17       	cp	r24, r20
    992e:	95 07       	cpc	r25, r21
    9930:	69 f4       	brne	.+26     	; 0x994c <malloc+0x54>
    9932:	10 97       	sbiw	r26, 0x00	; 0
    9934:	31 f0       	breq	.+12     	; 0x9942 <malloc+0x4a>
    9936:	12 96       	adiw	r26, 0x02	; 2
    9938:	0c 93       	st	X, r16
    993a:	12 97       	sbiw	r26, 0x02	; 2
    993c:	13 96       	adiw	r26, 0x03	; 3
    993e:	1c 93       	st	X, r17
    9940:	27 c0       	rjmp	.+78     	; 0x9990 <malloc+0x98>
    9942:	00 93 34 05 	sts	0x0534, r16	; 0x800534 <__flp>
    9946:	10 93 35 05 	sts	0x0535, r17	; 0x800535 <__flp+0x1>
    994a:	22 c0       	rjmp	.+68     	; 0x9990 <malloc+0x98>
    994c:	21 15       	cp	r18, r1
    994e:	31 05       	cpc	r19, r1
    9950:	19 f0       	breq	.+6      	; 0x9958 <malloc+0x60>
    9952:	42 17       	cp	r20, r18
    9954:	53 07       	cpc	r21, r19
    9956:	18 f4       	brcc	.+6      	; 0x995e <malloc+0x66>
    9958:	9a 01       	movw	r18, r20
    995a:	bd 01       	movw	r22, r26
    995c:	ef 01       	movw	r28, r30
    995e:	df 01       	movw	r26, r30
    9960:	f8 01       	movw	r30, r16
    9962:	db cf       	rjmp	.-74     	; 0x991a <malloc+0x22>
    9964:	21 15       	cp	r18, r1
    9966:	31 05       	cpc	r19, r1
    9968:	f9 f0       	breq	.+62     	; 0x99a8 <malloc+0xb0>
    996a:	28 1b       	sub	r18, r24
    996c:	39 0b       	sbc	r19, r25
    996e:	24 30       	cpi	r18, 0x04	; 4
    9970:	31 05       	cpc	r19, r1
    9972:	80 f4       	brcc	.+32     	; 0x9994 <malloc+0x9c>
    9974:	8a 81       	ldd	r24, Y+2	; 0x02
    9976:	9b 81       	ldd	r25, Y+3	; 0x03
    9978:	61 15       	cp	r22, r1
    997a:	71 05       	cpc	r23, r1
    997c:	21 f0       	breq	.+8      	; 0x9986 <malloc+0x8e>
    997e:	fb 01       	movw	r30, r22
    9980:	93 83       	std	Z+3, r25	; 0x03
    9982:	82 83       	std	Z+2, r24	; 0x02
    9984:	04 c0       	rjmp	.+8      	; 0x998e <malloc+0x96>
    9986:	90 93 35 05 	sts	0x0535, r25	; 0x800535 <__flp+0x1>
    998a:	80 93 34 05 	sts	0x0534, r24	; 0x800534 <__flp>
    998e:	fe 01       	movw	r30, r28
    9990:	32 96       	adiw	r30, 0x02	; 2
    9992:	44 c0       	rjmp	.+136    	; 0x9a1c <malloc+0x124>
    9994:	fe 01       	movw	r30, r28
    9996:	e2 0f       	add	r30, r18
    9998:	f3 1f       	adc	r31, r19
    999a:	81 93       	st	Z+, r24
    999c:	91 93       	st	Z+, r25
    999e:	22 50       	subi	r18, 0x02	; 2
    99a0:	31 09       	sbc	r19, r1
    99a2:	39 83       	std	Y+1, r19	; 0x01
    99a4:	28 83       	st	Y, r18
    99a6:	3a c0       	rjmp	.+116    	; 0x9a1c <malloc+0x124>
    99a8:	20 91 32 05 	lds	r18, 0x0532	; 0x800532 <__brkval>
    99ac:	30 91 33 05 	lds	r19, 0x0533	; 0x800533 <__brkval+0x1>
    99b0:	23 2b       	or	r18, r19
    99b2:	41 f4       	brne	.+16     	; 0x99c4 <malloc+0xcc>
    99b4:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    99b8:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    99bc:	30 93 33 05 	sts	0x0533, r19	; 0x800533 <__brkval+0x1>
    99c0:	20 93 32 05 	sts	0x0532, r18	; 0x800532 <__brkval>
    99c4:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    99c8:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    99cc:	21 15       	cp	r18, r1
    99ce:	31 05       	cpc	r19, r1
    99d0:	41 f4       	brne	.+16     	; 0x99e2 <malloc+0xea>
    99d2:	2d b7       	in	r18, 0x3d	; 61
    99d4:	3e b7       	in	r19, 0x3e	; 62
    99d6:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    99da:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    99de:	24 1b       	sub	r18, r20
    99e0:	35 0b       	sbc	r19, r21
    99e2:	e0 91 32 05 	lds	r30, 0x0532	; 0x800532 <__brkval>
    99e6:	f0 91 33 05 	lds	r31, 0x0533	; 0x800533 <__brkval+0x1>
    99ea:	e2 17       	cp	r30, r18
    99ec:	f3 07       	cpc	r31, r19
    99ee:	a0 f4       	brcc	.+40     	; 0x9a18 <malloc+0x120>
    99f0:	2e 1b       	sub	r18, r30
    99f2:	3f 0b       	sbc	r19, r31
    99f4:	28 17       	cp	r18, r24
    99f6:	39 07       	cpc	r19, r25
    99f8:	78 f0       	brcs	.+30     	; 0x9a18 <malloc+0x120>
    99fa:	ac 01       	movw	r20, r24
    99fc:	4e 5f       	subi	r20, 0xFE	; 254
    99fe:	5f 4f       	sbci	r21, 0xFF	; 255
    9a00:	24 17       	cp	r18, r20
    9a02:	35 07       	cpc	r19, r21
    9a04:	48 f0       	brcs	.+18     	; 0x9a18 <malloc+0x120>
    9a06:	4e 0f       	add	r20, r30
    9a08:	5f 1f       	adc	r21, r31
    9a0a:	50 93 33 05 	sts	0x0533, r21	; 0x800533 <__brkval+0x1>
    9a0e:	40 93 32 05 	sts	0x0532, r20	; 0x800532 <__brkval>
    9a12:	81 93       	st	Z+, r24
    9a14:	91 93       	st	Z+, r25
    9a16:	02 c0       	rjmp	.+4      	; 0x9a1c <malloc+0x124>
    9a18:	e0 e0       	ldi	r30, 0x00	; 0
    9a1a:	f0 e0       	ldi	r31, 0x00	; 0
    9a1c:	cf 01       	movw	r24, r30
    9a1e:	df 91       	pop	r29
    9a20:	cf 91       	pop	r28
    9a22:	1f 91       	pop	r17
    9a24:	0f 91       	pop	r16
    9a26:	08 95       	ret

00009a28 <free>:
    9a28:	cf 93       	push	r28
    9a2a:	df 93       	push	r29
    9a2c:	00 97       	sbiw	r24, 0x00	; 0
    9a2e:	09 f4       	brne	.+2      	; 0x9a32 <free+0xa>
    9a30:	81 c0       	rjmp	.+258    	; 0x9b34 <free+0x10c>
    9a32:	fc 01       	movw	r30, r24
    9a34:	32 97       	sbiw	r30, 0x02	; 2
    9a36:	13 82       	std	Z+3, r1	; 0x03
    9a38:	12 82       	std	Z+2, r1	; 0x02
    9a3a:	a0 91 34 05 	lds	r26, 0x0534	; 0x800534 <__flp>
    9a3e:	b0 91 35 05 	lds	r27, 0x0535	; 0x800535 <__flp+0x1>
    9a42:	10 97       	sbiw	r26, 0x00	; 0
    9a44:	81 f4       	brne	.+32     	; 0x9a66 <free+0x3e>
    9a46:	20 81       	ld	r18, Z
    9a48:	31 81       	ldd	r19, Z+1	; 0x01
    9a4a:	82 0f       	add	r24, r18
    9a4c:	93 1f       	adc	r25, r19
    9a4e:	20 91 32 05 	lds	r18, 0x0532	; 0x800532 <__brkval>
    9a52:	30 91 33 05 	lds	r19, 0x0533	; 0x800533 <__brkval+0x1>
    9a56:	28 17       	cp	r18, r24
    9a58:	39 07       	cpc	r19, r25
    9a5a:	51 f5       	brne	.+84     	; 0x9ab0 <free+0x88>
    9a5c:	f0 93 33 05 	sts	0x0533, r31	; 0x800533 <__brkval+0x1>
    9a60:	e0 93 32 05 	sts	0x0532, r30	; 0x800532 <__brkval>
    9a64:	67 c0       	rjmp	.+206    	; 0x9b34 <free+0x10c>
    9a66:	ed 01       	movw	r28, r26
    9a68:	20 e0       	ldi	r18, 0x00	; 0
    9a6a:	30 e0       	ldi	r19, 0x00	; 0
    9a6c:	ce 17       	cp	r28, r30
    9a6e:	df 07       	cpc	r29, r31
    9a70:	40 f4       	brcc	.+16     	; 0x9a82 <free+0x5a>
    9a72:	4a 81       	ldd	r20, Y+2	; 0x02
    9a74:	5b 81       	ldd	r21, Y+3	; 0x03
    9a76:	9e 01       	movw	r18, r28
    9a78:	41 15       	cp	r20, r1
    9a7a:	51 05       	cpc	r21, r1
    9a7c:	f1 f0       	breq	.+60     	; 0x9aba <free+0x92>
    9a7e:	ea 01       	movw	r28, r20
    9a80:	f5 cf       	rjmp	.-22     	; 0x9a6c <free+0x44>
    9a82:	d3 83       	std	Z+3, r29	; 0x03
    9a84:	c2 83       	std	Z+2, r28	; 0x02
    9a86:	40 81       	ld	r20, Z
    9a88:	51 81       	ldd	r21, Z+1	; 0x01
    9a8a:	84 0f       	add	r24, r20
    9a8c:	95 1f       	adc	r25, r21
    9a8e:	c8 17       	cp	r28, r24
    9a90:	d9 07       	cpc	r29, r25
    9a92:	59 f4       	brne	.+22     	; 0x9aaa <free+0x82>
    9a94:	88 81       	ld	r24, Y
    9a96:	99 81       	ldd	r25, Y+1	; 0x01
    9a98:	84 0f       	add	r24, r20
    9a9a:	95 1f       	adc	r25, r21
    9a9c:	02 96       	adiw	r24, 0x02	; 2
    9a9e:	91 83       	std	Z+1, r25	; 0x01
    9aa0:	80 83       	st	Z, r24
    9aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    9aa4:	9b 81       	ldd	r25, Y+3	; 0x03
    9aa6:	93 83       	std	Z+3, r25	; 0x03
    9aa8:	82 83       	std	Z+2, r24	; 0x02
    9aaa:	21 15       	cp	r18, r1
    9aac:	31 05       	cpc	r19, r1
    9aae:	29 f4       	brne	.+10     	; 0x9aba <free+0x92>
    9ab0:	f0 93 35 05 	sts	0x0535, r31	; 0x800535 <__flp+0x1>
    9ab4:	e0 93 34 05 	sts	0x0534, r30	; 0x800534 <__flp>
    9ab8:	3d c0       	rjmp	.+122    	; 0x9b34 <free+0x10c>
    9aba:	e9 01       	movw	r28, r18
    9abc:	fb 83       	std	Y+3, r31	; 0x03
    9abe:	ea 83       	std	Y+2, r30	; 0x02
    9ac0:	49 91       	ld	r20, Y+
    9ac2:	59 91       	ld	r21, Y+
    9ac4:	c4 0f       	add	r28, r20
    9ac6:	d5 1f       	adc	r29, r21
    9ac8:	ec 17       	cp	r30, r28
    9aca:	fd 07       	cpc	r31, r29
    9acc:	61 f4       	brne	.+24     	; 0x9ae6 <free+0xbe>
    9ace:	80 81       	ld	r24, Z
    9ad0:	91 81       	ldd	r25, Z+1	; 0x01
    9ad2:	84 0f       	add	r24, r20
    9ad4:	95 1f       	adc	r25, r21
    9ad6:	02 96       	adiw	r24, 0x02	; 2
    9ad8:	e9 01       	movw	r28, r18
    9ada:	99 83       	std	Y+1, r25	; 0x01
    9adc:	88 83       	st	Y, r24
    9ade:	82 81       	ldd	r24, Z+2	; 0x02
    9ae0:	93 81       	ldd	r25, Z+3	; 0x03
    9ae2:	9b 83       	std	Y+3, r25	; 0x03
    9ae4:	8a 83       	std	Y+2, r24	; 0x02
    9ae6:	e0 e0       	ldi	r30, 0x00	; 0
    9ae8:	f0 e0       	ldi	r31, 0x00	; 0
    9aea:	12 96       	adiw	r26, 0x02	; 2
    9aec:	8d 91       	ld	r24, X+
    9aee:	9c 91       	ld	r25, X
    9af0:	13 97       	sbiw	r26, 0x03	; 3
    9af2:	00 97       	sbiw	r24, 0x00	; 0
    9af4:	19 f0       	breq	.+6      	; 0x9afc <free+0xd4>
    9af6:	fd 01       	movw	r30, r26
    9af8:	dc 01       	movw	r26, r24
    9afa:	f7 cf       	rjmp	.-18     	; 0x9aea <free+0xc2>
    9afc:	8d 91       	ld	r24, X+
    9afe:	9c 91       	ld	r25, X
    9b00:	11 97       	sbiw	r26, 0x01	; 1
    9b02:	9d 01       	movw	r18, r26
    9b04:	2e 5f       	subi	r18, 0xFE	; 254
    9b06:	3f 4f       	sbci	r19, 0xFF	; 255
    9b08:	82 0f       	add	r24, r18
    9b0a:	93 1f       	adc	r25, r19
    9b0c:	20 91 32 05 	lds	r18, 0x0532	; 0x800532 <__brkval>
    9b10:	30 91 33 05 	lds	r19, 0x0533	; 0x800533 <__brkval+0x1>
    9b14:	28 17       	cp	r18, r24
    9b16:	39 07       	cpc	r19, r25
    9b18:	69 f4       	brne	.+26     	; 0x9b34 <free+0x10c>
    9b1a:	30 97       	sbiw	r30, 0x00	; 0
    9b1c:	29 f4       	brne	.+10     	; 0x9b28 <free+0x100>
    9b1e:	10 92 35 05 	sts	0x0535, r1	; 0x800535 <__flp+0x1>
    9b22:	10 92 34 05 	sts	0x0534, r1	; 0x800534 <__flp>
    9b26:	02 c0       	rjmp	.+4      	; 0x9b2c <free+0x104>
    9b28:	13 82       	std	Z+3, r1	; 0x03
    9b2a:	12 82       	std	Z+2, r1	; 0x02
    9b2c:	b0 93 33 05 	sts	0x0533, r27	; 0x800533 <__brkval+0x1>
    9b30:	a0 93 32 05 	sts	0x0532, r26	; 0x800532 <__brkval>
    9b34:	df 91       	pop	r29
    9b36:	cf 91       	pop	r28
    9b38:	08 95       	ret

00009b3a <realloc>:
    9b3a:	6f 92       	push	r6
    9b3c:	7f 92       	push	r7
    9b3e:	8f 92       	push	r8
    9b40:	9f 92       	push	r9
    9b42:	af 92       	push	r10
    9b44:	bf 92       	push	r11
    9b46:	cf 92       	push	r12
    9b48:	df 92       	push	r13
    9b4a:	ef 92       	push	r14
    9b4c:	ff 92       	push	r15
    9b4e:	0f 93       	push	r16
    9b50:	1f 93       	push	r17
    9b52:	cf 93       	push	r28
    9b54:	df 93       	push	r29
    9b56:	00 97       	sbiw	r24, 0x00	; 0
    9b58:	81 f4       	brne	.+32     	; 0x9b7a <realloc+0x40>
    9b5a:	cb 01       	movw	r24, r22
    9b5c:	df 91       	pop	r29
    9b5e:	cf 91       	pop	r28
    9b60:	1f 91       	pop	r17
    9b62:	0f 91       	pop	r16
    9b64:	ff 90       	pop	r15
    9b66:	ef 90       	pop	r14
    9b68:	df 90       	pop	r13
    9b6a:	cf 90       	pop	r12
    9b6c:	bf 90       	pop	r11
    9b6e:	af 90       	pop	r10
    9b70:	9f 90       	pop	r9
    9b72:	8f 90       	pop	r8
    9b74:	7f 90       	pop	r7
    9b76:	6f 90       	pop	r6
    9b78:	bf ce       	rjmp	.-642    	; 0x98f8 <malloc>
    9b7a:	fc 01       	movw	r30, r24
    9b7c:	e6 0f       	add	r30, r22
    9b7e:	f7 1f       	adc	r31, r23
    9b80:	9c 01       	movw	r18, r24
    9b82:	22 50       	subi	r18, 0x02	; 2
    9b84:	31 09       	sbc	r19, r1
    9b86:	e2 17       	cp	r30, r18
    9b88:	f3 07       	cpc	r31, r19
    9b8a:	08 f4       	brcc	.+2      	; 0x9b8e <realloc+0x54>
    9b8c:	a5 c0       	rjmp	.+330    	; 0x9cd8 <realloc+0x19e>
    9b8e:	ec 01       	movw	r28, r24
    9b90:	d9 01       	movw	r26, r18
    9b92:	0d 91       	ld	r16, X+
    9b94:	1c 91       	ld	r17, X
    9b96:	11 97       	sbiw	r26, 0x01	; 1
    9b98:	06 17       	cp	r16, r22
    9b9a:	17 07       	cpc	r17, r23
    9b9c:	a8 f0       	brcs	.+42     	; 0x9bc8 <realloc+0x8e>
    9b9e:	05 30       	cpi	r16, 0x05	; 5
    9ba0:	11 05       	cpc	r17, r1
    9ba2:	08 f4       	brcc	.+2      	; 0x9ba6 <realloc+0x6c>
    9ba4:	97 c0       	rjmp	.+302    	; 0x9cd4 <realloc+0x19a>
    9ba6:	c8 01       	movw	r24, r16
    9ba8:	04 97       	sbiw	r24, 0x04	; 4
    9baa:	86 17       	cp	r24, r22
    9bac:	97 07       	cpc	r25, r23
    9bae:	08 f4       	brcc	.+2      	; 0x9bb2 <realloc+0x78>
    9bb0:	91 c0       	rjmp	.+290    	; 0x9cd4 <realloc+0x19a>
    9bb2:	02 50       	subi	r16, 0x02	; 2
    9bb4:	11 09       	sbc	r17, r1
    9bb6:	06 1b       	sub	r16, r22
    9bb8:	17 0b       	sbc	r17, r23
    9bba:	01 93       	st	Z+, r16
    9bbc:	11 93       	st	Z+, r17
    9bbe:	6d 93       	st	X+, r22
    9bc0:	7c 93       	st	X, r23
    9bc2:	cf 01       	movw	r24, r30
    9bc4:	31 df       	rcall	.-414    	; 0x9a28 <free>
    9bc6:	86 c0       	rjmp	.+268    	; 0x9cd4 <realloc+0x19a>
    9bc8:	5b 01       	movw	r10, r22
    9bca:	a0 1a       	sub	r10, r16
    9bcc:	b1 0a       	sbc	r11, r17
    9bce:	4c 01       	movw	r8, r24
    9bd0:	80 0e       	add	r8, r16
    9bd2:	91 1e       	adc	r9, r17
    9bd4:	a0 91 34 05 	lds	r26, 0x0534	; 0x800534 <__flp>
    9bd8:	b0 91 35 05 	lds	r27, 0x0535	; 0x800535 <__flp+0x1>
    9bdc:	61 2c       	mov	r6, r1
    9bde:	71 2c       	mov	r7, r1
    9be0:	e1 2c       	mov	r14, r1
    9be2:	f1 2c       	mov	r15, r1
    9be4:	10 97       	sbiw	r26, 0x00	; 0
    9be6:	09 f4       	brne	.+2      	; 0x9bea <realloc+0xb0>
    9be8:	46 c0       	rjmp	.+140    	; 0x9c76 <realloc+0x13c>
    9bea:	8d 91       	ld	r24, X+
    9bec:	9c 91       	ld	r25, X
    9bee:	11 97       	sbiw	r26, 0x01	; 1
    9bf0:	a8 15       	cp	r26, r8
    9bf2:	b9 05       	cpc	r27, r9
    9bf4:	b1 f5       	brne	.+108    	; 0x9c62 <realloc+0x128>
    9bf6:	6c 01       	movw	r12, r24
    9bf8:	42 e0       	ldi	r20, 0x02	; 2
    9bfa:	c4 0e       	add	r12, r20
    9bfc:	d1 1c       	adc	r13, r1
    9bfe:	ca 14       	cp	r12, r10
    9c00:	db 04       	cpc	r13, r11
    9c02:	78 f1       	brcs	.+94     	; 0x9c62 <realloc+0x128>
    9c04:	4c 01       	movw	r8, r24
    9c06:	8a 18       	sub	r8, r10
    9c08:	9b 08       	sbc	r9, r11
    9c0a:	64 01       	movw	r12, r8
    9c0c:	42 e0       	ldi	r20, 0x02	; 2
    9c0e:	c4 0e       	add	r12, r20
    9c10:	d1 1c       	adc	r13, r1
    9c12:	12 96       	adiw	r26, 0x02	; 2
    9c14:	bc 90       	ld	r11, X
    9c16:	12 97       	sbiw	r26, 0x02	; 2
    9c18:	13 96       	adiw	r26, 0x03	; 3
    9c1a:	ac 91       	ld	r26, X
    9c1c:	b5 e0       	ldi	r27, 0x05	; 5
    9c1e:	cb 16       	cp	r12, r27
    9c20:	d1 04       	cpc	r13, r1
    9c22:	40 f0       	brcs	.+16     	; 0x9c34 <realloc+0xfa>
    9c24:	b2 82       	std	Z+2, r11	; 0x02
    9c26:	a3 83       	std	Z+3, r26	; 0x03
    9c28:	91 82       	std	Z+1, r9	; 0x01
    9c2a:	80 82       	st	Z, r8
    9c2c:	d9 01       	movw	r26, r18
    9c2e:	6d 93       	st	X+, r22
    9c30:	7c 93       	st	X, r23
    9c32:	09 c0       	rjmp	.+18     	; 0x9c46 <realloc+0x10c>
    9c34:	0e 5f       	subi	r16, 0xFE	; 254
    9c36:	1f 4f       	sbci	r17, 0xFF	; 255
    9c38:	80 0f       	add	r24, r16
    9c3a:	91 1f       	adc	r25, r17
    9c3c:	f9 01       	movw	r30, r18
    9c3e:	91 83       	std	Z+1, r25	; 0x01
    9c40:	80 83       	st	Z, r24
    9c42:	eb 2d       	mov	r30, r11
    9c44:	fa 2f       	mov	r31, r26
    9c46:	e1 14       	cp	r14, r1
    9c48:	f1 04       	cpc	r15, r1
    9c4a:	31 f0       	breq	.+12     	; 0x9c58 <realloc+0x11e>
    9c4c:	d7 01       	movw	r26, r14
    9c4e:	13 96       	adiw	r26, 0x03	; 3
    9c50:	fc 93       	st	X, r31
    9c52:	ee 93       	st	-X, r30
    9c54:	12 97       	sbiw	r26, 0x02	; 2
    9c56:	3e c0       	rjmp	.+124    	; 0x9cd4 <realloc+0x19a>
    9c58:	f0 93 35 05 	sts	0x0535, r31	; 0x800535 <__flp+0x1>
    9c5c:	e0 93 34 05 	sts	0x0534, r30	; 0x800534 <__flp>
    9c60:	39 c0       	rjmp	.+114    	; 0x9cd4 <realloc+0x19a>
    9c62:	68 16       	cp	r6, r24
    9c64:	79 06       	cpc	r7, r25
    9c66:	08 f4       	brcc	.+2      	; 0x9c6a <realloc+0x130>
    9c68:	3c 01       	movw	r6, r24
    9c6a:	7d 01       	movw	r14, r26
    9c6c:	12 96       	adiw	r26, 0x02	; 2
    9c6e:	0d 90       	ld	r0, X+
    9c70:	bc 91       	ld	r27, X
    9c72:	a0 2d       	mov	r26, r0
    9c74:	b7 cf       	rjmp	.-146    	; 0x9be4 <realloc+0xaa>
    9c76:	80 91 32 05 	lds	r24, 0x0532	; 0x800532 <__brkval>
    9c7a:	90 91 33 05 	lds	r25, 0x0533	; 0x800533 <__brkval+0x1>
    9c7e:	88 16       	cp	r8, r24
    9c80:	99 06       	cpc	r9, r25
    9c82:	e1 f4       	brne	.+56     	; 0x9cbc <realloc+0x182>
    9c84:	66 16       	cp	r6, r22
    9c86:	77 06       	cpc	r7, r23
    9c88:	c8 f4       	brcc	.+50     	; 0x9cbc <realloc+0x182>
    9c8a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
    9c8e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    9c92:	00 97       	sbiw	r24, 0x00	; 0
    9c94:	41 f4       	brne	.+16     	; 0x9ca6 <realloc+0x16c>
    9c96:	8d b7       	in	r24, 0x3d	; 61
    9c98:	9e b7       	in	r25, 0x3e	; 62
    9c9a:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    9c9e:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    9ca2:	84 1b       	sub	r24, r20
    9ca4:	95 0b       	sbc	r25, r21
    9ca6:	e8 17       	cp	r30, r24
    9ca8:	f9 07       	cpc	r31, r25
    9caa:	b0 f4       	brcc	.+44     	; 0x9cd8 <realloc+0x19e>
    9cac:	f0 93 33 05 	sts	0x0533, r31	; 0x800533 <__brkval+0x1>
    9cb0:	e0 93 32 05 	sts	0x0532, r30	; 0x800532 <__brkval>
    9cb4:	f9 01       	movw	r30, r18
    9cb6:	71 83       	std	Z+1, r23	; 0x01
    9cb8:	60 83       	st	Z, r22
    9cba:	0c c0       	rjmp	.+24     	; 0x9cd4 <realloc+0x19a>
    9cbc:	cb 01       	movw	r24, r22
    9cbe:	1c de       	rcall	.-968    	; 0x98f8 <malloc>
    9cc0:	7c 01       	movw	r14, r24
    9cc2:	00 97       	sbiw	r24, 0x00	; 0
    9cc4:	49 f0       	breq	.+18     	; 0x9cd8 <realloc+0x19e>
    9cc6:	a8 01       	movw	r20, r16
    9cc8:	be 01       	movw	r22, r28
    9cca:	1b d0       	rcall	.+54     	; 0x9d02 <memcpy>
    9ccc:	ce 01       	movw	r24, r28
    9cce:	ac de       	rcall	.-680    	; 0x9a28 <free>
    9cd0:	c7 01       	movw	r24, r14
    9cd2:	04 c0       	rjmp	.+8      	; 0x9cdc <realloc+0x1a2>
    9cd4:	ce 01       	movw	r24, r28
    9cd6:	02 c0       	rjmp	.+4      	; 0x9cdc <realloc+0x1a2>
    9cd8:	80 e0       	ldi	r24, 0x00	; 0
    9cda:	90 e0       	ldi	r25, 0x00	; 0
    9cdc:	df 91       	pop	r29
    9cde:	cf 91       	pop	r28
    9ce0:	1f 91       	pop	r17
    9ce2:	0f 91       	pop	r16
    9ce4:	ff 90       	pop	r15
    9ce6:	ef 90       	pop	r14
    9ce8:	df 90       	pop	r13
    9cea:	cf 90       	pop	r12
    9cec:	bf 90       	pop	r11
    9cee:	af 90       	pop	r10
    9cf0:	9f 90       	pop	r9
    9cf2:	8f 90       	pop	r8
    9cf4:	7f 90       	pop	r7
    9cf6:	6f 90       	pop	r6
    9cf8:	08 95       	ret

00009cfa <abort>:
    9cfa:	81 e0       	ldi	r24, 0x01	; 1
    9cfc:	90 e0       	ldi	r25, 0x00	; 0
    9cfe:	f8 94       	cli
    9d00:	54 c0       	rjmp	.+168    	; 0x9daa <__do_global_dtors>

00009d02 <memcpy>:
    9d02:	fb 01       	movw	r30, r22
    9d04:	dc 01       	movw	r26, r24
    9d06:	02 c0       	rjmp	.+4      	; 0x9d0c <memcpy+0xa>
    9d08:	01 90       	ld	r0, Z+
    9d0a:	0d 92       	st	X+, r0
    9d0c:	41 50       	subi	r20, 0x01	; 1
    9d0e:	50 40       	sbci	r21, 0x00	; 0
    9d10:	d8 f7       	brcc	.-10     	; 0x9d08 <memcpy+0x6>
    9d12:	08 95       	ret

00009d14 <memset>:
    9d14:	dc 01       	movw	r26, r24
    9d16:	01 c0       	rjmp	.+2      	; 0x9d1a <memset+0x6>
    9d18:	6d 93       	st	X+, r22
    9d1a:	41 50       	subi	r20, 0x01	; 1
    9d1c:	50 40       	sbci	r21, 0x00	; 0
    9d1e:	e0 f7       	brcc	.-8      	; 0x9d18 <memset+0x4>
    9d20:	08 95       	ret

00009d22 <strcpy>:
    9d22:	fb 01       	movw	r30, r22
    9d24:	dc 01       	movw	r26, r24
    9d26:	01 90       	ld	r0, Z+
    9d28:	0d 92       	st	X+, r0
    9d2a:	00 20       	and	r0, r0
    9d2c:	e1 f7       	brne	.-8      	; 0x9d26 <strcpy+0x4>
    9d2e:	08 95       	ret

00009d30 <itoa>:
    9d30:	45 32       	cpi	r20, 0x25	; 37
    9d32:	51 05       	cpc	r21, r1
    9d34:	18 f4       	brcc	.+6      	; 0x9d3c <itoa+0xc>
    9d36:	42 30       	cpi	r20, 0x02	; 2
    9d38:	08 f0       	brcs	.+2      	; 0x9d3c <itoa+0xc>
    9d3a:	04 c0       	rjmp	.+8      	; 0x9d44 <__itoa_ncheck>
    9d3c:	fb 01       	movw	r30, r22
    9d3e:	10 82       	st	Z, r1
    9d40:	cb 01       	movw	r24, r22
    9d42:	08 95       	ret

00009d44 <__itoa_ncheck>:
    9d44:	bb 27       	eor	r27, r27
    9d46:	4a 30       	cpi	r20, 0x0A	; 10
    9d48:	31 f4       	brne	.+12     	; 0x9d56 <__itoa_ncheck+0x12>
    9d4a:	99 23       	and	r25, r25
    9d4c:	22 f4       	brpl	.+8      	; 0x9d56 <__itoa_ncheck+0x12>
    9d4e:	bd e2       	ldi	r27, 0x2D	; 45
    9d50:	90 95       	com	r25
    9d52:	81 95       	neg	r24
    9d54:	9f 4f       	sbci	r25, 0xFF	; 255
    9d56:	01 c0       	rjmp	.+2      	; 0x9d5a <__utoa_common>

00009d58 <__utoa_ncheck>:
    9d58:	bb 27       	eor	r27, r27

00009d5a <__utoa_common>:
    9d5a:	fb 01       	movw	r30, r22
    9d5c:	55 27       	eor	r21, r21
    9d5e:	aa 27       	eor	r26, r26
    9d60:	88 0f       	add	r24, r24
    9d62:	99 1f       	adc	r25, r25
    9d64:	aa 1f       	adc	r26, r26
    9d66:	a4 17       	cp	r26, r20
    9d68:	10 f0       	brcs	.+4      	; 0x9d6e <__utoa_common+0x14>
    9d6a:	a4 1b       	sub	r26, r20
    9d6c:	83 95       	inc	r24
    9d6e:	50 51       	subi	r21, 0x10	; 16
    9d70:	b9 f7       	brne	.-18     	; 0x9d60 <__utoa_common+0x6>
    9d72:	a0 5d       	subi	r26, 0xD0	; 208
    9d74:	aa 33       	cpi	r26, 0x3A	; 58
    9d76:	08 f0       	brcs	.+2      	; 0x9d7a <__utoa_common+0x20>
    9d78:	a9 5d       	subi	r26, 0xD9	; 217
    9d7a:	a1 93       	st	Z+, r26
    9d7c:	00 97       	sbiw	r24, 0x00	; 0
    9d7e:	79 f7       	brne	.-34     	; 0x9d5e <__utoa_common+0x4>
    9d80:	b1 11       	cpse	r27, r1
    9d82:	b1 93       	st	Z+, r27
    9d84:	11 92       	st	Z+, r1
    9d86:	cb 01       	movw	r24, r22
    9d88:	00 c0       	rjmp	.+0      	; 0x9d8a <strrev>

00009d8a <strrev>:
    9d8a:	dc 01       	movw	r26, r24
    9d8c:	fc 01       	movw	r30, r24
    9d8e:	67 2f       	mov	r22, r23
    9d90:	71 91       	ld	r23, Z+
    9d92:	77 23       	and	r23, r23
    9d94:	e1 f7       	brne	.-8      	; 0x9d8e <strrev+0x4>
    9d96:	32 97       	sbiw	r30, 0x02	; 2
    9d98:	04 c0       	rjmp	.+8      	; 0x9da2 <strrev+0x18>
    9d9a:	7c 91       	ld	r23, X
    9d9c:	6d 93       	st	X+, r22
    9d9e:	70 83       	st	Z, r23
    9da0:	62 91       	ld	r22, -Z
    9da2:	ae 17       	cp	r26, r30
    9da4:	bf 07       	cpc	r27, r31
    9da6:	c8 f3       	brcs	.-14     	; 0x9d9a <strrev+0x10>
    9da8:	08 95       	ret

00009daa <__do_global_dtors>:
    9daa:	17 e0       	ldi	r17, 0x07	; 7
    9dac:	c8 e6       	ldi	r28, 0x68	; 104
    9dae:	d7 e0       	ldi	r29, 0x07	; 7
    9db0:	00 e0       	ldi	r16, 0x00	; 0
    9db2:	05 c0       	rjmp	.+10     	; 0x9dbe <__do_global_dtors+0x14>
    9db4:	80 2f       	mov	r24, r16
    9db6:	fe 01       	movw	r30, r28
    9db8:	7e dd       	rcall	.-1284   	; 0x98b6 <__tablejump2__>
    9dba:	21 96       	adiw	r28, 0x01	; 1
    9dbc:	01 1d       	adc	r16, r1
    9dbe:	c9 36       	cpi	r28, 0x69	; 105
    9dc0:	d1 07       	cpc	r29, r17
    9dc2:	80 e0       	ldi	r24, 0x00	; 0
    9dc4:	08 07       	cpc	r16, r24
    9dc6:	b1 f7       	brne	.-20     	; 0x9db4 <__do_global_dtors+0xa>
    9dc8:	f8 94       	cli

00009dca <__stop_program>:
    9dca:	ff cf       	rjmp	.-2      	; 0x9dca <__stop_program>
